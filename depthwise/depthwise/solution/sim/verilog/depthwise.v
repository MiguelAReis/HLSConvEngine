// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="depthwise_depthwise,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.215500,HLS_SYN_LAT=10597,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=3767,HLS_SYN_LUT=3497,HLS_VERSION=2020_2}" *)

module depthwise (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_TDATA,
        strm_in_TVALID,
        strm_in_TREADY,
        strm_in_TKEEP,
        strm_in_TSTRB,
        strm_in_TLAST,
        strm_out_TDATA,
        strm_out_TVALID,
        strm_out_TREADY,
        strm_out_TKEEP,
        strm_out_TSTRB,
        strm_out_TLAST,
        kernelN,
        kernelSize,
        mapSizeX,
        mapSizeY,
        relu
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_state5 = 20'd4;
parameter    ap_ST_fsm_state6 = 20'd8;
parameter    ap_ST_fsm_state7 = 20'd16;
parameter    ap_ST_fsm_pp1_stage0 = 20'd32;
parameter    ap_ST_fsm_state12 = 20'd64;
parameter    ap_ST_fsm_state13 = 20'd128;
parameter    ap_ST_fsm_state14 = 20'd256;
parameter    ap_ST_fsm_state15 = 20'd512;
parameter    ap_ST_fsm_pp2_stage0 = 20'd1024;
parameter    ap_ST_fsm_pp2_stage1 = 20'd2048;
parameter    ap_ST_fsm_pp2_stage2 = 20'd4096;
parameter    ap_ST_fsm_pp2_stage3 = 20'd8192;
parameter    ap_ST_fsm_pp2_stage4 = 20'd16384;
parameter    ap_ST_fsm_pp2_stage5 = 20'd32768;
parameter    ap_ST_fsm_pp2_stage6 = 20'd65536;
parameter    ap_ST_fsm_pp2_stage7 = 20'd131072;
parameter    ap_ST_fsm_pp2_stage8 = 20'd262144;
parameter    ap_ST_fsm_state32 = 20'd524288;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_TDATA;
input   strm_in_TVALID;
output   strm_in_TREADY;
input  [3:0] strm_in_TKEEP;
input  [3:0] strm_in_TSTRB;
input  [0:0] strm_in_TLAST;
output  [31:0] strm_out_TDATA;
output   strm_out_TVALID;
input   strm_out_TREADY;
output  [3:0] strm_out_TKEEP;
output  [3:0] strm_out_TSTRB;
output  [0:0] strm_out_TLAST;
input  [31:0] kernelN;
input  [31:0] kernelSize;
input  [31:0] mapSizeX;
input  [31:0] mapSizeY;
input   relu;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    strm_in_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln52_reg_2256;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln64_fu_977_p2;
wire   [0:0] icmp_ln67_fu_982_p2;
wire    ap_CS_fsm_pp2_stage8;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage8;
reg   [0:0] icmp_ln86_reg_2415;
reg   [0:0] icmp_ln99_8_reg_2723;
reg   [0:0] icmp_ln105_reg_2727;
reg   [0:0] cmp92_reg_2384;
reg    strm_out_TDATA_blk_n;
wire    ap_CS_fsm_pp2_stage5;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage5;
reg   [0:0] icmp_ln99_8_reg_2723_pp2_iter1_reg;
reg   [0:0] icmp_ln105_reg_2727_pp2_iter1_reg;
reg   [0:0] icmp_ln100_reg_2526;
reg   [0:0] icmp_ln100_reg_2526_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_pp2_stage6;
reg   [35:0] indvar_flatten17_reg_408;
reg   [31:0] n_reg_419;
reg   [3:0] indvar_flatten_reg_430;
reg   [1:0] y_1_reg_441;
reg   [1:0] x_1_reg_452;
reg   [30:0] n_1_reg_486;
reg   [31:0] x_3_reg_497;
reg   [17:0] phi_mul_reg_508;
reg   [31:0] x_7_reg_519;
reg  signed [31:0] kn_reg_555;
reg   [31:0] x_5_reg_567;
reg   [31:0] x_9_reg_578;
reg   [31:0] kn_9_reg_590;
wire   [3:0] filter_V_q0;
reg  signed [3:0] reg_611;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state17_pp2_stage1_iter0;
wire    ap_block_state26_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state19_pp2_stage3_iter0;
wire    ap_block_state28_pp2_stage3_iter1;
wire    ap_block_pp2_stage3_11001;
reg   [0:0] icmp_ln99_2_reg_2473;
wire    ap_block_state21_pp2_stage5_iter0;
reg    ap_predicate_op544_write_state30;
reg    ap_block_state30_pp2_stage5_iter1;
reg    ap_block_state30_io;
reg    ap_block_pp2_stage5_11001;
reg   [0:0] icmp_ln99_4_reg_2566;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state23_pp2_stage7_iter0;
wire    ap_block_pp2_stage7_11001;
reg   [0:0] icmp_ln99_6_reg_2651;
reg  signed [3:0] reg_615;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state18_pp2_stage2_iter0;
wire    ap_block_state27_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
reg   [0:0] icmp_ln99_1_reg_2435;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state20_pp2_stage4_iter0;
wire    ap_block_state29_pp2_stage4_iter1;
wire    ap_block_pp2_stage4_11001;
reg   [0:0] icmp_ln99_3_reg_2489;
wire    ap_block_state22_pp2_stage6_iter0;
reg    ap_predicate_op546_write_state31;
reg    ap_block_state31_pp2_stage6_iter1;
reg    ap_block_state31_io;
reg    ap_block_pp2_stage6_11001;
reg   [0:0] icmp_ln99_5_reg_2582;
reg    ap_predicate_op476_read_state24;
reg    ap_block_state24_pp2_stage8_iter0;
reg    ap_block_pp2_stage8_11001;
reg   [0:0] icmp_ln99_7_reg_2667;
wire  signed [3:0] featureMap_V_q0;
reg  signed [3:0] reg_619;
wire  signed [3:0] featureMap_V_q1;
reg  signed [3:0] reg_624;
wire   [15:0] empty_fu_628_p1;
reg   [15:0] empty_reg_2157;
wire   [15:0] empty_14_fu_632_p1;
reg   [15:0] empty_14_reg_2162;
wire   [15:0] empty_15_fu_636_p1;
reg   [15:0] empty_15_reg_2168;
wire   [3:0] bias_V_fu_640_p1;
reg   [3:0] bias_V_reg_2173;
wire   [35:0] bound4_fu_660_p2;
reg   [35:0] bound4_reg_2178;
wire   [0:0] cmp22_not_mid113_fu_666_p2;
reg   [0:0] cmp22_not_mid113_reg_2183;
wire   [35:0] add_ln47_1_fu_672_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] rev107_fu_687_p2;
reg   [0:0] rev107_reg_2193;
wire   [0:0] icmp_ln47_fu_693_p2;
reg   [0:0] icmp_ln47_reg_2198;
wire   [0:0] icmp_ln49_fu_704_p2;
reg   [0:0] icmp_ln49_reg_2202;
wire   [31:0] select_ln47_1_fu_718_p3;
reg   [31:0] select_ln47_1_reg_2207;
wire   [0:0] and_ln47_fu_738_p2;
reg   [0:0] and_ln47_reg_2214;
wire   [1:0] add_ln49_fu_744_p2;
reg   [1:0] add_ln49_reg_2219;
wire   [1:0] select_ln49_fu_756_p3;
reg   [1:0] select_ln49_reg_2224;
reg   [1:0] select_ln49_reg_2224_pp0_iter1_reg;
wire   [1:0] select_ln49_1_fu_764_p3;
reg   [1:0] select_ln49_1_reg_2230;
wire   [1:0] add_ln50_fu_772_p2;
wire   [3:0] select_ln49_3_fu_784_p3;
wire   [13:0] trunc_ln54_fu_830_p1;
reg   [13:0] trunc_ln54_reg_2246;
wire   [11:0] trunc_ln54_1_fu_834_p1;
reg   [11:0] trunc_ln54_1_reg_2251;
wire   [0:0] or_ln52_fu_873_p2;
wire   [31:0] sub_fu_910_p2;
reg   [31:0] sub_reg_2260;
wire    ap_CS_fsm_state5;
wire   [17:0] trunc_ln70_fu_915_p1;
reg   [17:0] trunc_ln70_reg_2265;
wire  signed [17:0] empty_18_fu_918_p1;
reg  signed [17:0] empty_18_reg_2270;
wire   [1:0] y_3_fu_921_p2;
reg   [1:0] y_3_reg_2279;
wire    ap_CS_fsm_state6;
wire   [17:0] zext_ln61_fu_933_p1;
reg   [17:0] zext_ln61_reg_2287;
wire   [0:0] icmp_ln61_fu_927_p2;
wire  signed [15:0] outMapYSize_fu_941_p2;
reg  signed [15:0] outMapYSize_reg_2300;
wire   [15:0] outMapXSize_fu_951_p2;
reg   [15:0] outMapXSize_reg_2306;
wire   [0:0] icmp_ln62_fu_961_p2;
wire    ap_CS_fsm_state7;
wire   [30:0] n_2_fu_967_p2;
reg    ap_predicate_op169_read_state8;
reg    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln64_reg_2320;
reg   [0:0] icmp_ln64_reg_2320_pp1_iter1_reg;
reg   [0:0] icmp_ln64_reg_2320_pp1_iter2_reg;
reg   [0:0] icmp_ln67_reg_2324;
reg   [0:0] icmp_ln67_reg_2324_pp1_iter1_reg;
reg   [0:0] icmp_ln67_reg_2324_pp1_iter2_reg;
wire   [17:0] add_ln67_fu_987_p2;
wire   [3:0] trunc_ln69_1_fu_992_p1;
reg   [3:0] trunc_ln69_1_reg_2333;
reg   [3:0] trunc_ln69_1_reg_2333_pp1_iter1_reg;
reg   [3:0] trunc_ln69_1_reg_2333_pp1_iter2_reg;
wire   [17:0] trunc_ln64_fu_996_p1;
reg   [17:0] trunc_ln64_reg_2338;
wire   [31:0] x_4_fu_1004_p2;
wire    ap_CS_fsm_state12;
wire  signed [31:0] conv69_fu_1013_p1;
reg  signed [31:0] conv69_reg_2348;
wire    ap_CS_fsm_state13;
wire  signed [7:0] conv_i38_fu_1016_p1;
reg  signed [7:0] conv_i38_reg_2353;
wire   [16:0] sub91_fu_1019_p2;
reg   [16:0] sub91_reg_2358;
wire  signed [31:0] grp_fu_957_p2;
reg  signed [31:0] mul_ln102_reg_2363;
wire   [14:0] y_4_fu_1025_p2;
reg   [14:0] y_4_reg_2376;
wire    ap_CS_fsm_state14;
wire    regslice_both_strm_out_V_data_V_U_apdone_blk;
wire   [0:0] cmp92_fu_1048_p2;
wire   [0:0] icmp_ln80_fu_1035_p2;
wire   [17:0] and99_cast_fu_1059_p1;
reg   [17:0] and99_cast_reg_2388;
wire   [17:0] mul75_cast_fu_1067_p2;
reg   [17:0] mul75_cast_reg_2393;
wire   [17:0] mul75_1_cast_fu_1082_p2;
reg   [17:0] mul75_1_cast_reg_2399;
wire   [17:0] mul_ln83_fu_1097_p2;
reg   [17:0] mul_ln83_reg_2405;
wire   [0:0] icmp_ln83_fu_1102_p2;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln86_fu_1108_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state16_pp2_stage0_iter0;
wire    ap_block_state25_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln86_reg_2415_pp2_iter1_reg;
wire   [0:0] icmp_ln99_fu_1114_p2;
reg   [0:0] icmp_ln99_reg_2419;
wire  signed [31:0] kn_1_fu_1151_p3;
reg  signed [31:0] kn_1_reg_2430;
wire   [0:0] icmp_ln99_1_fu_1159_p2;
wire   [13:0] add_ln215_2_fu_1186_p2;
reg   [13:0] add_ln215_2_reg_2441;
wire  signed [31:0] kn_2_fu_1192_p3;
reg  signed [31:0] kn_2_reg_2446;
wire   [13:0] trunc_ln215_4_fu_1200_p1;
reg   [13:0] trunc_ln215_4_reg_2453;
wire   [10:0] trunc_ln215_5_fu_1204_p1;
reg   [10:0] trunc_ln215_5_reg_2458;
wire   [17:0] trunc_ln102_fu_1208_p1;
reg   [17:0] trunc_ln102_reg_2463;
wire   [0:0] icmp_ln99_2_fu_1220_p2;
wire   [13:0] add_ln215_4_fu_1240_p2;
reg   [13:0] add_ln215_4_reg_2479;
wire  signed [31:0] kn_3_fu_1246_p3;
reg  signed [31:0] kn_3_reg_2484;
wire   [0:0] icmp_ln99_3_fu_1253_p2;
wire   [13:0] add_ln215_6_fu_1280_p2;
reg   [13:0] add_ln215_6_reg_2495;
wire  signed [31:0] kn_4_fu_1286_p3;
reg  signed [31:0] kn_4_reg_2500;
wire   [13:0] trunc_ln215_8_fu_1294_p1;
reg   [13:0] trunc_ln215_8_reg_2507;
wire   [10:0] trunc_ln215_9_fu_1298_p1;
reg   [10:0] trunc_ln215_9_reg_2512;
wire   [17:0] trunc_ln36_fu_1302_p1;
reg   [17:0] trunc_ln36_reg_2517;
wire   [0:0] icmp_ln100_fu_1306_p2;
wire   [17:0] trunc_ln102_1_fu_1326_p1;
reg   [17:0] trunc_ln102_1_reg_2545;
wire   [17:0] add_ln102_2_fu_1330_p2;
reg   [17:0] add_ln102_2_reg_2550;
wire   [17:0] trunc_ln102_2_fu_1335_p1;
reg   [17:0] trunc_ln102_2_reg_2556;
wire   [0:0] icmp_ln99_4_fu_1347_p2;
wire   [13:0] add_ln215_8_fu_1367_p2;
reg   [13:0] add_ln215_8_reg_2572;
wire  signed [31:0] kn_5_fu_1373_p3;
reg  signed [31:0] kn_5_reg_2577;
wire   [0:0] icmp_ln99_5_fu_1380_p2;
wire   [13:0] add_ln215_10_fu_1407_p2;
reg   [13:0] add_ln215_10_reg_2588;
wire  signed [31:0] kn_6_fu_1413_p3;
reg  signed [31:0] kn_6_reg_2593;
wire   [13:0] trunc_ln215_12_fu_1421_p1;
reg   [13:0] trunc_ln215_12_reg_2600;
wire   [10:0] trunc_ln215_13_fu_1425_p1;
reg   [10:0] trunc_ln215_13_reg_2605;
wire   [17:0] trunc_ln102_3_fu_1467_p1;
reg   [17:0] trunc_ln102_3_reg_2630;
wire   [17:0] trunc_ln102_4_fu_1475_p1;
reg   [17:0] trunc_ln102_4_reg_2640;
wire   [17:0] add_ln102_9_fu_1479_p2;
reg   [17:0] add_ln102_9_reg_2645;
wire   [0:0] icmp_ln99_6_fu_1487_p2;
wire   [13:0] add_ln215_12_fu_1507_p2;
reg   [13:0] add_ln215_12_reg_2657;
wire  signed [31:0] kn_7_fu_1513_p3;
reg  signed [31:0] kn_7_reg_2662;
wire   [0:0] icmp_ln99_7_fu_1520_p2;
reg   [0:0] icmp_ln99_7_reg_2667_pp2_iter1_reg;
wire   [13:0] add_ln215_14_fu_1547_p2;
reg   [13:0] add_ln215_14_reg_2673;
wire  signed [31:0] kn_8_fu_1553_p3;
reg  signed [31:0] kn_8_reg_2678;
wire   [17:0] trunc_ln102_5_fu_1602_p1;
reg   [17:0] trunc_ln102_5_reg_2713;
wire   [17:0] trunc_ln102_6_fu_1606_p1;
reg   [17:0] trunc_ln102_6_reg_2718;
wire   [0:0] icmp_ln99_8_fu_1614_p2;
wire   [0:0] icmp_ln105_fu_1618_p2;
wire   [31:0] x_8_fu_1638_p3;
wire   [31:0] add_ln126_fu_1646_p2;
reg   [7:0] accum_V_load_reg_2741;
wire   [17:0] trunc_ln102_7_fu_1701_p1;
reg   [17:0] trunc_ln102_7_reg_2777;
wire   [17:0] add_ln102_16_fu_1705_p2;
reg   [17:0] add_ln102_16_reg_2782;
wire   [13:0] add_ln215_16_fu_1733_p2;
reg   [13:0] add_ln215_16_reg_2788;
wire   [17:0] empty_21_fu_1739_p1;
reg   [17:0] empty_21_reg_2793;
wire   [7:0] accum_V_4_fu_1753_p3;
reg   [7:0] accum_V_4_reg_2798;
reg  signed [3:0] lhs_6_reg_2820;
wire   [17:0] trunc_ln102_8_fu_1786_p1;
reg   [17:0] trunc_ln102_8_reg_2830;
wire   [7:0] accum_V_7_fu_1800_p3;
reg   [7:0] accum_V_7_reg_2835;
wire   [7:0] accum_V_10_fu_1843_p3;
reg   [7:0] accum_V_10_reg_2862;
wire   [3:0] trunc_ln69_2_fu_1861_p1;
reg   [3:0] trunc_ln69_2_reg_2884;
wire   [7:0] accum_V_13_fu_1875_p3;
reg   [7:0] accum_V_13_reg_2889;
reg  signed [3:0] rhs_8_reg_2906;
wire   [7:0] accum_V_16_fu_1902_p3;
reg   [7:0] accum_V_16_reg_2911;
wire   [7:0] accum_V_19_fu_1926_p3;
reg   [7:0] accum_V_19_reg_2928;
wire   [7:0] accum_V_22_fu_1949_p3;
reg   [7:0] accum_V_22_reg_2945;
wire   [7:0] accum_V_25_fu_1965_p3;
reg   [7:0] accum_V_25_reg_2952;
wire   [31:0] x_6_fu_2013_p2;
wire    ap_CS_fsm_state32;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp2_stage2_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
reg    ap_block_pp2_stage8_subdone;
reg    ap_block_pp2_stage6_subdone;
reg   [13:0] filter_V_address0;
reg    filter_V_ce0;
reg    filter_V_we0;
wire   [3:0] filter_V_d0;
reg   [17:0] featureMap_V_address0;
reg    featureMap_V_ce0;
reg    featureMap_V_we0;
reg   [3:0] featureMap_V_d0;
reg   [17:0] featureMap_V_address1;
reg    featureMap_V_ce1;
reg   [31:0] ap_phi_mux_n_phi_fu_423_p4;
reg   [1:0] ap_phi_mux_y_1_phi_fu_445_p4;
reg   [1:0] y_reg_463;
reg   [31:0] x_reg_474;
reg   [31:0] ap_phi_mux_x_3_phi_fu_500_p4;
wire   [31:0] ap_phi_reg_pp1_iter0_x_7_reg_519;
reg   [14:0] y_2_reg_532;
reg   [31:0] x_2_reg_543;
reg  signed [31:0] ap_phi_mux_kn_phi_fu_559_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_x_5_phi_fu_570_p4;
wire    ap_block_pp2_stage2;
reg   [31:0] ap_phi_reg_pp2_iter0_x_9_reg_578;
reg   [31:0] ap_phi_reg_pp2_iter0_kn_9_reg_590;
wire   [63:0] zext_ln54_4_fu_900_p1;
wire   [63:0] zext_ln70_fu_1000_p1;
wire   [63:0] zext_ln215_fu_1146_p1;
wire   [63:0] zext_ln215_1_fu_1216_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln102_fu_1321_p1;
wire   [63:0] zext_ln215_2_fu_1339_p1;
wire   [63:0] zext_ln102_1_fu_1447_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln102_2_fu_1462_p1;
wire   [63:0] zext_ln215_3_fu_1471_p1;
wire   [63:0] zext_ln102_3_fu_1578_p1;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln215_4_fu_1598_p1;
wire   [63:0] zext_ln102_4_fu_1593_p1;
wire   [63:0] zext_ln215_5_fu_1683_p1;
wire   [63:0] zext_ln102_5_fu_1678_p1;
wire   [63:0] zext_ln102_6_fu_1696_p1;
wire   [63:0] zext_ln215_6_fu_1767_p1;
wire   [63:0] zext_ln102_7_fu_1781_p1;
wire   [63:0] zext_ln215_7_fu_1814_p1;
wire    ap_block_pp2_stage7;
wire   [63:0] zext_ln102_8_fu_1828_p1;
wire   [63:0] zext_ln215_8_fu_1857_p1;
wire   [63:0] zext_ln109_fu_1888_p1;
reg   [7:0] accum_V_fu_182;
wire   [7:0] accum_V_27_fu_1976_p3;
reg   [7:0] ap_sig_allocacmp_accum_V_load;
wire  signed [7:0] accum_V_29_fu_1995_p3;
reg    ap_block_pp2_stage5_01001;
wire  signed [31:0] empty_fu_628_p0;
wire  signed [31:0] empty_15_fu_636_p0;
wire   [34:0] tmp_1_fu_648_p3;
wire   [35:0] p_shl_fu_656_p1;
wire   [35:0] cast2_fu_644_p1;
wire   [31:0] zext_ln49_fu_678_p1;
wire   [0:0] slt_fu_682_p2;
wire   [31:0] add_ln47_fu_698_p2;
wire   [0:0] icmp_ln50_fu_732_p2;
wire   [0:0] xor_ln47_fu_726_p2;
wire   [1:0] select_ln47_fu_710_p3;
wire   [0:0] or_ln49_fu_750_p2;
wire   [3:0] add_ln49_1_fu_778_p2;
wire   [33:0] tmp_3_fu_795_p3;
wire   [34:0] zext_ln54_1_fu_802_p1;
wire   [34:0] zext_ln54_fu_792_p1;
wire   [34:0] sub_ln54_fu_806_p2;
wire  signed [35:0] sext_ln47_fu_812_p1;
wire   [35:0] zext_ln54_2_fu_821_p1;
wire   [35:0] add_ln54_fu_824_p2;
wire   [31:0] zext_ln49_1_fu_838_p1;
wire   [0:0] slt108_fu_841_p2;
wire   [0:0] rev109_fu_846_p2;
wire   [0:0] select_ln47_2_fu_816_p3;
wire   [31:0] zext_ln50_fu_859_p1;
wire   [0:0] icmp_ln52_fu_862_p2;
wire   [0:0] xor_ln52_fu_867_p2;
wire   [0:0] select_ln49_2_fu_852_p3;
wire   [13:0] p_shl1_cast_fu_879_p3;
wire   [13:0] sub_ln54_1_fu_886_p2;
wire   [13:0] zext_ln54_3_fu_891_p1;
wire   [13:0] add_ln54_1_fu_894_p2;
wire  signed [31:0] sub_fu_910_p0;
wire  signed [31:0] trunc_ln70_fu_915_p0;
wire  signed [31:0] empty_18_fu_918_p0;
wire   [15:0] sub_ln77_fu_937_p2;
wire   [15:0] sub_ln78_fu_947_p2;
wire   [31:0] zext_ln64_fu_973_p1;
wire  signed [17:0] grp_fu_2019_p4;
wire  signed [16:0] outMapYSize_cast_fu_1010_p1;
wire   [15:0] zext_ln80_1_fu_1031_p1;
wire   [16:0] zext_ln80_fu_1044_p1;
wire   [1:0] trunc_ln80_fu_1040_p1;
wire   [1:0] add98_fu_1053_p2;
wire   [1:0] mul75_cast_fu_1067_p0;
wire   [1:0] y_4_cast_fu_1072_p2;
wire   [1:0] mul75_1_cast_fu_1082_p0;
wire   [1:0] add74_2_fu_1087_p2;
wire   [1:0] mul_ln83_fu_1097_p0;
wire   [10:0] trunc_ln215_1_fu_1128_p1;
wire   [13:0] tmp_5_cast_fu_1132_p3;
wire   [13:0] trunc_ln215_fu_1124_p1;
wire   [13:0] add_ln215_fu_1140_p2;
wire   [10:0] trunc_ln215_3_fu_1168_p1;
wire   [13:0] tmp_6_cast_fu_1172_p3;
wire   [13:0] trunc_ln215_2_fu_1164_p1;
wire   [13:0] add_ln215_1_fu_1180_p2;
wire   [31:0] grp_fu_1119_p2;
wire   [13:0] tmp_7_cast_fu_1228_p3;
wire   [13:0] add_ln215_3_fu_1235_p2;
wire   [10:0] trunc_ln215_7_fu_1262_p1;
wire   [13:0] tmp_8_cast_fu_1266_p3;
wire   [13:0] trunc_ln215_6_fu_1258_p1;
wire   [13:0] add_ln215_5_fu_1274_p2;
wire   [17:0] add_ln102_fu_1311_p2;
wire   [17:0] add_ln102_1_fu_1315_p2;
wire   [31:0] grp_fu_1212_p2;
wire   [31:0] grp_fu_1224_p2;
wire   [13:0] tmp_9_cast_fu_1355_p3;
wire   [13:0] add_ln215_7_fu_1362_p2;
wire   [10:0] trunc_ln215_11_fu_1389_p1;
wire   [13:0] tmp_10_cast_fu_1393_p3;
wire   [13:0] trunc_ln215_10_fu_1385_p1;
wire   [13:0] add_ln215_9_fu_1401_p2;
wire   [17:0] add_ln102_3_fu_1437_p2;
wire   [17:0] add_ln102_4_fu_1442_p2;
wire   [17:0] add_ln102_5_fu_1452_p2;
wire   [17:0] add_ln102_6_fu_1457_p2;
wire   [31:0] grp_fu_1343_p2;
wire   [31:0] grp_fu_1351_p2;
wire   [13:0] tmp_11_cast_fu_1495_p3;
wire   [13:0] add_ln215_11_fu_1502_p2;
wire   [10:0] trunc_ln215_15_fu_1529_p1;
wire   [13:0] tmp_12_cast_fu_1533_p3;
wire   [13:0] trunc_ln215_14_fu_1525_p1;
wire   [13:0] add_ln215_13_fu_1541_p2;
wire   [17:0] add_ln102_7_fu_1569_p2;
wire   [17:0] add_ln102_8_fu_1573_p2;
wire   [17:0] add_ln102_10_fu_1583_p2;
wire   [17:0] add_ln102_11_fu_1588_p2;
wire   [31:0] grp_fu_1483_p2;
wire   [31:0] grp_fu_1491_p2;
wire  signed [31:0] icmp_ln105_fu_1618_p1;
wire  signed [31:0] icmp_ln122_fu_1627_p1;
wire   [0:0] icmp_ln122_fu_1627_p2;
wire   [0:0] xor_ln122_fu_1632_p2;
wire   [17:0] add_ln102_12_fu_1668_p2;
wire   [17:0] add_ln102_13_fu_1673_p2;
wire   [17:0] add_ln102_14_fu_1687_p2;
wire   [17:0] add_ln102_15_fu_1691_p2;
wire   [31:0] grp_fu_1610_p2;
wire   [10:0] trunc_ln215_17_fu_1716_p1;
wire   [13:0] tmp_13_cast_fu_1719_p3;
wire   [13:0] trunc_ln215_16_fu_1713_p1;
wire   [13:0] add_ln215_15_fu_1727_p2;
wire   [31:0] grp_fu_1623_p2;
wire   [0:0] and_ln100_fu_1743_p2;
wire  signed [7:0] grp_fu_2027_p3;
wire   [7:0] accum_V_3_fu_1747_p3;
wire   [17:0] add_ln102_17_fu_1771_p2;
wire   [17:0] add_ln102_18_fu_1776_p2;
wire   [31:0] grp_fu_1709_p2;
wire   [0:0] and_ln101_fu_1790_p2;
wire  signed [7:0] grp_fu_2036_p3;
wire   [7:0] accum_V_6_fu_1794_p3;
wire   [17:0] add_ln102_19_fu_1818_p2;
wire   [17:0] add_ln102_20_fu_1823_p2;
wire   [0:0] and_ln101_1_fu_1833_p2;
wire  signed [7:0] grp_fu_2045_p3;
wire   [7:0] accum_V_9_fu_1837_p3;
wire   [0:0] and_ln101_2_fu_1865_p2;
wire  signed [7:0] grp_fu_2054_p3;
wire   [7:0] accum_V_12_fu_1869_p3;
wire  signed [17:0] grp_fu_2063_p4;
wire   [0:0] and_ln101_3_fu_1892_p2;
wire  signed [7:0] grp_fu_2070_p3;
wire   [7:0] accum_V_15_fu_1896_p3;
wire   [0:0] and_ln101_4_fu_1916_p2;
wire  signed [7:0] grp_fu_2079_p3;
wire   [7:0] accum_V_18_fu_1920_p3;
wire   [0:0] and_ln101_5_fu_1939_p2;
wire  signed [7:0] grp_fu_2088_p3;
wire   [7:0] accum_V_21_fu_1943_p3;
wire   [0:0] and_ln101_6_fu_1955_p2;
wire  signed [7:0] grp_fu_2097_p3;
wire   [7:0] accum_V_24_fu_1959_p3;
wire  signed [7:0] grp_fu_2106_p3;
wire   [0:0] tmp_2_fu_1982_p3;
wire   [0:0] and_ln113_fu_1990_p1;
wire   [0:0] and_ln113_fu_1990_p2;
wire   [1:0] grp_fu_2019_p1;
wire   [7:0] grp_fu_2027_p2;
wire   [7:0] grp_fu_2036_p2;
wire   [7:0] grp_fu_2045_p2;
wire   [7:0] grp_fu_2054_p2;
wire   [1:0] grp_fu_2063_p1;
wire   [7:0] grp_fu_2070_p2;
wire   [7:0] grp_fu_2079_p2;
wire   [7:0] grp_fu_2088_p2;
wire   [7:0] grp_fu_2097_p2;
wire   [7:0] grp_fu_2106_p2;
reg    grp_fu_1119_ce;
reg    grp_fu_1212_ce;
reg    grp_fu_1224_ce;
reg    grp_fu_1343_ce;
reg    grp_fu_1351_ce;
reg    grp_fu_1483_ce;
reg    grp_fu_1491_ce;
reg    grp_fu_1610_ce;
reg    grp_fu_1623_ce;
reg    grp_fu_1709_ce;
reg    grp_fu_2019_ce;
reg    grp_fu_2027_ce;
reg    grp_fu_2036_ce;
reg    grp_fu_2045_ce;
reg    grp_fu_2054_ce;
reg    grp_fu_2063_ce;
reg    grp_fu_2070_ce;
reg    grp_fu_2079_ce;
reg    grp_fu_2088_ce;
reg    grp_fu_2097_ce;
reg    grp_fu_2106_ce;
reg   [19:0] ap_NS_fsm;
wire    ap_block_pp2_stage0_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
reg    ap_block_pp2_stage5_subdone;
wire    ap_block_pp2_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    regslice_both_strm_in_V_data_V_U_apdone_blk;
wire   [31:0] strm_in_TDATA_int_regslice;
wire    strm_in_TVALID_int_regslice;
reg    strm_in_TREADY_int_regslice;
wire    regslice_both_strm_in_V_data_V_U_ack_in;
wire    regslice_both_strm_in_V_keep_V_U_apdone_blk;
wire   [3:0] strm_in_TKEEP_int_regslice;
wire    regslice_both_strm_in_V_keep_V_U_vld_out;
wire    regslice_both_strm_in_V_keep_V_U_ack_in;
wire    regslice_both_strm_in_V_strb_V_U_apdone_blk;
wire   [3:0] strm_in_TSTRB_int_regslice;
wire    regslice_both_strm_in_V_strb_V_U_vld_out;
wire    regslice_both_strm_in_V_strb_V_U_ack_in;
wire    regslice_both_strm_in_V_last_V_U_apdone_blk;
wire   [0:0] strm_in_TLAST_int_regslice;
wire    regslice_both_strm_in_V_last_V_U_vld_out;
wire    regslice_both_strm_in_V_last_V_U_ack_in;
wire   [31:0] strm_out_TDATA_int_regslice;
reg    strm_out_TVALID_int_regslice;
wire    strm_out_TREADY_int_regslice;
wire    regslice_both_strm_out_V_data_V_U_vld_out;
wire    regslice_both_strm_out_V_keep_V_U_apdone_blk;
wire    regslice_both_strm_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_strm_out_V_keep_V_U_vld_out;
wire    regslice_both_strm_out_V_strb_V_U_apdone_blk;
wire    regslice_both_strm_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_strm_out_V_strb_V_U_vld_out;
wire    regslice_both_strm_out_V_last_V_U_apdone_blk;
wire    regslice_both_strm_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_strm_out_V_last_V_U_vld_out;
wire   [17:0] mul75_1_cast_fu_1082_p00;
wire   [17:0] mul75_cast_fu_1067_p00;
wire   [17:0] mul_ln83_fu_1097_p00;
reg    ap_condition_2052;
reg    ap_condition_454;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

depthwise_filter_V #(
    .DataWidth( 4 ),
    .AddressRange( 13824 ),
    .AddressWidth( 14 ))
filter_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(filter_V_address0),
    .ce0(filter_V_ce0),
    .we0(filter_V_we0),
    .d0(filter_V_d0),
    .q0(filter_V_q0)
);

depthwise_featureMap_V #(
    .DataWidth( 4 ),
    .AddressRange( 258048 ),
    .AddressWidth( 18 ))
featureMap_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(featureMap_V_address0),
    .ce0(featureMap_V_ce0),
    .we0(featureMap_V_we0),
    .d0(featureMap_V_d0),
    .q0(featureMap_V_q0),
    .address1(featureMap_V_address1),
    .ce1(featureMap_V_ce1),
    .q1(featureMap_V_q1)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mapSizeY),
    .din1(mapSizeX),
    .ce(1'b1),
    .dout(grp_fu_957_p2)
);

depthwise_mul_2ns_18s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mul_2ns_18s_18_1_1_U2(
    .din0(mul75_cast_fu_1067_p0),
    .din1(empty_18_reg_2270),
    .dout(mul75_cast_fu_1067_p2)
);

depthwise_mul_2ns_18s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mul_2ns_18s_18_1_1_U3(
    .din0(mul75_1_cast_fu_1082_p0),
    .din1(empty_18_reg_2270),
    .dout(mul75_1_cast_fu_1082_p2)
);

depthwise_mul_2ns_18s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mul_2ns_18s_18_1_1_U4(
    .din0(mul_ln83_fu_1097_p0),
    .din1(empty_18_reg_2270),
    .dout(mul_ln83_fu_1097_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_phi_mux_kn_phi_fu_559_p4),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1119_ce),
    .dout(grp_fu_1119_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_1_reg_2430),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1212_ce),
    .dout(grp_fu_1212_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_2_reg_2446),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1224_ce),
    .dout(grp_fu_1224_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_3_reg_2484),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1343_ce),
    .dout(grp_fu_1343_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_4_reg_2500),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1351_ce),
    .dout(grp_fu_1351_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_5_reg_2577),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1483_ce),
    .dout(grp_fu_1483_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_6_reg_2593),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1491_ce),
    .dout(grp_fu_1491_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_7_reg_2662),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1610_ce),
    .dout(grp_fu_1610_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_8_reg_2678),
    .din1(mapSizeY),
    .ce(grp_fu_1623_ce),
    .dout(grp_fu_1623_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_8_reg_2678),
    .din1(mul_ln102_reg_2363),
    .ce(grp_fu_1709_ce),
    .dout(grp_fu_1709_p2)
);

depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
ama_addmuladd_18ns_2ns_18s_18ns_18_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(phi_mul_reg_508),
    .din1(grp_fu_2019_p1),
    .din2(empty_18_reg_2270),
    .din3(trunc_ln64_reg_2338),
    .ce(grp_fu_2019_ce),
    .dout(grp_fu_2019_p4)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_611),
    .din1(featureMap_V_q0),
    .din2(grp_fu_2027_p2),
    .ce(grp_fu_2027_ce),
    .dout(grp_fu_2027_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_615),
    .din1(featureMap_V_q1),
    .din2(grp_fu_2036_p2),
    .ce(grp_fu_2036_ce),
    .dout(grp_fu_2036_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_611),
    .din1(reg_619),
    .din2(grp_fu_2045_p2),
    .ce(grp_fu_2045_ce),
    .dout(grp_fu_2045_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_615),
    .din1(reg_619),
    .din2(grp_fu_2054_p2),
    .ce(grp_fu_2054_ce),
    .dout(grp_fu_2054_p3)
);

depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
ama_addmuladd_18ns_2ns_18s_18ns_18_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_21_reg_2793),
    .din1(grp_fu_2063_p1),
    .din2(empty_18_reg_2270),
    .din3(trunc_ln36_reg_2517),
    .ce(grp_fu_2063_ce),
    .dout(grp_fu_2063_p4)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_611),
    .din1(reg_624),
    .din2(grp_fu_2070_p2),
    .ce(grp_fu_2070_ce),
    .dout(grp_fu_2070_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_615),
    .din1(reg_619),
    .din2(grp_fu_2079_p2),
    .ce(grp_fu_2079_ce),
    .dout(grp_fu_2079_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_611),
    .din1(lhs_6_reg_2820),
    .din2(grp_fu_2088_p2),
    .ce(grp_fu_2088_ce),
    .dout(grp_fu_2088_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_615),
    .din1(reg_624),
    .din2(grp_fu_2097_p2),
    .ce(grp_fu_2097_ce),
    .dout(grp_fu_2097_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(rhs_8_reg_2906),
    .din1(reg_619),
    .din2(grp_fu_2106_p2),
    .ce(grp_fu_2106_ce),
    .dout(grp_fu_2106_p3)
);

depthwise_regslice_both #(
    .DataWidth( 32 ))
regslice_both_strm_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TDATA),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_data_V_U_ack_in),
    .data_out(strm_in_TDATA_int_regslice),
    .vld_out(strm_in_TVALID_int_regslice),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_data_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TKEEP),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_keep_V_U_ack_in),
    .data_out(strm_in_TKEEP_int_regslice),
    .vld_out(regslice_both_strm_in_V_keep_V_U_vld_out),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_keep_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TSTRB),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_strb_V_U_ack_in),
    .data_out(strm_in_TSTRB_int_regslice),
    .vld_out(regslice_both_strm_in_V_strb_V_U_vld_out),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_strb_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 1 ))
regslice_both_strm_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TLAST),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_last_V_U_ack_in),
    .data_out(strm_in_TLAST_int_regslice),
    .vld_out(regslice_both_strm_in_V_last_V_U_vld_out),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_last_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 32 ))
regslice_both_strm_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_out_TDATA_int_regslice),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(strm_out_TREADY_int_regslice),
    .data_out(strm_out_TDATA),
    .vld_out(regslice_both_strm_out_V_data_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_data_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(regslice_both_strm_out_V_keep_V_U_ack_in_dummy),
    .data_out(strm_out_TKEEP),
    .vld_out(regslice_both_strm_out_V_keep_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_keep_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(regslice_both_strm_out_V_strb_V_U_ack_in_dummy),
    .data_out(strm_out_TSTRB),
    .vld_out(regslice_both_strm_out_V_strb_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_strb_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 1 ))
regslice_both_strm_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(regslice_both_strm_out_V_last_V_U_ack_in_dummy),
    .data_out(strm_out_TLAST),
    .vld_out(regslice_both_strm_out_V_last_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln62_fu_961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln62_fu_961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln83_fu_1102_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage8_subdone) & (1'b1 == ap_CS_fsm_pp2_stage8)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln83_fu_1102_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln99_8_reg_2723 == 1'd0))) begin
        accum_V_fu_182 <= accum_V_25_fu_1965_p3;
    end else if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2526_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        accum_V_fu_182 <= accum_V_29_fu_1995_p3;
    end else if ((((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2526_pp2_iter1_reg == 1'd0) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd0) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        accum_V_fu_182 <= accum_V_27_fu_1976_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2052)) begin
        if ((icmp_ln99_8_fu_1614_p2 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_kn_9_reg_590 <= 32'd1537;
        end else if ((icmp_ln99_8_fu_1614_p2 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_kn_9_reg_590 <= add_ln126_fu_1646_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2052)) begin
        if ((icmp_ln99_8_fu_1614_p2 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_x_9_reg_578 <= x_5_reg_567;
        end else if ((icmp_ln99_8_fu_1614_p2 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_x_9_reg_578 <= x_8_fu_1638_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_693_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten17_reg_408 <= add_ln47_1_fu_672_p2;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_408 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_693_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_430 <= select_ln49_3_fu_784_p3;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_430 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        kn_reg_555 <= kn_9_reg_590;
    end else if (((icmp_ln83_fu_1102_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        kn_reg_555 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_977_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        n_1_reg_486 <= n_2_fu_967_p2;
    end else if (((icmp_ln62_fu_961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        n_1_reg_486 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_reg_2198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_reg_419 <= select_ln47_1_reg_2207;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_reg_419 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_977_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phi_mul_reg_508 <= add_ln67_fu_987_p2;
    end else if (((icmp_ln62_fu_961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_mul_reg_508 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln99_5_reg_2582 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_3_reg_2489 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2415 == 1'd1)))) begin
        reg_619 <= featureMap_V_q1;
    end else if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8) & (icmp_ln100_reg_2526 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_2_reg_2473 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1)))) begin
        reg_619 <= featureMap_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_693_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_1_reg_452 <= add_ln50_fu_772_p2;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        x_1_reg_452 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x_2_reg_543 <= x_6_fu_2013_p2;
    end else if (((icmp_ln80_fu_1035_p2 == 1'd1) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        x_2_reg_543 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln64_reg_2320 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        x_3_reg_497 <= x_7_reg_519;
    end else if (((icmp_ln62_fu_961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        x_3_reg_497 <= x_reg_474;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        x_5_reg_567 <= x_9_reg_578;
    end else if (((icmp_ln83_fu_1102_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        x_5_reg_567 <= x_2_reg_543;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_454)) begin
        if (((icmp_ln67_fu_982_p2 == 1'd1) & (icmp_ln64_fu_977_p2 == 1'd1))) begin
            x_7_reg_519 <= 32'd42;
        end else if (((icmp_ln67_fu_982_p2 == 1'd0) & (icmp_ln64_fu_977_p2 == 1'd1))) begin
            x_7_reg_519 <= ap_phi_mux_x_3_phi_fu_500_p4;
        end else if ((1'b1 == 1'b1)) begin
            x_7_reg_519 <= ap_phi_reg_pp1_iter0_x_7_reg_519;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_reg_474 <= x_4_fu_1004_p2;
    end else if (((icmp_ln61_fu_927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        x_reg_474 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_reg_2198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_1_reg_441 <= select_ln49_1_reg_2230;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_1_reg_441 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_1102_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        y_2_reg_532 <= y_4_reg_2376;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_2_reg_532 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        y_reg_463 <= y_3_reg_2279;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_reg_463 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8) & (icmp_ln86_reg_2415 == 1'd1))) begin
        accum_V_10_reg_2862 <= accum_V_10_fu_1843_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln86_reg_2415 == 1'd1))) begin
        accum_V_13_reg_2889 <= accum_V_13_fu_1875_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        accum_V_16_reg_2911 <= accum_V_16_fu_1902_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        accum_V_19_reg_2928 <= accum_V_19_fu_1926_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        accum_V_22_reg_2945 <= accum_V_22_fu_1949_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        accum_V_25_reg_2952 <= accum_V_25_fu_1965_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2415 == 1'd1))) begin
        accum_V_4_reg_2798 <= accum_V_4_fu_1753_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln86_reg_2415 == 1'd1))) begin
        accum_V_7_reg_2835 <= accum_V_7_fu_1800_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2415 == 1'd1))) begin
        accum_V_load_reg_2741 <= ap_sig_allocacmp_accum_V_load;
        add_ln102_16_reg_2782 <= add_ln102_16_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2415 == 1'd1))) begin
        add_ln102_2_reg_2550 <= add_ln102_2_fu_1330_p2;
        add_ln215_10_reg_2588 <= add_ln215_10_fu_1407_p2;
        add_ln215_8_reg_2572 <= add_ln215_8_fu_1367_p2;
        icmp_ln100_reg_2526 <= icmp_ln100_fu_1306_p2;
        icmp_ln99_4_reg_2566 <= icmp_ln99_4_fu_1347_p2;
        icmp_ln99_5_reg_2582 <= icmp_ln99_5_fu_1380_p2;
        kn_5_reg_2577 <= kn_5_fu_1373_p3;
        kn_6_reg_2593 <= kn_6_fu_1413_p3;
        trunc_ln215_12_reg_2600 <= trunc_ln215_12_fu_1421_p1;
        trunc_ln215_13_reg_2605 <= trunc_ln215_13_fu_1425_p1;
        trunc_ln36_reg_2517 <= trunc_ln36_fu_1302_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2415 == 1'd1))) begin
        add_ln102_9_reg_2645 <= add_ln102_9_fu_1479_p2;
        add_ln215_12_reg_2657 <= add_ln215_12_fu_1507_p2;
        add_ln215_14_reg_2673 <= add_ln215_14_fu_1547_p2;
        icmp_ln99_6_reg_2651 <= icmp_ln99_6_fu_1487_p2;
        icmp_ln99_7_reg_2667 <= icmp_ln99_7_fu_1520_p2;
        kn_7_reg_2662 <= kn_7_fu_1513_p3;
        kn_8_reg_2678 <= kn_8_fu_1553_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2526 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        add_ln215_16_reg_2788 <= add_ln215_16_fu_1733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln86_fu_1108_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln215_2_reg_2441 <= add_ln215_2_fu_1186_p2;
        icmp_ln99_1_reg_2435 <= icmp_ln99_1_fu_1159_p2;
        icmp_ln99_reg_2419 <= icmp_ln99_fu_1114_p2;
        kn_1_reg_2430 <= kn_1_fu_1151_p3;
        kn_2_reg_2446 <= kn_2_fu_1192_p3;
        trunc_ln215_4_reg_2453 <= trunc_ln215_4_fu_1200_p1;
        trunc_ln215_5_reg_2458 <= trunc_ln215_5_fu_1204_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        add_ln215_4_reg_2479 <= add_ln215_4_fu_1240_p2;
        add_ln215_6_reg_2495 <= add_ln215_6_fu_1280_p2;
        icmp_ln99_2_reg_2473 <= icmp_ln99_2_fu_1220_p2;
        icmp_ln99_3_reg_2489 <= icmp_ln99_3_fu_1253_p2;
        kn_3_reg_2484 <= kn_3_fu_1246_p3;
        kn_4_reg_2500 <= kn_4_fu_1286_p3;
        trunc_ln215_8_reg_2507 <= trunc_ln215_8_fu_1294_p1;
        trunc_ln215_9_reg_2512 <= trunc_ln215_9_fu_1298_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_reg_2219 <= add_ln49_fu_744_p2;
        and_ln47_reg_2214 <= and_ln47_fu_738_p2;
        icmp_ln49_reg_2202 <= icmp_ln49_fu_704_p2;
        select_ln49_reg_2224 <= select_ln49_fu_756_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_1035_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        and99_cast_reg_2388[1 : 0] <= and99_cast_fu_1059_p1[1 : 0];
        cmp92_reg_2384 <= cmp92_fu_1048_p2;
        mul75_1_cast_reg_2399 <= mul75_1_cast_fu_1082_p2;
        mul75_cast_reg_2393 <= mul75_cast_fu_1067_p2;
        mul_ln83_reg_2405 <= mul_ln83_fu_1097_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bias_V_reg_2173 <= bias_V_fu_640_p1;
        bound4_reg_2178 <= bound4_fu_660_p2;
        cmp22_not_mid113_reg_2183 <= cmp22_not_mid113_fu_666_p2;
        empty_14_reg_2162 <= empty_14_fu_632_p1;
        empty_15_reg_2168 <= empty_15_fu_636_p1;
        empty_reg_2157 <= empty_fu_628_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv69_reg_2348 <= conv69_fu_1013_p1;
        conv_i38_reg_2353 <= conv_i38_fu_1016_p1;
        mul_ln102_reg_2363 <= grp_fu_957_p2;
        sub91_reg_2358 <= sub91_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_18_reg_2270 <= empty_18_fu_918_p1;
        sub_reg_2260 <= sub_fu_910_p2;
        trunc_ln70_reg_2265 <= trunc_ln70_fu_915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (cmp92_reg_2384 == 1'd1) & (icmp_ln105_reg_2727 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        empty_21_reg_2793 <= empty_21_fu_1739_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        icmp_ln100_reg_2526_pp2_iter1_reg <= icmp_ln100_reg_2526;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_8_fu_1614_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1))) begin
        icmp_ln105_reg_2727 <= icmp_ln105_fu_1618_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        icmp_ln105_reg_2727_pp2_iter1_reg <= icmp_ln105_reg_2727;
        icmp_ln99_8_reg_2723_pp2_iter1_reg <= icmp_ln99_8_reg_2723;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln47_reg_2198 <= icmp_ln47_fu_693_p2;
        rev107_reg_2193 <= rev107_fu_687_p2;
        select_ln49_reg_2224_pp0_iter1_reg <= select_ln49_reg_2224;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln64_reg_2320 <= icmp_ln64_fu_977_p2;
        icmp_ln64_reg_2320_pp1_iter1_reg <= icmp_ln64_reg_2320;
        icmp_ln67_reg_2324_pp1_iter1_reg <= icmp_ln67_reg_2324;
        trunc_ln69_1_reg_2333_pp1_iter1_reg <= trunc_ln69_1_reg_2333;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln64_reg_2320_pp1_iter2_reg <= icmp_ln64_reg_2320_pp1_iter1_reg;
        icmp_ln67_reg_2324_pp1_iter2_reg <= icmp_ln67_reg_2324_pp1_iter1_reg;
        trunc_ln69_1_reg_2333_pp1_iter2_reg <= trunc_ln69_1_reg_2333_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_977_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln67_reg_2324 <= icmp_ln67_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln86_reg_2415 <= icmp_ln86_fu_1108_p2;
        icmp_ln86_reg_2415_pp2_iter1_reg <= icmp_ln86_reg_2415;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        icmp_ln99_7_reg_2667_pp2_iter1_reg <= icmp_ln99_7_reg_2667;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1))) begin
        icmp_ln99_8_reg_2723 <= icmp_ln99_8_fu_1614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        kn_9_reg_590 <= ap_phi_reg_pp2_iter0_kn_9_reg_590;
        x_9_reg_578 <= ap_phi_reg_pp2_iter0_x_9_reg_578;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln99_6_reg_2651 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2415 == 1'd1))) begin
        lhs_6_reg_2820 <= featureMap_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_reg_2198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln52_reg_2256 <= or_ln52_fu_873_p2;
        trunc_ln54_1_reg_2251 <= trunc_ln54_1_fu_834_p1;
        trunc_ln54_reg_2246 <= trunc_ln54_fu_830_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_927_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        outMapXSize_reg_2306 <= outMapXSize_fu_951_p2;
        outMapYSize_reg_2300 <= outMapYSize_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (icmp_ln99_6_reg_2651 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_4_reg_2566 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln99_2_reg_2473 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln86_reg_2415 == 1'd1)))) begin
        reg_611 <= filter_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (icmp_ln99_7_reg_2667 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage8) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln99_5_reg_2582 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_3_reg_2489 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln99_1_reg_2435 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2415 == 1'd1)))) begin
        reg_615 <= filter_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (icmp_ln99_7_reg_2667 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln86_reg_2415 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_4_reg_2566 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2415 == 1'd1)))) begin
        reg_624 <= featureMap_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln100_reg_2526 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln99_8_reg_2723 == 1'd1))) begin
        rhs_8_reg_2906 <= filter_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_693_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln47_1_reg_2207 <= select_ln47_1_fu_718_p3;
        select_ln49_1_reg_2230 <= select_ln49_1_fu_764_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln99_1_reg_2435 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_1_reg_2545 <= trunc_ln102_1_fu_1326_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln99_2_reg_2473 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_2_reg_2556 <= trunc_ln102_2_fu_1335_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln99_3_reg_2489 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_3_reg_2630 <= trunc_ln102_3_fu_1467_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln99_4_reg_2566 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_4_reg_2640 <= trunc_ln102_4_fu_1475_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_5_reg_2582 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_5_reg_2713 <= trunc_ln102_5_fu_1602_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_6_reg_2651 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_6_reg_2718 <= trunc_ln102_6_fu_1606_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_7_reg_2667 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_7_reg_2777 <= trunc_ln102_7_fu_1701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln100_reg_2526 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_8_reg_2830 <= trunc_ln102_8_fu_1786_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln99_reg_2419 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln102_reg_2463 <= trunc_ln102_fu_1208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln64_reg_2320 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln64_reg_2338 <= trunc_ln64_fu_996_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_982_p2 == 1'd0) & (icmp_ln64_fu_977_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln69_1_reg_2333 <= trunc_ln69_1_fu_992_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8) & (cmp92_reg_2384 == 1'd1) & (icmp_ln105_reg_2727 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        trunc_ln69_2_reg_2884 <= trunc_ln69_2_fu_1861_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_3_reg_2279 <= y_3_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        y_4_reg_2376 <= y_4_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zext_ln61_reg_2287[1 : 0] <= zext_ln61_fu_933_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln47_fu_693_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln64_fu_977_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln86_reg_2415 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_fu_1035_p2 == 1'd0) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln86_reg_2415 == 1'd1))) begin
        ap_phi_mux_kn_phi_fu_559_p4 = kn_9_reg_590;
    end else begin
        ap_phi_mux_kn_phi_fu_559_p4 = kn_reg_555;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln47_reg_2198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_n_phi_fu_423_p4 = select_ln47_1_reg_2207;
    end else begin
        ap_phi_mux_n_phi_fu_423_p4 = n_reg_419;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln64_reg_2320 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_x_3_phi_fu_500_p4 = x_7_reg_519;
    end else begin
        ap_phi_mux_x_3_phi_fu_500_p4 = x_3_reg_497;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (icmp_ln86_reg_2415_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_x_5_phi_fu_570_p4 = x_9_reg_578;
    end else begin
        ap_phi_mux_x_5_phi_fu_570_p4 = x_5_reg_567;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln47_reg_2198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_y_1_phi_fu_445_p4 = select_ln49_1_reg_2230;
    end else begin
        ap_phi_mux_y_1_phi_fu_445_p4 = y_1_reg_441;
    end
end

always @ (*) begin
    if (((icmp_ln80_fu_1035_p2 == 1'd0) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2526_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_sig_allocacmp_accum_V_load = accum_V_29_fu_1995_p3;
    end else if ((((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2526_pp2_iter1_reg == 1'd0) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd0) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        ap_sig_allocacmp_accum_V_load = accum_V_27_fu_1976_p3;
    end else begin
        ap_sig_allocacmp_accum_V_load = accum_V_fu_182;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        featureMap_V_address0 = zext_ln109_fu_1888_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
        featureMap_V_address0 = zext_ln102_8_fu_1828_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6))) begin
        featureMap_V_address0 = zext_ln102_7_fu_1781_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        featureMap_V_address0 = zext_ln102_6_fu_1696_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        featureMap_V_address0 = zext_ln102_4_fu_1593_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        featureMap_V_address0 = zext_ln102_2_fu_1462_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        featureMap_V_address0 = zext_ln102_fu_1321_p1;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        featureMap_V_address0 = zext_ln70_fu_1000_p1;
    end else begin
        featureMap_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
            featureMap_V_address1 = zext_ln102_5_fu_1678_p1;
        end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
            featureMap_V_address1 = zext_ln102_3_fu_1578_p1;
        end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            featureMap_V_address1 = zext_ln102_1_fu_1447_p1;
        end else begin
            featureMap_V_address1 = 'bx;
        end
    end else begin
        featureMap_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        featureMap_V_ce0 = 1'b1;
    end else begin
        featureMap_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        featureMap_V_ce1 = 1'b1;
    end else begin
        featureMap_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        featureMap_V_d0 = trunc_ln69_2_reg_2884;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        featureMap_V_d0 = trunc_ln69_1_reg_2333_pp1_iter2_reg;
    end else begin
        featureMap_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (cmp92_reg_2384 == 1'd1) & (icmp_ln105_reg_2727 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln67_reg_2324_pp1_iter2_reg == 1'd0) & (icmp_ln64_reg_2320_pp1_iter2_reg == 1'd1)))) begin
        featureMap_V_we0 = 1'b1;
    end else begin
        featureMap_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8) & (1'b1 == ap_CS_fsm_pp2_stage8))) begin
        filter_V_address0 = zext_ln215_8_fu_1857_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
        filter_V_address0 = zext_ln215_7_fu_1814_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6))) begin
        filter_V_address0 = zext_ln215_6_fu_1767_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        filter_V_address0 = zext_ln215_5_fu_1683_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        filter_V_address0 = zext_ln215_4_fu_1598_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        filter_V_address0 = zext_ln215_3_fu_1471_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        filter_V_address0 = zext_ln215_2_fu_1339_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        filter_V_address0 = zext_ln215_1_fu_1216_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        filter_V_address0 = zext_ln215_fu_1146_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filter_V_address0 = zext_ln54_4_fu_900_p1;
    end else begin
        filter_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        filter_V_ce0 = 1'b1;
    end else begin
        filter_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln52_reg_2256 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filter_V_we0 = 1'b1;
    end else begin
        filter_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1119_ce = 1'b1;
    end else begin
        grp_fu_1119_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1212_ce = 1'b1;
    end else begin
        grp_fu_1212_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1224_ce = 1'b1;
    end else begin
        grp_fu_1224_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1343_ce = 1'b1;
    end else begin
        grp_fu_1343_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1351_ce = 1'b1;
    end else begin
        grp_fu_1351_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1483_ce = 1'b1;
    end else begin
        grp_fu_1483_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1491_ce = 1'b1;
    end else begin
        grp_fu_1491_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_1610_ce = 1'b1;
    end else begin
        grp_fu_1610_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_1623_ce = 1'b1;
    end else begin
        grp_fu_1623_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_1709_ce = 1'b1;
    end else begin
        grp_fu_1709_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2019_ce = 1'b1;
    end else begin
        grp_fu_2019_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_2027_ce = 1'b1;
    end else begin
        grp_fu_2027_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_2036_ce = 1'b1;
    end else begin
        grp_fu_2036_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_2045_ce = 1'b1;
    end else begin
        grp_fu_2045_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)))) begin
        grp_fu_2054_ce = 1'b1;
    end else begin
        grp_fu_2054_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)))) begin
        grp_fu_2063_ce = 1'b1;
    end else begin
        grp_fu_2063_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2070_ce = 1'b1;
    end else begin
        grp_fu_2070_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2079_ce = 1'b1;
    end else begin
        grp_fu_2079_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2088_ce = 1'b1;
    end else begin
        grp_fu_2088_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2097_ce = 1'b1;
    end else begin
        grp_fu_2097_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_2106_ce = 1'b1;
    end else begin
        grp_fu_2106_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln67_fu_982_p2 == 1'd0) & (icmp_ln64_fu_977_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((or_ln52_reg_2256 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8) & (1'b1 == ap_CS_fsm_pp2_stage8) & (cmp92_reg_2384 == 1'd1) & (icmp_ln105_reg_2727 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1)))) begin
        strm_in_TDATA_blk_n = strm_in_TVALID_int_regslice;
    end else begin
        strm_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op169_read_state8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((or_ln52_reg_2256 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | (~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (ap_predicate_op476_read_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage8)))) begin
        strm_in_TREADY_int_regslice = 1'b1;
    end else begin
        strm_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln100_reg_2526_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2526_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        strm_out_TDATA_blk_n = strm_out_TREADY_int_regslice;
    end else begin
        strm_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (ap_predicate_op544_write_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        strm_out_TVALID_int_regslice = 1'b1;
    end else begin
        strm_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln47_fu_693_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln47_fu_693_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln61_fu_927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln62_fu_961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln64_fu_977_p2 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln64_fu_977_p2 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln80_fu_1035_p2 == 1'd0) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln80_fu_1035_p2 == 1'd1) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln83_fu_1102_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln86_reg_2415 == 1'd0)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln86_reg_2415 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((1'b0 == ap_block_pp2_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter1 == 1'b1)) & (1'b0 == ap_block_pp2_stage6_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((1'b0 == ap_block_pp2_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_pp2_stage8 : begin
            if ((1'b0 == ap_block_pp2_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accum_V_10_fu_1843_p3 = ((icmp_ln99_2_reg_2473[0:0] == 1'b1) ? accum_V_9_fu_1837_p3 : accum_V_7_reg_2835);

assign accum_V_12_fu_1869_p3 = ((and_ln101_2_fu_1865_p2[0:0] == 1'b1) ? grp_fu_2054_p3 : accum_V_10_reg_2862);

assign accum_V_13_fu_1875_p3 = ((icmp_ln99_3_reg_2489[0:0] == 1'b1) ? accum_V_12_fu_1869_p3 : accum_V_10_reg_2862);

assign accum_V_15_fu_1896_p3 = ((and_ln101_3_fu_1892_p2[0:0] == 1'b1) ? grp_fu_2070_p3 : accum_V_13_reg_2889);

assign accum_V_16_fu_1902_p3 = ((icmp_ln99_4_reg_2566[0:0] == 1'b1) ? accum_V_15_fu_1896_p3 : accum_V_13_reg_2889);

assign accum_V_18_fu_1920_p3 = ((and_ln101_4_fu_1916_p2[0:0] == 1'b1) ? grp_fu_2079_p3 : accum_V_16_reg_2911);

assign accum_V_19_fu_1926_p3 = ((icmp_ln99_5_reg_2582[0:0] == 1'b1) ? accum_V_18_fu_1920_p3 : accum_V_16_reg_2911);

assign accum_V_21_fu_1943_p3 = ((and_ln101_5_fu_1939_p2[0:0] == 1'b1) ? grp_fu_2088_p3 : accum_V_19_reg_2928);

assign accum_V_22_fu_1949_p3 = ((icmp_ln99_6_reg_2651[0:0] == 1'b1) ? accum_V_21_fu_1943_p3 : accum_V_19_reg_2928);

assign accum_V_24_fu_1959_p3 = ((and_ln101_6_fu_1955_p2[0:0] == 1'b1) ? grp_fu_2097_p3 : accum_V_22_reg_2945);

assign accum_V_25_fu_1965_p3 = ((icmp_ln99_7_reg_2667_pp2_iter1_reg[0:0] == 1'b1) ? accum_V_24_fu_1959_p3 : accum_V_22_reg_2945);

assign accum_V_27_fu_1976_p3 = ((icmp_ln100_reg_2526_pp2_iter1_reg[0:0] == 1'b1) ? grp_fu_2106_p3 : accum_V_25_reg_2952);

assign accum_V_29_fu_1995_p3 = ((and_ln113_fu_1990_p2[0:0] == 1'b1) ? 8'd0 : accum_V_27_fu_1976_p3);

assign accum_V_3_fu_1747_p3 = ((and_ln100_fu_1743_p2[0:0] == 1'b1) ? grp_fu_2027_p3 : accum_V_load_reg_2741);

assign accum_V_4_fu_1753_p3 = ((icmp_ln99_reg_2419[0:0] == 1'b1) ? accum_V_3_fu_1747_p3 : accum_V_load_reg_2741);

assign accum_V_6_fu_1794_p3 = ((and_ln101_fu_1790_p2[0:0] == 1'b1) ? grp_fu_2036_p3 : accum_V_4_reg_2798);

assign accum_V_7_fu_1800_p3 = ((icmp_ln99_1_reg_2435[0:0] == 1'b1) ? accum_V_6_fu_1794_p3 : accum_V_4_reg_2798);

assign accum_V_9_fu_1837_p3 = ((and_ln101_1_fu_1833_p2[0:0] == 1'b1) ? grp_fu_2045_p3 : accum_V_7_reg_2835);

assign add74_2_fu_1087_p2 = (trunc_ln80_fu_1040_p1 ^ 2'd2);

assign add98_fu_1053_p2 = ($signed(trunc_ln80_fu_1040_p1) + $signed(2'd3));

assign add_ln102_10_fu_1583_p2 = (trunc_ln102_4_reg_2640 + 18'd1);

assign add_ln102_11_fu_1588_p2 = (add_ln102_10_fu_1583_p2 + add_ln102_9_reg_2645);

assign add_ln102_12_fu_1668_p2 = (trunc_ln102_5_reg_2713 + 18'd2);

assign add_ln102_13_fu_1673_p2 = (add_ln102_12_fu_1668_p2 + add_ln102_9_reg_2645);

assign add_ln102_14_fu_1687_p2 = (mul_ln83_reg_2405 + trunc_ln102_6_reg_2718);

assign add_ln102_15_fu_1691_p2 = (add_ln102_14_fu_1687_p2 + trunc_ln36_reg_2517);

assign add_ln102_16_fu_1705_p2 = (mul_ln83_reg_2405 + trunc_ln36_reg_2517);

assign add_ln102_17_fu_1771_p2 = (trunc_ln102_7_reg_2777 + 18'd1);

assign add_ln102_18_fu_1776_p2 = (add_ln102_17_fu_1771_p2 + add_ln102_16_reg_2782);

assign add_ln102_19_fu_1818_p2 = (trunc_ln102_8_reg_2830 + 18'd2);

assign add_ln102_1_fu_1315_p2 = (add_ln102_fu_1311_p2 + trunc_ln36_fu_1302_p1);

assign add_ln102_20_fu_1823_p2 = (add_ln102_19_fu_1818_p2 + add_ln102_16_reg_2782);

assign add_ln102_2_fu_1330_p2 = (mul75_cast_reg_2393 + trunc_ln36_fu_1302_p1);

assign add_ln102_3_fu_1437_p2 = (trunc_ln102_1_reg_2545 + 18'd1);

assign add_ln102_4_fu_1442_p2 = (add_ln102_3_fu_1437_p2 + add_ln102_2_reg_2550);

assign add_ln102_5_fu_1452_p2 = (trunc_ln102_2_reg_2556 + 18'd2);

assign add_ln102_6_fu_1457_p2 = (add_ln102_5_fu_1452_p2 + add_ln102_2_reg_2550);

assign add_ln102_7_fu_1569_p2 = (mul75_1_cast_reg_2399 + trunc_ln102_3_reg_2630);

assign add_ln102_8_fu_1573_p2 = (add_ln102_7_fu_1569_p2 + trunc_ln36_reg_2517);

assign add_ln102_9_fu_1479_p2 = (mul75_1_cast_reg_2399 + trunc_ln36_reg_2517);

assign add_ln102_fu_1311_p2 = (mul75_cast_reg_2393 + trunc_ln102_reg_2463);

assign add_ln126_fu_1646_p2 = ($signed(kn_8_reg_2678) + $signed(32'd1));

assign add_ln215_10_fu_1407_p2 = (add_ln215_9_fu_1401_p2 + 14'd5);

assign add_ln215_11_fu_1502_p2 = (tmp_11_cast_fu_1495_p3 + trunc_ln215_12_reg_2600);

assign add_ln215_12_fu_1507_p2 = (add_ln215_11_fu_1502_p2 + 14'd6);

assign add_ln215_13_fu_1541_p2 = (tmp_12_cast_fu_1533_p3 + trunc_ln215_14_fu_1525_p1);

assign add_ln215_14_fu_1547_p2 = (add_ln215_13_fu_1541_p2 + 14'd7);

assign add_ln215_15_fu_1727_p2 = (tmp_13_cast_fu_1719_p3 + trunc_ln215_16_fu_1713_p1);

assign add_ln215_16_fu_1733_p2 = (add_ln215_15_fu_1727_p2 + 14'd8);

assign add_ln215_1_fu_1180_p2 = (tmp_6_cast_fu_1172_p3 + trunc_ln215_2_fu_1164_p1);

assign add_ln215_2_fu_1186_p2 = (add_ln215_1_fu_1180_p2 + 14'd1);

assign add_ln215_3_fu_1235_p2 = (tmp_7_cast_fu_1228_p3 + trunc_ln215_4_reg_2453);

assign add_ln215_4_fu_1240_p2 = (add_ln215_3_fu_1235_p2 + 14'd2);

assign add_ln215_5_fu_1274_p2 = (tmp_8_cast_fu_1266_p3 + trunc_ln215_6_fu_1258_p1);

assign add_ln215_6_fu_1280_p2 = (add_ln215_5_fu_1274_p2 + 14'd3);

assign add_ln215_7_fu_1362_p2 = (tmp_9_cast_fu_1355_p3 + trunc_ln215_8_reg_2507);

assign add_ln215_8_fu_1367_p2 = (add_ln215_7_fu_1362_p2 + 14'd4);

assign add_ln215_9_fu_1401_p2 = (tmp_10_cast_fu_1393_p3 + trunc_ln215_10_fu_1385_p1);

assign add_ln215_fu_1140_p2 = (tmp_5_cast_fu_1132_p3 + trunc_ln215_fu_1124_p1);

assign add_ln47_1_fu_672_p2 = (indvar_flatten17_reg_408 + 36'd1);

assign add_ln47_fu_698_p2 = (ap_phi_mux_n_phi_fu_423_p4 + 32'd1);

assign add_ln49_1_fu_778_p2 = (indvar_flatten_reg_430 + 4'd1);

assign add_ln49_fu_744_p2 = (select_ln47_fu_710_p3 + 2'd1);

assign add_ln50_fu_772_p2 = (select_ln49_fu_756_p3 + 2'd1);

assign add_ln54_1_fu_894_p2 = (sub_ln54_1_fu_886_p2 + zext_ln54_3_fu_891_p1);

assign add_ln54_fu_824_p2 = ($signed(sext_ln47_fu_812_p1) + $signed(zext_ln54_2_fu_821_p1));

assign add_ln67_fu_987_p2 = (phi_mul_reg_508 + trunc_ln70_reg_2265);

assign and99_cast_fu_1059_p1 = add98_fu_1053_p2;

assign and_ln100_fu_1743_p2 = (icmp_ln99_reg_2419 & icmp_ln100_reg_2526);

assign and_ln101_1_fu_1833_p2 = (icmp_ln99_2_reg_2473 & icmp_ln100_reg_2526);

assign and_ln101_2_fu_1865_p2 = (icmp_ln99_3_reg_2489 & icmp_ln100_reg_2526);

assign and_ln101_3_fu_1892_p2 = (icmp_ln99_4_reg_2566 & icmp_ln100_reg_2526);

assign and_ln101_4_fu_1916_p2 = (icmp_ln99_5_reg_2582 & icmp_ln100_reg_2526);

assign and_ln101_5_fu_1939_p2 = (icmp_ln99_6_reg_2651 & icmp_ln100_reg_2526_pp2_iter1_reg);

assign and_ln101_6_fu_1955_p2 = (icmp_ln99_7_reg_2667_pp2_iter1_reg & icmp_ln100_reg_2526_pp2_iter1_reg);

assign and_ln101_fu_1790_p2 = (icmp_ln99_1_reg_2435 & icmp_ln100_reg_2526);

assign and_ln113_fu_1990_p1 = relu;

assign and_ln113_fu_1990_p2 = (tmp_2_fu_1982_p3 & and_ln113_fu_1990_p1);

assign and_ln47_fu_738_p2 = (xor_ln47_fu_726_p2 & icmp_ln50_fu_732_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage8 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((or_ln52_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((or_ln52_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_predicate_op169_read_state8 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_predicate_op169_read_state8 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage5_01001 = ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op544_write_state30 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage5_11001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state30_io) | ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op544_write_state30 == 1'b1))));
end

always @ (*) begin
    ap_block_pp2_stage5_subdone = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state30_io) | ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op544_write_state30 == 1'b1))));
end

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage6_11001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state31_io) | ((ap_predicate_op546_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage6_subdone = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state31_io) | ((ap_predicate_op546_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage8_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_predicate_op476_read_state24 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp2_stage8_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_predicate_op476_read_state24 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp2_stage8_iter0 = ((ap_predicate_op476_read_state24 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state25_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op544_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_state30_pp2_stage5_iter1 = ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op544_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_state31_io = ((ap_predicate_op546_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp2_stage6_iter1 = ((ap_predicate_op546_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((or_ln52_reg_2256 == 1'd0) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp1_stage0_iter0 = ((ap_predicate_op169_read_state8 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2052 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2415 == 1'd1));
end

always @ (*) begin
    ap_condition_454 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_x_7_reg_519 = 'bx;

always @ (*) begin
    ap_predicate_op169_read_state8 = ((icmp_ln67_fu_982_p2 == 1'd0) & (icmp_ln64_fu_977_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op476_read_state24 = ((cmp92_reg_2384 == 1'd1) & (icmp_ln105_reg_2727 == 1'd1) & (icmp_ln99_8_reg_2723 == 1'd1) & (icmp_ln86_reg_2415 == 1'd1));
end

always @ (*) begin
    ap_predicate_op544_write_state30 = ((icmp_ln100_reg_2526_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op546_write_state31 = ((icmp_ln100_reg_2526_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2727_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2723_pp2_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bias_V_fu_640_p1 = strm_in_TDATA_int_regslice[3:0];

assign bound4_fu_660_p2 = (p_shl_fu_656_p1 + cast2_fu_644_p1);

assign cast2_fu_644_p1 = kernelN;

assign cmp22_not_mid113_fu_666_p2 = (($signed(kernelSize) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign cmp92_fu_1048_p2 = (($signed(zext_ln80_fu_1044_p1) < $signed(sub91_reg_2358)) ? 1'b1 : 1'b0);

assign conv69_fu_1013_p1 = $signed(outMapXSize_reg_2306);

assign conv_i38_fu_1016_p1 = $signed(bias_V_reg_2173);

assign empty_14_fu_632_p1 = kernelSize[15:0];

assign empty_15_fu_636_p0 = mapSizeY;

assign empty_15_fu_636_p1 = empty_15_fu_636_p0[15:0];

assign empty_18_fu_918_p0 = mapSizeX;

assign empty_18_fu_918_p1 = empty_18_fu_918_p0[17:0];

assign empty_21_fu_1739_p1 = grp_fu_1623_p2[17:0];

assign empty_fu_628_p0 = mapSizeX;

assign empty_fu_628_p1 = empty_fu_628_p0[15:0];

assign filter_V_d0 = strm_in_TDATA_int_regslice[3:0];

assign grp_fu_2019_p1 = zext_ln61_reg_2287;

assign grp_fu_2027_p2 = ((icmp_ln100_reg_2526[0:0] == 1'b1) ? conv_i38_reg_2353 : ap_sig_allocacmp_accum_V_load);

assign grp_fu_2036_p2 = ((icmp_ln99_reg_2419[0:0] == 1'b1) ? accum_V_3_fu_1747_p3 : accum_V_load_reg_2741);

assign grp_fu_2045_p2 = ((icmp_ln99_1_reg_2435[0:0] == 1'b1) ? accum_V_6_fu_1794_p3 : accum_V_4_reg_2798);

assign grp_fu_2054_p2 = ((icmp_ln99_2_reg_2473[0:0] == 1'b1) ? accum_V_9_fu_1837_p3 : accum_V_7_reg_2835);

assign grp_fu_2063_p1 = and99_cast_reg_2388;

assign grp_fu_2070_p2 = ((icmp_ln99_3_reg_2489[0:0] == 1'b1) ? accum_V_12_fu_1869_p3 : accum_V_10_reg_2862);

assign grp_fu_2079_p2 = ((icmp_ln99_4_reg_2566[0:0] == 1'b1) ? accum_V_15_fu_1896_p3 : accum_V_13_reg_2889);

assign grp_fu_2088_p2 = ((icmp_ln99_5_reg_2582[0:0] == 1'b1) ? accum_V_18_fu_1920_p3 : accum_V_16_reg_2911);

assign grp_fu_2097_p2 = ((icmp_ln99_6_reg_2651[0:0] == 1'b1) ? accum_V_21_fu_1943_p3 : accum_V_19_reg_2928);

assign grp_fu_2106_p2 = ((icmp_ln99_7_reg_2667_pp2_iter1_reg[0:0] == 1'b1) ? accum_V_24_fu_1959_p3 : accum_V_22_reg_2945);

assign icmp_ln100_fu_1306_p2 = (($signed(ap_phi_mux_x_5_phi_fu_570_p4) < $signed(conv69_reg_2348)) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_1618_p1 = mapSizeX;

assign icmp_ln105_fu_1618_p2 = (($signed(x_5_reg_567) < $signed(icmp_ln105_fu_1618_p1)) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_1627_p1 = mapSizeX;

assign icmp_ln122_fu_1627_p2 = (($signed(x_5_reg_567) < $signed(icmp_ln122_fu_1627_p1)) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_693_p2 = ((indvar_flatten17_reg_408 == bound4_reg_2178) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_704_p2 = ((indvar_flatten_reg_430 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_732_p2 = ((x_1_reg_452 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_862_p2 = (($signed(zext_ln50_fu_859_p1) < $signed(kernelSize)) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_927_p2 = ((y_reg_463 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_961_p2 = (($signed(x_reg_474) < $signed(32'd42)) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_977_p2 = (($signed(zext_ln64_fu_973_p1) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_982_p2 = (($signed(ap_phi_mux_x_3_phi_fu_500_p4) > $signed(sub_reg_2260)) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1035_p2 = (($signed(zext_ln80_1_fu_1031_p1) < $signed(outMapYSize_reg_2300)) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_1102_p2 = (($signed(x_2_reg_543) < $signed(32'd42)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1108_p2 = (($signed(ap_phi_mux_kn_phi_fu_559_p4) < $signed(32'd1536)) ? 1'b1 : 1'b0);

assign icmp_ln99_1_fu_1159_p2 = (($signed(kn_1_fu_1151_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_2_fu_1220_p2 = (($signed(kn_2_reg_2446) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_3_fu_1253_p2 = (($signed(kn_3_fu_1246_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_4_fu_1347_p2 = (($signed(kn_4_reg_2500) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_5_fu_1380_p2 = (($signed(kn_5_fu_1373_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_6_fu_1487_p2 = (($signed(kn_6_reg_2593) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_7_fu_1520_p2 = (($signed(kn_7_fu_1513_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_8_fu_1614_p2 = (($signed(kn_8_reg_2678) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_1114_p2 = (($signed(ap_phi_mux_kn_phi_fu_559_p4) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign kn_1_fu_1151_p3 = ((icmp_ln99_fu_1114_p2[0:0] == 1'b1) ? ap_phi_mux_kn_phi_fu_559_p4 : 32'd1536);

assign kn_2_fu_1192_p3 = ((icmp_ln99_1_fu_1159_p2[0:0] == 1'b1) ? kn_1_fu_1151_p3 : 32'd1536);

assign kn_3_fu_1246_p3 = ((icmp_ln99_2_fu_1220_p2[0:0] == 1'b1) ? kn_2_reg_2446 : 32'd1536);

assign kn_4_fu_1286_p3 = ((icmp_ln99_3_fu_1253_p2[0:0] == 1'b1) ? kn_3_fu_1246_p3 : 32'd1536);

assign kn_5_fu_1373_p3 = ((icmp_ln99_4_fu_1347_p2[0:0] == 1'b1) ? kn_4_reg_2500 : 32'd1536);

assign kn_6_fu_1413_p3 = ((icmp_ln99_5_fu_1380_p2[0:0] == 1'b1) ? kn_5_fu_1373_p3 : 32'd1536);

assign kn_7_fu_1513_p3 = ((icmp_ln99_6_fu_1487_p2[0:0] == 1'b1) ? kn_6_reg_2593 : 32'd1536);

assign kn_8_fu_1553_p3 = ((icmp_ln99_7_fu_1520_p2[0:0] == 1'b1) ? kn_7_fu_1513_p3 : 32'd1536);

assign mul75_1_cast_fu_1082_p0 = mul75_1_cast_fu_1082_p00;

assign mul75_1_cast_fu_1082_p00 = y_4_cast_fu_1072_p2;

assign mul75_cast_fu_1067_p0 = mul75_cast_fu_1067_p00;

assign mul75_cast_fu_1067_p00 = trunc_ln80_fu_1040_p1;

assign mul_ln83_fu_1097_p0 = mul_ln83_fu_1097_p00;

assign mul_ln83_fu_1097_p00 = add74_2_fu_1087_p2;

assign n_2_fu_967_p2 = (n_1_reg_486 + 31'd1);

assign or_ln49_fu_750_p2 = (icmp_ln49_fu_704_p2 | and_ln47_fu_738_p2);

assign or_ln52_fu_873_p2 = (xor_ln52_fu_867_p2 | select_ln49_2_fu_852_p3);

assign outMapXSize_fu_951_p2 = (sub_ln78_fu_947_p2 + 16'd1);

assign outMapYSize_cast_fu_1010_p1 = outMapYSize_reg_2300;

assign outMapYSize_fu_941_p2 = (sub_ln77_fu_937_p2 + 16'd1);

assign p_shl1_cast_fu_879_p3 = {{trunc_ln54_1_reg_2251}, {2'd0}};

assign p_shl_fu_656_p1 = tmp_1_fu_648_p3;

assign rev107_fu_687_p2 = (slt_fu_682_p2 ^ 1'd1);

assign rev109_fu_846_p2 = (slt108_fu_841_p2 ^ 1'd1);

assign select_ln47_1_fu_718_p3 = ((icmp_ln49_fu_704_p2[0:0] == 1'b1) ? add_ln47_fu_698_p2 : ap_phi_mux_n_phi_fu_423_p4);

assign select_ln47_2_fu_816_p3 = ((icmp_ln49_reg_2202[0:0] == 1'b1) ? cmp22_not_mid113_reg_2183 : rev107_reg_2193);

assign select_ln47_fu_710_p3 = ((icmp_ln49_fu_704_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_y_1_phi_fu_445_p4);

assign select_ln49_1_fu_764_p3 = ((and_ln47_fu_738_p2[0:0] == 1'b1) ? add_ln49_fu_744_p2 : select_ln47_fu_710_p3);

assign select_ln49_2_fu_852_p3 = ((and_ln47_reg_2214[0:0] == 1'b1) ? rev109_fu_846_p2 : select_ln47_2_fu_816_p3);

assign select_ln49_3_fu_784_p3 = ((icmp_ln49_fu_704_p2[0:0] == 1'b1) ? 4'd1 : add_ln49_1_fu_778_p2);

assign select_ln49_fu_756_p3 = ((or_ln49_fu_750_p2[0:0] == 1'b1) ? 2'd0 : x_1_reg_452);

assign sext_ln47_fu_812_p1 = $signed(sub_ln54_fu_806_p2);

assign slt108_fu_841_p2 = (($signed(zext_ln49_1_fu_838_p1) < $signed(kernelSize)) ? 1'b1 : 1'b0);

assign slt_fu_682_p2 = (($signed(zext_ln49_fu_678_p1) < $signed(kernelSize)) ? 1'b1 : 1'b0);

assign strm_in_TREADY = regslice_both_strm_in_V_data_V_U_ack_in;

assign strm_out_TDATA_int_regslice = $signed(accum_V_29_fu_1995_p3);

assign strm_out_TVALID = regslice_both_strm_out_V_data_V_U_vld_out;

assign sub91_fu_1019_p2 = ($signed(outMapYSize_cast_fu_1010_p1) + $signed(17'd131071));

assign sub_fu_910_p0 = mapSizeX;

assign sub_fu_910_p2 = ($signed(sub_fu_910_p0) + $signed(32'd4294967295));

assign sub_ln54_1_fu_886_p2 = (p_shl1_cast_fu_879_p3 - trunc_ln54_reg_2246);

assign sub_ln54_fu_806_p2 = (zext_ln54_1_fu_802_p1 - zext_ln54_fu_792_p1);

assign sub_ln77_fu_937_p2 = (empty_15_reg_2168 - empty_14_reg_2162);

assign sub_ln78_fu_947_p2 = (empty_reg_2157 - empty_14_reg_2162);

assign tmp_10_cast_fu_1393_p3 = {{trunc_ln215_11_fu_1389_p1}, {3'd0}};

assign tmp_11_cast_fu_1495_p3 = {{trunc_ln215_13_reg_2605}, {3'd0}};

assign tmp_12_cast_fu_1533_p3 = {{trunc_ln215_15_fu_1529_p1}, {3'd0}};

assign tmp_13_cast_fu_1719_p3 = {{trunc_ln215_17_fu_1716_p1}, {3'd0}};

assign tmp_1_fu_648_p3 = {{kernelN}, {3'd0}};

assign tmp_2_fu_1982_p3 = accum_V_27_fu_1976_p3[32'd7];

assign tmp_3_fu_795_p3 = {{select_ln47_1_reg_2207}, {2'd0}};

assign tmp_5_cast_fu_1132_p3 = {{trunc_ln215_1_fu_1128_p1}, {3'd0}};

assign tmp_6_cast_fu_1172_p3 = {{trunc_ln215_3_fu_1168_p1}, {3'd0}};

assign tmp_7_cast_fu_1228_p3 = {{trunc_ln215_5_reg_2458}, {3'd0}};

assign tmp_8_cast_fu_1266_p3 = {{trunc_ln215_7_fu_1262_p1}, {3'd0}};

assign tmp_9_cast_fu_1355_p3 = {{trunc_ln215_9_reg_2512}, {3'd0}};

assign trunc_ln102_1_fu_1326_p1 = grp_fu_1212_p2[17:0];

assign trunc_ln102_2_fu_1335_p1 = grp_fu_1224_p2[17:0];

assign trunc_ln102_3_fu_1467_p1 = grp_fu_1343_p2[17:0];

assign trunc_ln102_4_fu_1475_p1 = grp_fu_1351_p2[17:0];

assign trunc_ln102_5_fu_1602_p1 = grp_fu_1483_p2[17:0];

assign trunc_ln102_6_fu_1606_p1 = grp_fu_1491_p2[17:0];

assign trunc_ln102_7_fu_1701_p1 = grp_fu_1610_p2[17:0];

assign trunc_ln102_8_fu_1786_p1 = grp_fu_1709_p2[17:0];

assign trunc_ln102_fu_1208_p1 = grp_fu_1119_p2[17:0];

assign trunc_ln215_10_fu_1385_p1 = kn_5_fu_1373_p3[13:0];

assign trunc_ln215_11_fu_1389_p1 = kn_5_fu_1373_p3[10:0];

assign trunc_ln215_12_fu_1421_p1 = kn_6_fu_1413_p3[13:0];

assign trunc_ln215_13_fu_1425_p1 = kn_6_fu_1413_p3[10:0];

assign trunc_ln215_14_fu_1525_p1 = kn_7_fu_1513_p3[13:0];

assign trunc_ln215_15_fu_1529_p1 = kn_7_fu_1513_p3[10:0];

assign trunc_ln215_16_fu_1713_p1 = kn_8_reg_2678[13:0];

assign trunc_ln215_17_fu_1716_p1 = kn_8_reg_2678[10:0];

assign trunc_ln215_1_fu_1128_p1 = ap_phi_mux_kn_phi_fu_559_p4[10:0];

assign trunc_ln215_2_fu_1164_p1 = kn_1_fu_1151_p3[13:0];

assign trunc_ln215_3_fu_1168_p1 = kn_1_fu_1151_p3[10:0];

assign trunc_ln215_4_fu_1200_p1 = kn_2_fu_1192_p3[13:0];

assign trunc_ln215_5_fu_1204_p1 = kn_2_fu_1192_p3[10:0];

assign trunc_ln215_6_fu_1258_p1 = kn_3_fu_1246_p3[13:0];

assign trunc_ln215_7_fu_1262_p1 = kn_3_fu_1246_p3[10:0];

assign trunc_ln215_8_fu_1294_p1 = kn_4_fu_1286_p3[13:0];

assign trunc_ln215_9_fu_1298_p1 = kn_4_fu_1286_p3[10:0];

assign trunc_ln215_fu_1124_p1 = ap_phi_mux_kn_phi_fu_559_p4[13:0];

assign trunc_ln36_fu_1302_p1 = ap_phi_mux_x_5_phi_fu_570_p4[17:0];

assign trunc_ln54_1_fu_834_p1 = add_ln54_fu_824_p2[11:0];

assign trunc_ln54_fu_830_p1 = add_ln54_fu_824_p2[13:0];

assign trunc_ln64_fu_996_p1 = x_3_reg_497[17:0];

assign trunc_ln69_1_fu_992_p1 = strm_in_TDATA_int_regslice[3:0];

assign trunc_ln69_2_fu_1861_p1 = strm_in_TDATA_int_regslice[3:0];

assign trunc_ln70_fu_915_p0 = mapSizeY;

assign trunc_ln70_fu_915_p1 = trunc_ln70_fu_915_p0[17:0];

assign trunc_ln80_fu_1040_p1 = y_2_reg_532[1:0];

assign x_4_fu_1004_p2 = (x_3_reg_497 + 32'd1);

assign x_6_fu_2013_p2 = (x_5_reg_567 + 32'd1);

assign x_8_fu_1638_p3 = ((xor_ln122_fu_1632_p2[0:0] == 1'b1) ? 32'd42 : x_5_reg_567);

assign xor_ln122_fu_1632_p2 = (icmp_ln122_fu_1627_p2 ^ 1'd1);

assign xor_ln47_fu_726_p2 = (icmp_ln49_fu_704_p2 ^ 1'd1);

assign xor_ln52_fu_867_p2 = (icmp_ln52_fu_862_p2 ^ 1'd1);

assign y_3_fu_921_p2 = (y_reg_463 + 2'd1);

assign y_4_cast_fu_1072_p2 = (trunc_ln80_fu_1040_p1 + 2'd1);

assign y_4_fu_1025_p2 = (y_2_reg_532 + 15'd1);

assign zext_ln102_1_fu_1447_p1 = add_ln102_4_fu_1442_p2;

assign zext_ln102_2_fu_1462_p1 = add_ln102_6_fu_1457_p2;

assign zext_ln102_3_fu_1578_p1 = add_ln102_8_fu_1573_p2;

assign zext_ln102_4_fu_1593_p1 = add_ln102_11_fu_1588_p2;

assign zext_ln102_5_fu_1678_p1 = add_ln102_13_fu_1673_p2;

assign zext_ln102_6_fu_1696_p1 = add_ln102_15_fu_1691_p2;

assign zext_ln102_7_fu_1781_p1 = add_ln102_18_fu_1776_p2;

assign zext_ln102_8_fu_1828_p1 = add_ln102_20_fu_1823_p2;

assign zext_ln102_fu_1321_p1 = add_ln102_1_fu_1315_p2;

assign zext_ln109_fu_1888_p1 = $unsigned(grp_fu_2063_p4);

assign zext_ln215_1_fu_1216_p1 = add_ln215_2_reg_2441;

assign zext_ln215_2_fu_1339_p1 = add_ln215_4_reg_2479;

assign zext_ln215_3_fu_1471_p1 = add_ln215_6_reg_2495;

assign zext_ln215_4_fu_1598_p1 = add_ln215_8_reg_2572;

assign zext_ln215_5_fu_1683_p1 = add_ln215_10_reg_2588;

assign zext_ln215_6_fu_1767_p1 = add_ln215_12_reg_2657;

assign zext_ln215_7_fu_1814_p1 = add_ln215_14_reg_2673;

assign zext_ln215_8_fu_1857_p1 = add_ln215_16_reg_2788;

assign zext_ln215_fu_1146_p1 = add_ln215_fu_1140_p2;

assign zext_ln49_1_fu_838_p1 = add_ln49_reg_2219;

assign zext_ln49_fu_678_p1 = ap_phi_mux_y_1_phi_fu_445_p4;

assign zext_ln50_fu_859_p1 = select_ln49_reg_2224;

assign zext_ln54_1_fu_802_p1 = tmp_3_fu_795_p3;

assign zext_ln54_2_fu_821_p1 = select_ln49_1_reg_2230;

assign zext_ln54_3_fu_891_p1 = select_ln49_reg_2224_pp0_iter1_reg;

assign zext_ln54_4_fu_900_p1 = add_ln54_1_fu_894_p2;

assign zext_ln54_fu_792_p1 = select_ln47_1_reg_2207;

assign zext_ln61_fu_933_p1 = y_reg_463;

assign zext_ln64_fu_973_p1 = n_1_reg_486;

assign zext_ln70_fu_1000_p1 = $unsigned(grp_fu_2019_p4);

assign zext_ln80_1_fu_1031_p1 = y_2_reg_532;

assign zext_ln80_fu_1044_p1 = y_2_reg_532;

always @ (posedge ap_clk) begin
    zext_ln61_reg_2287[17:2] <= 16'b0000000000000000;
    and99_cast_reg_2388[17:2] <= 16'b0000000000000000;
end

endmodule //depthwise
