// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="depthwise_depthwise,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.215500,HLS_SYN_LAT=10597,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=3767,HLS_SYN_LUT=3493,HLS_VERSION=2020_2}" *)

module depthwise (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_TDATA,
        strm_in_TVALID,
        strm_in_TREADY,
        strm_in_TKEEP,
        strm_in_TSTRB,
        strm_in_TLAST,
        strm_out_TDATA,
        strm_out_TVALID,
        strm_out_TREADY,
        strm_out_TKEEP,
        strm_out_TSTRB,
        strm_out_TLAST,
        kernelN,
        kernelSize,
        mapSizeX,
        mapSizeY,
        relu
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_state5 = 20'd4;
parameter    ap_ST_fsm_state6 = 20'd8;
parameter    ap_ST_fsm_state7 = 20'd16;
parameter    ap_ST_fsm_pp1_stage0 = 20'd32;
parameter    ap_ST_fsm_state12 = 20'd64;
parameter    ap_ST_fsm_state13 = 20'd128;
parameter    ap_ST_fsm_state14 = 20'd256;
parameter    ap_ST_fsm_state15 = 20'd512;
parameter    ap_ST_fsm_pp2_stage0 = 20'd1024;
parameter    ap_ST_fsm_pp2_stage1 = 20'd2048;
parameter    ap_ST_fsm_pp2_stage2 = 20'd4096;
parameter    ap_ST_fsm_pp2_stage3 = 20'd8192;
parameter    ap_ST_fsm_pp2_stage4 = 20'd16384;
parameter    ap_ST_fsm_pp2_stage5 = 20'd32768;
parameter    ap_ST_fsm_pp2_stage6 = 20'd65536;
parameter    ap_ST_fsm_pp2_stage7 = 20'd131072;
parameter    ap_ST_fsm_pp2_stage8 = 20'd262144;
parameter    ap_ST_fsm_state32 = 20'd524288;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_TDATA;
input   strm_in_TVALID;
output   strm_in_TREADY;
input  [3:0] strm_in_TKEEP;
input  [3:0] strm_in_TSTRB;
input  [0:0] strm_in_TLAST;
output  [31:0] strm_out_TDATA;
output   strm_out_TVALID;
input   strm_out_TREADY;
output  [3:0] strm_out_TKEEP;
output  [3:0] strm_out_TSTRB;
output  [0:0] strm_out_TLAST;
input  [31:0] kernelN;
input  [31:0] kernelSize;
input  [31:0] mapSizeX;
input  [31:0] mapSizeY;
input   relu;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    strm_in_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln52_reg_2276;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln64_fu_987_p2;
wire   [0:0] icmp_ln67_fu_992_p2;
wire    ap_CS_fsm_pp2_stage8;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage8;
reg   [0:0] icmp_ln86_reg_2435;
reg   [0:0] icmp_ln99_8_reg_2743;
reg   [0:0] icmp_ln105_reg_2747;
reg   [0:0] cmp92_reg_2404;
reg    strm_out_TDATA_blk_n;
wire    ap_CS_fsm_pp2_stage5;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage5;
reg   [0:0] icmp_ln99_8_reg_2743_pp2_iter1_reg;
reg   [0:0] icmp_ln105_reg_2747_pp2_iter1_reg;
reg   [0:0] icmp_ln100_reg_2546;
reg   [0:0] icmp_ln100_reg_2546_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_pp2_stage6;
reg   [35:0] indvar_flatten17_reg_418;
reg   [31:0] n_reg_429;
reg   [3:0] indvar_flatten_reg_440;
reg   [1:0] y_1_reg_451;
reg   [1:0] x_1_reg_462;
reg   [30:0] n_1_reg_496;
reg   [31:0] x_3_reg_507;
reg   [17:0] phi_mul_reg_518;
reg   [31:0] x_7_reg_529;
reg  signed [31:0] kn_reg_565;
reg   [31:0] x_5_reg_577;
reg   [31:0] x_9_reg_588;
reg   [31:0] kn_9_reg_600;
wire   [3:0] filter_V_q0;
reg  signed [3:0] reg_621;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state17_pp2_stage1_iter0;
wire    ap_block_state26_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state19_pp2_stage3_iter0;
wire    ap_block_state28_pp2_stage3_iter1;
wire    ap_block_pp2_stage3_11001;
reg   [0:0] icmp_ln99_2_reg_2493;
wire    ap_block_state21_pp2_stage5_iter0;
reg    ap_predicate_op545_write_state30;
reg    ap_block_state30_pp2_stage5_iter1;
reg    ap_block_state30_io;
reg    ap_block_pp2_stage5_11001;
reg   [0:0] icmp_ln99_4_reg_2586;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state23_pp2_stage7_iter0;
wire    ap_block_pp2_stage7_11001;
reg   [0:0] icmp_ln99_6_reg_2671;
reg  signed [3:0] reg_625;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state18_pp2_stage2_iter0;
wire    ap_block_state27_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
reg   [0:0] icmp_ln99_1_reg_2455;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state20_pp2_stage4_iter0;
wire    ap_block_state29_pp2_stage4_iter1;
wire    ap_block_pp2_stage4_11001;
reg   [0:0] icmp_ln99_3_reg_2509;
wire    ap_block_state22_pp2_stage6_iter0;
reg    ap_predicate_op547_write_state31;
reg    ap_block_state31_pp2_stage6_iter1;
reg    ap_block_state31_io;
reg    ap_block_pp2_stage6_11001;
reg   [0:0] icmp_ln99_5_reg_2602;
reg    ap_predicate_op477_read_state24;
reg    ap_block_state24_pp2_stage8_iter0;
reg    ap_block_pp2_stage8_11001;
reg   [0:0] icmp_ln99_7_reg_2687;
wire  signed [3:0] featureMap_V_q0;
reg  signed [3:0] reg_629;
wire  signed [3:0] featureMap_V_q1;
reg  signed [3:0] reg_634;
wire   [15:0] empty_fu_638_p1;
reg   [15:0] empty_reg_2177;
wire   [15:0] empty_16_fu_642_p1;
reg   [15:0] empty_16_reg_2182;
wire   [15:0] empty_17_fu_646_p1;
reg   [15:0] empty_17_reg_2188;
wire   [3:0] bias_V_fu_650_p1;
reg   [3:0] bias_V_reg_2193;
wire   [35:0] bound4_fu_670_p2;
reg   [35:0] bound4_reg_2198;
wire   [0:0] cmp22_not_mid113_fu_676_p2;
reg   [0:0] cmp22_not_mid113_reg_2203;
wire   [35:0] add_ln47_1_fu_682_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] rev107_fu_697_p2;
reg   [0:0] rev107_reg_2213;
wire   [0:0] icmp_ln47_fu_703_p2;
reg   [0:0] icmp_ln47_reg_2218;
wire   [0:0] icmp_ln49_fu_714_p2;
reg   [0:0] icmp_ln49_reg_2222;
wire   [31:0] select_ln47_1_fu_728_p3;
reg   [31:0] select_ln47_1_reg_2227;
wire   [0:0] and_ln47_fu_748_p2;
reg   [0:0] and_ln47_reg_2234;
wire   [1:0] add_ln49_fu_754_p2;
reg   [1:0] add_ln49_reg_2239;
wire   [1:0] select_ln49_fu_766_p3;
reg   [1:0] select_ln49_reg_2244;
reg   [1:0] select_ln49_reg_2244_pp0_iter1_reg;
wire   [1:0] select_ln49_1_fu_774_p3;
reg   [1:0] select_ln49_1_reg_2250;
wire   [1:0] add_ln50_fu_782_p2;
wire   [3:0] select_ln49_3_fu_794_p3;
wire   [13:0] trunc_ln54_fu_840_p1;
reg   [13:0] trunc_ln54_reg_2266;
wire   [11:0] trunc_ln54_1_fu_844_p1;
reg   [11:0] trunc_ln54_1_reg_2271;
wire   [0:0] or_ln52_fu_883_p2;
wire   [31:0] sub_fu_920_p2;
reg   [31:0] sub_reg_2280;
wire    ap_CS_fsm_state5;
wire   [17:0] trunc_ln70_fu_925_p1;
reg   [17:0] trunc_ln70_reg_2285;
wire  signed [17:0] empty_20_fu_928_p1;
reg  signed [17:0] empty_20_reg_2290;
wire   [1:0] y_3_fu_931_p2;
reg   [1:0] y_3_reg_2299;
wire    ap_CS_fsm_state6;
wire   [17:0] zext_ln61_fu_943_p1;
reg   [17:0] zext_ln61_reg_2307;
wire   [0:0] icmp_ln61_fu_937_p2;
wire  signed [15:0] outMapYSize_fu_951_p2;
reg  signed [15:0] outMapYSize_reg_2320;
wire   [15:0] outMapXSize_fu_961_p2;
reg   [15:0] outMapXSize_reg_2326;
wire   [0:0] icmp_ln62_fu_971_p2;
wire    ap_CS_fsm_state7;
wire   [30:0] n_2_fu_977_p2;
reg    ap_predicate_op169_read_state8;
reg    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln64_reg_2340;
reg   [0:0] icmp_ln64_reg_2340_pp1_iter1_reg;
reg   [0:0] icmp_ln64_reg_2340_pp1_iter2_reg;
reg   [0:0] icmp_ln67_reg_2344;
reg   [0:0] icmp_ln67_reg_2344_pp1_iter1_reg;
reg   [0:0] icmp_ln67_reg_2344_pp1_iter2_reg;
wire   [17:0] add_ln67_fu_997_p2;
wire   [3:0] trunc_ln69_1_fu_1002_p1;
reg   [3:0] trunc_ln69_1_reg_2353;
reg   [3:0] trunc_ln69_1_reg_2353_pp1_iter1_reg;
reg   [3:0] trunc_ln69_1_reg_2353_pp1_iter2_reg;
wire   [17:0] trunc_ln64_fu_1006_p1;
reg   [17:0] trunc_ln64_reg_2358;
wire   [31:0] x_4_fu_1014_p2;
wire    ap_CS_fsm_state12;
wire  signed [31:0] conv69_fu_1023_p1;
reg  signed [31:0] conv69_reg_2368;
wire    ap_CS_fsm_state13;
wire  signed [7:0] conv_i38_fu_1026_p1;
reg  signed [7:0] conv_i38_reg_2373;
wire   [16:0] sub91_fu_1029_p2;
reg   [16:0] sub91_reg_2378;
wire  signed [31:0] grp_fu_967_p2;
reg  signed [31:0] mul_ln102_reg_2383;
wire   [14:0] y_4_fu_1035_p2;
reg   [14:0] y_4_reg_2396;
wire    ap_CS_fsm_state14;
wire    regslice_both_strm_out_V_data_V_U_apdone_blk;
wire   [0:0] cmp92_fu_1058_p2;
wire   [0:0] icmp_ln80_fu_1045_p2;
wire   [17:0] and99_cast_fu_1069_p1;
reg   [17:0] and99_cast_reg_2408;
wire   [17:0] mul75_cast_fu_1077_p2;
reg   [17:0] mul75_cast_reg_2413;
wire   [17:0] mul75_1_cast_fu_1092_p2;
reg   [17:0] mul75_1_cast_reg_2419;
wire   [17:0] mul_ln83_fu_1107_p2;
reg   [17:0] mul_ln83_reg_2425;
wire   [0:0] icmp_ln83_fu_1122_p2;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln86_fu_1128_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state16_pp2_stage0_iter0;
wire    ap_block_state25_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln86_reg_2435_pp2_iter1_reg;
wire   [0:0] icmp_ln99_fu_1134_p2;
reg   [0:0] icmp_ln99_reg_2439;
wire  signed [31:0] kn_1_fu_1171_p3;
reg  signed [31:0] kn_1_reg_2450;
wire   [0:0] icmp_ln99_1_fu_1179_p2;
wire   [13:0] add_ln215_2_fu_1206_p2;
reg   [13:0] add_ln215_2_reg_2461;
wire  signed [31:0] kn_2_fu_1212_p3;
reg  signed [31:0] kn_2_reg_2466;
wire   [13:0] trunc_ln215_4_fu_1220_p1;
reg   [13:0] trunc_ln215_4_reg_2473;
wire   [10:0] trunc_ln215_5_fu_1224_p1;
reg   [10:0] trunc_ln215_5_reg_2478;
wire   [17:0] trunc_ln102_fu_1228_p1;
reg   [17:0] trunc_ln102_reg_2483;
wire   [0:0] icmp_ln99_2_fu_1240_p2;
wire   [13:0] add_ln215_4_fu_1260_p2;
reg   [13:0] add_ln215_4_reg_2499;
wire  signed [31:0] kn_3_fu_1266_p3;
reg  signed [31:0] kn_3_reg_2504;
wire   [0:0] icmp_ln99_3_fu_1273_p2;
wire   [13:0] add_ln215_6_fu_1300_p2;
reg   [13:0] add_ln215_6_reg_2515;
wire  signed [31:0] kn_4_fu_1306_p3;
reg  signed [31:0] kn_4_reg_2520;
wire   [13:0] trunc_ln215_8_fu_1314_p1;
reg   [13:0] trunc_ln215_8_reg_2527;
wire   [10:0] trunc_ln215_9_fu_1318_p1;
reg   [10:0] trunc_ln215_9_reg_2532;
wire   [17:0] trunc_ln36_fu_1322_p1;
reg   [17:0] trunc_ln36_reg_2537;
wire   [0:0] icmp_ln100_fu_1326_p2;
wire   [17:0] trunc_ln102_1_fu_1346_p1;
reg   [17:0] trunc_ln102_1_reg_2565;
wire   [17:0] add_ln102_2_fu_1350_p2;
reg   [17:0] add_ln102_2_reg_2570;
wire   [17:0] trunc_ln102_2_fu_1355_p1;
reg   [17:0] trunc_ln102_2_reg_2576;
wire   [0:0] icmp_ln99_4_fu_1367_p2;
wire   [13:0] add_ln215_8_fu_1387_p2;
reg   [13:0] add_ln215_8_reg_2592;
wire  signed [31:0] kn_5_fu_1393_p3;
reg  signed [31:0] kn_5_reg_2597;
wire   [0:0] icmp_ln99_5_fu_1400_p2;
wire   [13:0] add_ln215_10_fu_1427_p2;
reg   [13:0] add_ln215_10_reg_2608;
wire  signed [31:0] kn_6_fu_1433_p3;
reg  signed [31:0] kn_6_reg_2613;
wire   [13:0] trunc_ln215_12_fu_1441_p1;
reg   [13:0] trunc_ln215_12_reg_2620;
wire   [10:0] trunc_ln215_13_fu_1445_p1;
reg   [10:0] trunc_ln215_13_reg_2625;
wire   [17:0] trunc_ln102_3_fu_1487_p1;
reg   [17:0] trunc_ln102_3_reg_2650;
wire   [17:0] trunc_ln102_4_fu_1495_p1;
reg   [17:0] trunc_ln102_4_reg_2660;
wire   [17:0] add_ln102_9_fu_1499_p2;
reg   [17:0] add_ln102_9_reg_2665;
wire   [0:0] icmp_ln99_6_fu_1507_p2;
wire   [13:0] add_ln215_12_fu_1527_p2;
reg   [13:0] add_ln215_12_reg_2677;
wire  signed [31:0] kn_7_fu_1533_p3;
reg  signed [31:0] kn_7_reg_2682;
wire   [0:0] icmp_ln99_7_fu_1540_p2;
reg   [0:0] icmp_ln99_7_reg_2687_pp2_iter1_reg;
wire   [13:0] add_ln215_14_fu_1567_p2;
reg   [13:0] add_ln215_14_reg_2693;
wire  signed [31:0] kn_8_fu_1573_p3;
reg  signed [31:0] kn_8_reg_2698;
wire   [17:0] trunc_ln102_5_fu_1622_p1;
reg   [17:0] trunc_ln102_5_reg_2733;
wire   [17:0] trunc_ln102_6_fu_1626_p1;
reg   [17:0] trunc_ln102_6_reg_2738;
wire   [0:0] icmp_ln99_8_fu_1634_p2;
wire   [0:0] icmp_ln105_fu_1638_p2;
wire   [31:0] x_8_fu_1658_p3;
wire   [31:0] add_ln126_fu_1666_p2;
reg   [7:0] accum_V_load_reg_2761;
wire   [17:0] trunc_ln102_7_fu_1721_p1;
reg   [17:0] trunc_ln102_7_reg_2797;
wire   [17:0] add_ln102_16_fu_1725_p2;
reg   [17:0] add_ln102_16_reg_2802;
wire   [13:0] add_ln215_16_fu_1753_p2;
reg   [13:0] add_ln215_16_reg_2808;
wire   [17:0] empty_23_fu_1759_p1;
reg   [17:0] empty_23_reg_2813;
wire   [7:0] accum_V_4_fu_1773_p3;
reg   [7:0] accum_V_4_reg_2818;
reg  signed [3:0] lhs_6_reg_2840;
wire   [17:0] trunc_ln102_8_fu_1806_p1;
reg   [17:0] trunc_ln102_8_reg_2850;
wire   [7:0] accum_V_7_fu_1820_p3;
reg   [7:0] accum_V_7_reg_2855;
wire   [7:0] accum_V_10_fu_1863_p3;
reg   [7:0] accum_V_10_reg_2882;
wire   [3:0] trunc_ln69_2_fu_1881_p1;
reg   [3:0] trunc_ln69_2_reg_2904;
wire   [7:0] accum_V_13_fu_1895_p3;
reg   [7:0] accum_V_13_reg_2909;
reg  signed [3:0] rhs_8_reg_2926;
wire   [7:0] accum_V_16_fu_1922_p3;
reg   [7:0] accum_V_16_reg_2931;
wire   [7:0] accum_V_19_fu_1946_p3;
reg   [7:0] accum_V_19_reg_2948;
wire   [7:0] accum_V_22_fu_1969_p3;
reg   [7:0] accum_V_22_reg_2965;
wire   [7:0] accum_V_25_fu_1985_p3;
reg   [7:0] accum_V_25_reg_2972;
wire   [31:0] x_6_fu_2033_p2;
wire    ap_CS_fsm_state32;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp2_stage2_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
reg    ap_block_pp2_stage8_subdone;
reg    ap_block_pp2_stage6_subdone;
reg   [13:0] filter_V_address0;
reg    filter_V_ce0;
reg    filter_V_we0;
wire   [3:0] filter_V_d0;
reg   [17:0] featureMap_V_address0;
reg    featureMap_V_ce0;
reg    featureMap_V_we0;
reg   [3:0] featureMap_V_d0;
reg   [17:0] featureMap_V_address1;
reg    featureMap_V_ce1;
reg   [31:0] ap_phi_mux_n_phi_fu_433_p4;
reg   [1:0] ap_phi_mux_y_1_phi_fu_455_p4;
reg   [1:0] y_reg_473;
reg   [31:0] x_reg_484;
reg   [31:0] ap_phi_mux_x_3_phi_fu_510_p4;
wire   [31:0] ap_phi_reg_pp1_iter0_x_7_reg_529;
reg   [14:0] y_2_reg_542;
reg   [31:0] x_2_reg_553;
reg  signed [31:0] ap_phi_mux_kn_phi_fu_569_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_x_5_phi_fu_580_p4;
wire    ap_block_pp2_stage2;
reg   [31:0] ap_phi_reg_pp2_iter0_x_9_reg_588;
reg   [31:0] ap_phi_reg_pp2_iter0_kn_9_reg_600;
wire   [63:0] zext_ln54_4_fu_910_p1;
wire   [63:0] zext_ln70_fu_1010_p1;
wire   [63:0] zext_ln215_fu_1166_p1;
wire   [63:0] zext_ln215_1_fu_1236_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln102_fu_1341_p1;
wire   [63:0] zext_ln215_2_fu_1359_p1;
wire   [63:0] zext_ln102_1_fu_1467_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln102_2_fu_1482_p1;
wire   [63:0] zext_ln215_3_fu_1491_p1;
wire   [63:0] zext_ln102_3_fu_1598_p1;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln215_4_fu_1618_p1;
wire   [63:0] zext_ln102_4_fu_1613_p1;
wire   [63:0] zext_ln215_5_fu_1703_p1;
wire   [63:0] zext_ln102_5_fu_1698_p1;
wire   [63:0] zext_ln102_6_fu_1716_p1;
wire   [63:0] zext_ln215_6_fu_1787_p1;
wire   [63:0] zext_ln102_7_fu_1801_p1;
wire   [63:0] zext_ln215_7_fu_1834_p1;
wire    ap_block_pp2_stage7;
wire   [63:0] zext_ln102_8_fu_1848_p1;
wire   [63:0] zext_ln215_8_fu_1877_p1;
wire   [63:0] zext_ln109_fu_1908_p1;
reg   [7:0] accum_V_fu_192;
wire   [7:0] accum_V_27_fu_1996_p3;
reg   [7:0] ap_sig_allocacmp_accum_V_load;
wire  signed [7:0] accum_V_29_fu_2015_p3;
reg    ap_block_pp2_stage5_01001;
wire  signed [31:0] empty_fu_638_p0;
wire  signed [31:0] empty_17_fu_646_p0;
wire   [34:0] tmp_1_fu_658_p3;
wire   [35:0] p_shl_fu_666_p1;
wire   [35:0] cast2_fu_654_p1;
wire   [31:0] zext_ln49_fu_688_p1;
wire   [0:0] slt_fu_692_p2;
wire   [31:0] add_ln47_fu_708_p2;
wire   [0:0] icmp_ln50_fu_742_p2;
wire   [0:0] xor_ln47_fu_736_p2;
wire   [1:0] select_ln47_fu_720_p3;
wire   [0:0] or_ln49_fu_760_p2;
wire   [3:0] add_ln49_1_fu_788_p2;
wire   [33:0] tmp_3_fu_805_p3;
wire   [34:0] zext_ln54_1_fu_812_p1;
wire   [34:0] zext_ln54_fu_802_p1;
wire   [34:0] sub_ln54_fu_816_p2;
wire  signed [35:0] sext_ln47_fu_822_p1;
wire   [35:0] zext_ln54_2_fu_831_p1;
wire   [35:0] add_ln54_fu_834_p2;
wire   [31:0] zext_ln49_1_fu_848_p1;
wire   [0:0] slt108_fu_851_p2;
wire   [0:0] rev109_fu_856_p2;
wire   [0:0] select_ln47_2_fu_826_p3;
wire   [31:0] zext_ln50_fu_869_p1;
wire   [0:0] icmp_ln52_fu_872_p2;
wire   [0:0] xor_ln52_fu_877_p2;
wire   [0:0] select_ln49_2_fu_862_p3;
wire   [13:0] p_shl1_cast_fu_889_p3;
wire   [13:0] sub_ln54_1_fu_896_p2;
wire   [13:0] zext_ln54_3_fu_901_p1;
wire   [13:0] add_ln54_1_fu_904_p2;
wire  signed [31:0] sub_fu_920_p0;
wire  signed [31:0] trunc_ln70_fu_925_p0;
wire  signed [31:0] empty_20_fu_928_p0;
wire   [15:0] sub_ln77_fu_947_p2;
wire   [15:0] sub_ln78_fu_957_p2;
wire   [31:0] zext_ln64_fu_983_p1;
wire  signed [17:0] grp_fu_2039_p4;
wire  signed [16:0] outMapYSize_cast_fu_1020_p1;
wire   [15:0] zext_ln80_1_fu_1041_p1;
wire   [16:0] zext_ln80_fu_1054_p1;
wire   [1:0] trunc_ln80_fu_1050_p1;
wire   [1:0] add98_fu_1063_p2;
wire   [1:0] mul75_cast_fu_1077_p0;
wire   [1:0] y_4_cast_fu_1082_p2;
wire   [1:0] mul75_1_cast_fu_1092_p0;
wire   [1:0] add74_2_fu_1097_p2;
wire   [1:0] mul_ln83_fu_1107_p0;
wire   [21:0] tmp_2_fu_1112_p4;
wire   [10:0] trunc_ln215_1_fu_1148_p1;
wire   [13:0] tmp_5_cast_fu_1152_p3;
wire   [13:0] trunc_ln215_fu_1144_p1;
wire   [13:0] add_ln215_fu_1160_p2;
wire   [10:0] trunc_ln215_3_fu_1188_p1;
wire   [13:0] tmp_6_cast_fu_1192_p3;
wire   [13:0] trunc_ln215_2_fu_1184_p1;
wire   [13:0] add_ln215_1_fu_1200_p2;
wire   [31:0] grp_fu_1139_p2;
wire   [13:0] tmp_7_cast_fu_1248_p3;
wire   [13:0] add_ln215_3_fu_1255_p2;
wire   [10:0] trunc_ln215_7_fu_1282_p1;
wire   [13:0] tmp_8_cast_fu_1286_p3;
wire   [13:0] trunc_ln215_6_fu_1278_p1;
wire   [13:0] add_ln215_5_fu_1294_p2;
wire   [17:0] add_ln102_fu_1331_p2;
wire   [17:0] add_ln102_1_fu_1335_p2;
wire   [31:0] grp_fu_1232_p2;
wire   [31:0] grp_fu_1244_p2;
wire   [13:0] tmp_9_cast_fu_1375_p3;
wire   [13:0] add_ln215_7_fu_1382_p2;
wire   [10:0] trunc_ln215_11_fu_1409_p1;
wire   [13:0] tmp_10_cast_fu_1413_p3;
wire   [13:0] trunc_ln215_10_fu_1405_p1;
wire   [13:0] add_ln215_9_fu_1421_p2;
wire   [17:0] add_ln102_3_fu_1457_p2;
wire   [17:0] add_ln102_4_fu_1462_p2;
wire   [17:0] add_ln102_5_fu_1472_p2;
wire   [17:0] add_ln102_6_fu_1477_p2;
wire   [31:0] grp_fu_1363_p2;
wire   [31:0] grp_fu_1371_p2;
wire   [13:0] tmp_11_cast_fu_1515_p3;
wire   [13:0] add_ln215_11_fu_1522_p2;
wire   [10:0] trunc_ln215_15_fu_1549_p1;
wire   [13:0] tmp_12_cast_fu_1553_p3;
wire   [13:0] trunc_ln215_14_fu_1545_p1;
wire   [13:0] add_ln215_13_fu_1561_p2;
wire   [17:0] add_ln102_7_fu_1589_p2;
wire   [17:0] add_ln102_8_fu_1593_p2;
wire   [17:0] add_ln102_10_fu_1603_p2;
wire   [17:0] add_ln102_11_fu_1608_p2;
wire   [31:0] grp_fu_1503_p2;
wire   [31:0] grp_fu_1511_p2;
wire  signed [31:0] icmp_ln105_fu_1638_p1;
wire  signed [31:0] icmp_ln122_fu_1647_p1;
wire   [0:0] icmp_ln122_fu_1647_p2;
wire   [0:0] xor_ln122_fu_1652_p2;
wire   [17:0] add_ln102_12_fu_1688_p2;
wire   [17:0] add_ln102_13_fu_1693_p2;
wire   [17:0] add_ln102_14_fu_1707_p2;
wire   [17:0] add_ln102_15_fu_1711_p2;
wire   [31:0] grp_fu_1630_p2;
wire   [10:0] trunc_ln215_17_fu_1736_p1;
wire   [13:0] tmp_13_cast_fu_1739_p3;
wire   [13:0] trunc_ln215_16_fu_1733_p1;
wire   [13:0] add_ln215_15_fu_1747_p2;
wire   [31:0] grp_fu_1643_p2;
wire   [0:0] and_ln100_fu_1763_p2;
wire  signed [7:0] grp_fu_2047_p3;
wire   [7:0] accum_V_3_fu_1767_p3;
wire   [17:0] add_ln102_17_fu_1791_p2;
wire   [17:0] add_ln102_18_fu_1796_p2;
wire   [31:0] grp_fu_1729_p2;
wire   [0:0] and_ln101_fu_1810_p2;
wire  signed [7:0] grp_fu_2056_p3;
wire   [7:0] accum_V_6_fu_1814_p3;
wire   [17:0] add_ln102_19_fu_1838_p2;
wire   [17:0] add_ln102_20_fu_1843_p2;
wire   [0:0] and_ln101_1_fu_1853_p2;
wire  signed [7:0] grp_fu_2065_p3;
wire   [7:0] accum_V_9_fu_1857_p3;
wire   [0:0] and_ln101_2_fu_1885_p2;
wire  signed [7:0] grp_fu_2074_p3;
wire   [7:0] accum_V_12_fu_1889_p3;
wire  signed [17:0] grp_fu_2083_p4;
wire   [0:0] and_ln101_3_fu_1912_p2;
wire  signed [7:0] grp_fu_2090_p3;
wire   [7:0] accum_V_15_fu_1916_p3;
wire   [0:0] and_ln101_4_fu_1936_p2;
wire  signed [7:0] grp_fu_2099_p3;
wire   [7:0] accum_V_18_fu_1940_p3;
wire   [0:0] and_ln101_5_fu_1959_p2;
wire  signed [7:0] grp_fu_2108_p3;
wire   [7:0] accum_V_21_fu_1963_p3;
wire   [0:0] and_ln101_6_fu_1975_p2;
wire  signed [7:0] grp_fu_2117_p3;
wire   [7:0] accum_V_24_fu_1979_p3;
wire  signed [7:0] grp_fu_2126_p3;
wire   [0:0] tmp_4_fu_2002_p3;
wire   [0:0] and_ln113_fu_2010_p1;
wire   [0:0] and_ln113_fu_2010_p2;
wire   [1:0] grp_fu_2039_p1;
wire   [7:0] grp_fu_2047_p2;
wire   [7:0] grp_fu_2056_p2;
wire   [7:0] grp_fu_2065_p2;
wire   [7:0] grp_fu_2074_p2;
wire   [1:0] grp_fu_2083_p1;
wire   [7:0] grp_fu_2090_p2;
wire   [7:0] grp_fu_2099_p2;
wire   [7:0] grp_fu_2108_p2;
wire   [7:0] grp_fu_2117_p2;
wire   [7:0] grp_fu_2126_p2;
reg    grp_fu_1139_ce;
reg    grp_fu_1232_ce;
reg    grp_fu_1244_ce;
reg    grp_fu_1363_ce;
reg    grp_fu_1371_ce;
reg    grp_fu_1503_ce;
reg    grp_fu_1511_ce;
reg    grp_fu_1630_ce;
reg    grp_fu_1643_ce;
reg    grp_fu_1729_ce;
reg    grp_fu_2039_ce;
reg    grp_fu_2047_ce;
reg    grp_fu_2056_ce;
reg    grp_fu_2065_ce;
reg    grp_fu_2074_ce;
reg    grp_fu_2083_ce;
reg    grp_fu_2090_ce;
reg    grp_fu_2099_ce;
reg    grp_fu_2108_ce;
reg    grp_fu_2117_ce;
reg    grp_fu_2126_ce;
reg   [19:0] ap_NS_fsm;
wire    ap_block_pp2_stage0_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
reg    ap_block_pp2_stage5_subdone;
wire    ap_block_pp2_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    regslice_both_strm_in_V_data_V_U_apdone_blk;
wire   [31:0] strm_in_TDATA_int_regslice;
wire    strm_in_TVALID_int_regslice;
reg    strm_in_TREADY_int_regslice;
wire    regslice_both_strm_in_V_data_V_U_ack_in;
wire    regslice_both_strm_in_V_keep_V_U_apdone_blk;
wire   [3:0] strm_in_TKEEP_int_regslice;
wire    regslice_both_strm_in_V_keep_V_U_vld_out;
wire    regslice_both_strm_in_V_keep_V_U_ack_in;
wire    regslice_both_strm_in_V_strb_V_U_apdone_blk;
wire   [3:0] strm_in_TSTRB_int_regslice;
wire    regslice_both_strm_in_V_strb_V_U_vld_out;
wire    regslice_both_strm_in_V_strb_V_U_ack_in;
wire    regslice_both_strm_in_V_last_V_U_apdone_blk;
wire   [0:0] strm_in_TLAST_int_regslice;
wire    regslice_both_strm_in_V_last_V_U_vld_out;
wire    regslice_both_strm_in_V_last_V_U_ack_in;
wire   [31:0] strm_out_TDATA_int_regslice;
reg    strm_out_TVALID_int_regslice;
wire    strm_out_TREADY_int_regslice;
wire    regslice_both_strm_out_V_data_V_U_vld_out;
wire    regslice_both_strm_out_V_keep_V_U_apdone_blk;
wire    regslice_both_strm_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_strm_out_V_keep_V_U_vld_out;
wire    regslice_both_strm_out_V_strb_V_U_apdone_blk;
wire    regslice_both_strm_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_strm_out_V_strb_V_U_vld_out;
wire    regslice_both_strm_out_V_last_V_U_apdone_blk;
wire    regslice_both_strm_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_strm_out_V_last_V_U_vld_out;
wire   [17:0] mul75_1_cast_fu_1092_p00;
wire   [17:0] mul75_cast_fu_1077_p00;
wire   [17:0] mul_ln83_fu_1107_p00;
reg    ap_condition_2060;
reg    ap_condition_454;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

depthwise_filter_V #(
    .DataWidth( 4 ),
    .AddressRange( 13824 ),
    .AddressWidth( 14 ))
filter_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(filter_V_address0),
    .ce0(filter_V_ce0),
    .we0(filter_V_we0),
    .d0(filter_V_d0),
    .q0(filter_V_q0)
);

depthwise_featureMap_V #(
    .DataWidth( 4 ),
    .AddressRange( 258048 ),
    .AddressWidth( 18 ))
featureMap_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(featureMap_V_address0),
    .ce0(featureMap_V_ce0),
    .we0(featureMap_V_we0),
    .d0(featureMap_V_d0),
    .q0(featureMap_V_q0),
    .address1(featureMap_V_address1),
    .ce1(featureMap_V_ce1),
    .q1(featureMap_V_q1)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mapSizeY),
    .din1(mapSizeX),
    .ce(1'b1),
    .dout(grp_fu_967_p2)
);

depthwise_mul_2ns_18s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mul_2ns_18s_18_1_1_U2(
    .din0(mul75_cast_fu_1077_p0),
    .din1(empty_20_reg_2290),
    .dout(mul75_cast_fu_1077_p2)
);

depthwise_mul_2ns_18s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mul_2ns_18s_18_1_1_U3(
    .din0(mul75_1_cast_fu_1092_p0),
    .din1(empty_20_reg_2290),
    .dout(mul75_1_cast_fu_1092_p2)
);

depthwise_mul_2ns_18s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mul_2ns_18s_18_1_1_U4(
    .din0(mul_ln83_fu_1107_p0),
    .din1(empty_20_reg_2290),
    .dout(mul_ln83_fu_1107_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_phi_mux_kn_phi_fu_569_p4),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1139_ce),
    .dout(grp_fu_1139_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_1_reg_2450),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1232_ce),
    .dout(grp_fu_1232_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_2_reg_2466),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1244_ce),
    .dout(grp_fu_1244_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_3_reg_2504),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1363_ce),
    .dout(grp_fu_1363_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_4_reg_2520),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1371_ce),
    .dout(grp_fu_1371_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_5_reg_2597),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1503_ce),
    .dout(grp_fu_1503_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_6_reg_2613),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1511_ce),
    .dout(grp_fu_1511_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_7_reg_2682),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1630_ce),
    .dout(grp_fu_1630_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_8_reg_2698),
    .din1(mapSizeY),
    .ce(grp_fu_1643_ce),
    .dout(grp_fu_1643_p2)
);

depthwise_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(kn_8_reg_2698),
    .din1(mul_ln102_reg_2383),
    .ce(grp_fu_1729_ce),
    .dout(grp_fu_1729_p2)
);

depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
ama_addmuladd_18ns_2ns_18s_18ns_18_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(phi_mul_reg_518),
    .din1(grp_fu_2039_p1),
    .din2(empty_20_reg_2290),
    .din3(trunc_ln64_reg_2358),
    .ce(grp_fu_2039_ce),
    .dout(grp_fu_2039_p4)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_621),
    .din1(featureMap_V_q0),
    .din2(grp_fu_2047_p2),
    .ce(grp_fu_2047_ce),
    .dout(grp_fu_2047_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_625),
    .din1(featureMap_V_q1),
    .din2(grp_fu_2056_p2),
    .ce(grp_fu_2056_ce),
    .dout(grp_fu_2056_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_621),
    .din1(reg_629),
    .din2(grp_fu_2065_p2),
    .ce(grp_fu_2065_ce),
    .dout(grp_fu_2065_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_625),
    .din1(reg_629),
    .din2(grp_fu_2074_p2),
    .ce(grp_fu_2074_ce),
    .dout(grp_fu_2074_p3)
);

depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
ama_addmuladd_18ns_2ns_18s_18ns_18_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(empty_23_reg_2813),
    .din1(grp_fu_2083_p1),
    .din2(empty_20_reg_2290),
    .din3(trunc_ln36_reg_2537),
    .ce(grp_fu_2083_ce),
    .dout(grp_fu_2083_p4)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_621),
    .din1(reg_634),
    .din2(grp_fu_2090_p2),
    .ce(grp_fu_2090_ce),
    .dout(grp_fu_2090_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_625),
    .din1(reg_629),
    .din2(grp_fu_2099_p2),
    .ce(grp_fu_2099_ce),
    .dout(grp_fu_2099_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_621),
    .din1(lhs_6_reg_2840),
    .din2(grp_fu_2108_p2),
    .ce(grp_fu_2108_ce),
    .dout(grp_fu_2108_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_625),
    .din1(reg_634),
    .din2(grp_fu_2117_p2),
    .ce(grp_fu_2117_ce),
    .dout(grp_fu_2117_p3)
);

depthwise_mac_muladd_4s_4s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_4s_4s_8ns_8_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(rhs_8_reg_2926),
    .din1(reg_629),
    .din2(grp_fu_2126_p2),
    .ce(grp_fu_2126_ce),
    .dout(grp_fu_2126_p3)
);

depthwise_regslice_both #(
    .DataWidth( 32 ))
regslice_both_strm_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TDATA),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_data_V_U_ack_in),
    .data_out(strm_in_TDATA_int_regslice),
    .vld_out(strm_in_TVALID_int_regslice),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_data_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TKEEP),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_keep_V_U_ack_in),
    .data_out(strm_in_TKEEP_int_regslice),
    .vld_out(regslice_both_strm_in_V_keep_V_U_vld_out),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_keep_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TSTRB),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_strb_V_U_ack_in),
    .data_out(strm_in_TSTRB_int_regslice),
    .vld_out(regslice_both_strm_in_V_strb_V_U_vld_out),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_strb_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 1 ))
regslice_both_strm_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_in_TLAST),
    .vld_in(strm_in_TVALID),
    .ack_in(regslice_both_strm_in_V_last_V_U_ack_in),
    .data_out(strm_in_TLAST_int_regslice),
    .vld_out(regslice_both_strm_in_V_last_V_U_vld_out),
    .ack_out(strm_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_strm_in_V_last_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 32 ))
regslice_both_strm_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(strm_out_TDATA_int_regslice),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(strm_out_TREADY_int_regslice),
    .data_out(strm_out_TDATA),
    .vld_out(regslice_both_strm_out_V_data_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_data_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(regslice_both_strm_out_V_keep_V_U_ack_in_dummy),
    .data_out(strm_out_TKEEP),
    .vld_out(regslice_both_strm_out_V_keep_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_keep_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 4 ))
regslice_both_strm_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(regslice_both_strm_out_V_strb_V_U_ack_in_dummy),
    .data_out(strm_out_TSTRB),
    .vld_out(regslice_both_strm_out_V_strb_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_strb_V_U_apdone_blk)
);

depthwise_regslice_both #(
    .DataWidth( 1 ))
regslice_both_strm_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(strm_out_TVALID_int_regslice),
    .ack_in(regslice_both_strm_out_V_last_V_U_ack_in_dummy),
    .data_out(strm_out_TLAST),
    .vld_out(regslice_both_strm_out_V_last_V_U_vld_out),
    .ack_out(strm_out_TREADY),
    .apdone_blk(regslice_both_strm_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln62_fu_971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln62_fu_971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln83_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage8_subdone) & (1'b1 == ap_CS_fsm_pp2_stage8)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln83_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln99_8_reg_2743 == 1'd0))) begin
        accum_V_fu_192 <= accum_V_25_fu_1985_p3;
    end else if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2546_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        accum_V_fu_192 <= accum_V_29_fu_2015_p3;
    end else if ((((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2546_pp2_iter1_reg == 1'd0) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd0) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        accum_V_fu_192 <= accum_V_27_fu_1996_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2060)) begin
        if ((icmp_ln99_8_fu_1634_p2 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_kn_9_reg_600 <= 32'd1537;
        end else if ((icmp_ln99_8_fu_1634_p2 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_kn_9_reg_600 <= add_ln126_fu_1666_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2060)) begin
        if ((icmp_ln99_8_fu_1634_p2 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_x_9_reg_588 <= x_5_reg_577;
        end else if ((icmp_ln99_8_fu_1634_p2 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_x_9_reg_588 <= x_8_fu_1658_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_703_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten17_reg_418 <= add_ln47_1_fu_682_p2;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_418 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_703_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_440 <= select_ln49_3_fu_794_p3;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_440 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        kn_reg_565 <= kn_9_reg_600;
    end else if (((icmp_ln83_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        kn_reg_565 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_987_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        n_1_reg_496 <= n_2_fu_977_p2;
    end else if (((icmp_ln62_fu_971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        n_1_reg_496 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_reg_2218 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_reg_429 <= select_ln47_1_reg_2227;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_reg_429 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_987_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phi_mul_reg_518 <= add_ln67_fu_997_p2;
    end else if (((icmp_ln62_fu_971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_mul_reg_518 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln99_5_reg_2602 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_3_reg_2509 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2435 == 1'd1)))) begin
        reg_629 <= featureMap_V_q1;
    end else if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8) & (icmp_ln100_reg_2546 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_2_reg_2493 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1)))) begin
        reg_629 <= featureMap_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_703_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_1_reg_462 <= add_ln50_fu_782_p2;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        x_1_reg_462 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x_2_reg_553 <= x_6_fu_2033_p2;
    end else if (((icmp_ln80_fu_1045_p2 == 1'd1) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        x_2_reg_553 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln64_reg_2340 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        x_3_reg_507 <= x_7_reg_529;
    end else if (((icmp_ln62_fu_971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        x_3_reg_507 <= x_reg_484;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        x_5_reg_577 <= x_9_reg_588;
    end else if (((icmp_ln83_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        x_5_reg_577 <= x_2_reg_553;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_454)) begin
        if (((icmp_ln67_fu_992_p2 == 1'd1) & (icmp_ln64_fu_987_p2 == 1'd1))) begin
            x_7_reg_529 <= 32'd42;
        end else if (((icmp_ln67_fu_992_p2 == 1'd0) & (icmp_ln64_fu_987_p2 == 1'd1))) begin
            x_7_reg_529 <= ap_phi_mux_x_3_phi_fu_510_p4;
        end else if ((1'b1 == 1'b1)) begin
            x_7_reg_529 <= ap_phi_reg_pp1_iter0_x_7_reg_529;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_reg_484 <= x_4_fu_1014_p2;
    end else if (((icmp_ln61_fu_937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        x_reg_484 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_reg_2218 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_1_reg_451 <= select_ln49_1_reg_2250;
    end else if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_1_reg_451 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_1122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        y_2_reg_542 <= y_4_reg_2396;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_2_reg_542 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_971_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        y_reg_473 <= y_3_reg_2299;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_reg_473 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8) & (icmp_ln86_reg_2435 == 1'd1))) begin
        accum_V_10_reg_2882 <= accum_V_10_fu_1863_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln86_reg_2435 == 1'd1))) begin
        accum_V_13_reg_2909 <= accum_V_13_fu_1895_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        accum_V_16_reg_2931 <= accum_V_16_fu_1922_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        accum_V_19_reg_2948 <= accum_V_19_fu_1946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        accum_V_22_reg_2965 <= accum_V_22_fu_1969_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        accum_V_25_reg_2972 <= accum_V_25_fu_1985_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2435 == 1'd1))) begin
        accum_V_4_reg_2818 <= accum_V_4_fu_1773_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln86_reg_2435 == 1'd1))) begin
        accum_V_7_reg_2855 <= accum_V_7_fu_1820_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2435 == 1'd1))) begin
        accum_V_load_reg_2761 <= ap_sig_allocacmp_accum_V_load;
        add_ln102_16_reg_2802 <= add_ln102_16_fu_1725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2435 == 1'd1))) begin
        add_ln102_2_reg_2570 <= add_ln102_2_fu_1350_p2;
        add_ln215_10_reg_2608 <= add_ln215_10_fu_1427_p2;
        add_ln215_8_reg_2592 <= add_ln215_8_fu_1387_p2;
        icmp_ln100_reg_2546 <= icmp_ln100_fu_1326_p2;
        icmp_ln99_4_reg_2586 <= icmp_ln99_4_fu_1367_p2;
        icmp_ln99_5_reg_2602 <= icmp_ln99_5_fu_1400_p2;
        kn_5_reg_2597 <= kn_5_fu_1393_p3;
        kn_6_reg_2613 <= kn_6_fu_1433_p3;
        trunc_ln215_12_reg_2620 <= trunc_ln215_12_fu_1441_p1;
        trunc_ln215_13_reg_2625 <= trunc_ln215_13_fu_1445_p1;
        trunc_ln36_reg_2537 <= trunc_ln36_fu_1322_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2435 == 1'd1))) begin
        add_ln102_9_reg_2665 <= add_ln102_9_fu_1499_p2;
        add_ln215_12_reg_2677 <= add_ln215_12_fu_1527_p2;
        add_ln215_14_reg_2693 <= add_ln215_14_fu_1567_p2;
        icmp_ln99_6_reg_2671 <= icmp_ln99_6_fu_1507_p2;
        icmp_ln99_7_reg_2687 <= icmp_ln99_7_fu_1540_p2;
        kn_7_reg_2682 <= kn_7_fu_1533_p3;
        kn_8_reg_2698 <= kn_8_fu_1573_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2546 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        add_ln215_16_reg_2808 <= add_ln215_16_fu_1753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln86_fu_1128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln215_2_reg_2461 <= add_ln215_2_fu_1206_p2;
        icmp_ln99_1_reg_2455 <= icmp_ln99_1_fu_1179_p2;
        icmp_ln99_reg_2439 <= icmp_ln99_fu_1134_p2;
        kn_1_reg_2450 <= kn_1_fu_1171_p3;
        kn_2_reg_2466 <= kn_2_fu_1212_p3;
        trunc_ln215_4_reg_2473 <= trunc_ln215_4_fu_1220_p1;
        trunc_ln215_5_reg_2478 <= trunc_ln215_5_fu_1224_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        add_ln215_4_reg_2499 <= add_ln215_4_fu_1260_p2;
        add_ln215_6_reg_2515 <= add_ln215_6_fu_1300_p2;
        icmp_ln99_2_reg_2493 <= icmp_ln99_2_fu_1240_p2;
        icmp_ln99_3_reg_2509 <= icmp_ln99_3_fu_1273_p2;
        kn_3_reg_2504 <= kn_3_fu_1266_p3;
        kn_4_reg_2520 <= kn_4_fu_1306_p3;
        trunc_ln215_8_reg_2527 <= trunc_ln215_8_fu_1314_p1;
        trunc_ln215_9_reg_2532 <= trunc_ln215_9_fu_1318_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_reg_2239 <= add_ln49_fu_754_p2;
        and_ln47_reg_2234 <= and_ln47_fu_748_p2;
        icmp_ln49_reg_2222 <= icmp_ln49_fu_714_p2;
        select_ln49_reg_2244 <= select_ln49_fu_766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_1045_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        and99_cast_reg_2408[1 : 0] <= and99_cast_fu_1069_p1[1 : 0];
        cmp92_reg_2404 <= cmp92_fu_1058_p2;
        mul75_1_cast_reg_2419 <= mul75_1_cast_fu_1092_p2;
        mul75_cast_reg_2413 <= mul75_cast_fu_1077_p2;
        mul_ln83_reg_2425 <= mul_ln83_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bias_V_reg_2193 <= bias_V_fu_650_p1;
        bound4_reg_2198 <= bound4_fu_670_p2;
        cmp22_not_mid113_reg_2203 <= cmp22_not_mid113_fu_676_p2;
        empty_16_reg_2182 <= empty_16_fu_642_p1;
        empty_17_reg_2188 <= empty_17_fu_646_p1;
        empty_reg_2177 <= empty_fu_638_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv69_reg_2368 <= conv69_fu_1023_p1;
        conv_i38_reg_2373 <= conv_i38_fu_1026_p1;
        mul_ln102_reg_2383 <= grp_fu_967_p2;
        sub91_reg_2378 <= sub91_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_20_reg_2290 <= empty_20_fu_928_p1;
        sub_reg_2280 <= sub_fu_920_p2;
        trunc_ln70_reg_2285 <= trunc_ln70_fu_925_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5) & (cmp92_reg_2404 == 1'd1) & (icmp_ln105_reg_2747 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        empty_23_reg_2813 <= empty_23_fu_1759_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        icmp_ln100_reg_2546_pp2_iter1_reg <= icmp_ln100_reg_2546;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_8_fu_1634_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1))) begin
        icmp_ln105_reg_2747 <= icmp_ln105_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        icmp_ln105_reg_2747_pp2_iter1_reg <= icmp_ln105_reg_2747;
        icmp_ln99_8_reg_2743_pp2_iter1_reg <= icmp_ln99_8_reg_2743;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln47_reg_2218 <= icmp_ln47_fu_703_p2;
        rev107_reg_2213 <= rev107_fu_697_p2;
        select_ln49_reg_2244_pp0_iter1_reg <= select_ln49_reg_2244;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln64_reg_2340 <= icmp_ln64_fu_987_p2;
        icmp_ln64_reg_2340_pp1_iter1_reg <= icmp_ln64_reg_2340;
        icmp_ln67_reg_2344_pp1_iter1_reg <= icmp_ln67_reg_2344;
        trunc_ln69_1_reg_2353_pp1_iter1_reg <= trunc_ln69_1_reg_2353;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln64_reg_2340_pp1_iter2_reg <= icmp_ln64_reg_2340_pp1_iter1_reg;
        icmp_ln67_reg_2344_pp1_iter2_reg <= icmp_ln67_reg_2344_pp1_iter1_reg;
        trunc_ln69_1_reg_2353_pp1_iter2_reg <= trunc_ln69_1_reg_2353_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_987_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln67_reg_2344 <= icmp_ln67_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln86_reg_2435 <= icmp_ln86_fu_1128_p2;
        icmp_ln86_reg_2435_pp2_iter1_reg <= icmp_ln86_reg_2435;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        icmp_ln99_7_reg_2687_pp2_iter1_reg <= icmp_ln99_7_reg_2687;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1))) begin
        icmp_ln99_8_reg_2743 <= icmp_ln99_8_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        kn_9_reg_600 <= ap_phi_reg_pp2_iter0_kn_9_reg_600;
        x_9_reg_588 <= ap_phi_reg_pp2_iter0_x_9_reg_588;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln99_6_reg_2671 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2435 == 1'd1))) begin
        lhs_6_reg_2840 <= featureMap_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_reg_2218 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln52_reg_2276 <= or_ln52_fu_883_p2;
        trunc_ln54_1_reg_2271 <= trunc_ln54_1_fu_844_p1;
        trunc_ln54_reg_2266 <= trunc_ln54_fu_840_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        outMapXSize_reg_2326 <= outMapXSize_fu_961_p2;
        outMapYSize_reg_2320 <= outMapYSize_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (icmp_ln99_6_reg_2671 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_4_reg_2586 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln99_2_reg_2493 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln86_reg_2435 == 1'd1)))) begin
        reg_621 <= filter_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (icmp_ln99_7_reg_2687 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage8) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln99_5_reg_2602 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_3_reg_2509 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln99_1_reg_2455 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2435 == 1'd1)))) begin
        reg_625 <= filter_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (icmp_ln99_7_reg_2687 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln86_reg_2435 == 1'd1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_4_reg_2586 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2435 == 1'd1)))) begin
        reg_634 <= featureMap_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln100_reg_2546 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln99_8_reg_2743 == 1'd1))) begin
        rhs_8_reg_2926 <= filter_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_703_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln47_1_reg_2227 <= select_ln47_1_fu_728_p3;
        select_ln49_1_reg_2250 <= select_ln49_1_fu_774_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln99_1_reg_2455 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_1_reg_2565 <= trunc_ln102_1_fu_1346_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln99_2_reg_2493 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_2_reg_2576 <= trunc_ln102_2_fu_1355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln99_3_reg_2509 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_3_reg_2650 <= trunc_ln102_3_fu_1487_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln99_4_reg_2586 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_4_reg_2660 <= trunc_ln102_4_fu_1495_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_5_reg_2602 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_5_reg_2733 <= trunc_ln102_5_fu_1622_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln99_6_reg_2671 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_6_reg_2738 <= trunc_ln102_6_fu_1626_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln99_7_reg_2687 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_7_reg_2797 <= trunc_ln102_7_fu_1721_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln100_reg_2546 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_8_reg_2850 <= trunc_ln102_8_fu_1806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln99_reg_2439 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln102_reg_2483 <= trunc_ln102_fu_1228_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln64_reg_2340 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln64_reg_2358 <= trunc_ln64_fu_1006_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_992_p2 == 1'd0) & (icmp_ln64_fu_987_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln69_1_reg_2353 <= trunc_ln69_1_fu_1002_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8) & (cmp92_reg_2404 == 1'd1) & (icmp_ln105_reg_2747 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        trunc_ln69_2_reg_2904 <= trunc_ln69_2_fu_1881_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_3_reg_2299 <= y_3_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        y_4_reg_2396 <= y_4_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zext_ln61_reg_2307[1 : 0] <= zext_ln61_fu_943_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln47_fu_703_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln64_fu_987_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln86_reg_2435 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_fu_1045_p2 == 1'd0) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln86_reg_2435 == 1'd1))) begin
        ap_phi_mux_kn_phi_fu_569_p4 = kn_9_reg_600;
    end else begin
        ap_phi_mux_kn_phi_fu_569_p4 = kn_reg_565;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln47_reg_2218 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_n_phi_fu_433_p4 = select_ln47_1_reg_2227;
    end else begin
        ap_phi_mux_n_phi_fu_433_p4 = n_reg_429;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln64_reg_2340 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_x_3_phi_fu_510_p4 = x_7_reg_529;
    end else begin
        ap_phi_mux_x_3_phi_fu_510_p4 = x_3_reg_507;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (icmp_ln86_reg_2435_pp2_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_x_5_phi_fu_580_p4 = x_9_reg_588;
    end else begin
        ap_phi_mux_x_5_phi_fu_580_p4 = x_5_reg_577;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln47_reg_2218 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_y_1_phi_fu_455_p4 = select_ln49_1_reg_2250;
    end else begin
        ap_phi_mux_y_1_phi_fu_455_p4 = y_1_reg_451;
    end
end

always @ (*) begin
    if (((icmp_ln80_fu_1045_p2 == 1'd0) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2546_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_sig_allocacmp_accum_V_load = accum_V_29_fu_2015_p3;
    end else if ((((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2546_pp2_iter1_reg == 1'd0) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd0) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        ap_sig_allocacmp_accum_V_load = accum_V_27_fu_1996_p3;
    end else begin
        ap_sig_allocacmp_accum_V_load = accum_V_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        featureMap_V_address0 = zext_ln109_fu_1908_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
        featureMap_V_address0 = zext_ln102_8_fu_1848_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6))) begin
        featureMap_V_address0 = zext_ln102_7_fu_1801_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        featureMap_V_address0 = zext_ln102_6_fu_1716_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        featureMap_V_address0 = zext_ln102_4_fu_1613_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        featureMap_V_address0 = zext_ln102_2_fu_1482_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        featureMap_V_address0 = zext_ln102_fu_1341_p1;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        featureMap_V_address0 = zext_ln70_fu_1010_p1;
    end else begin
        featureMap_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
            featureMap_V_address1 = zext_ln102_5_fu_1698_p1;
        end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
            featureMap_V_address1 = zext_ln102_3_fu_1598_p1;
        end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            featureMap_V_address1 = zext_ln102_1_fu_1467_p1;
        end else begin
            featureMap_V_address1 = 'bx;
        end
    end else begin
        featureMap_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        featureMap_V_ce0 = 1'b1;
    end else begin
        featureMap_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        featureMap_V_ce1 = 1'b1;
    end else begin
        featureMap_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        featureMap_V_d0 = trunc_ln69_2_reg_2904;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        featureMap_V_d0 = trunc_ln69_1_reg_2353_pp1_iter2_reg;
    end else begin
        featureMap_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (cmp92_reg_2404 == 1'd1) & (icmp_ln105_reg_2747 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln67_reg_2344_pp1_iter2_reg == 1'd0) & (icmp_ln64_reg_2340_pp1_iter2_reg == 1'd1)))) begin
        featureMap_V_we0 = 1'b1;
    end else begin
        featureMap_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8) & (1'b1 == ap_CS_fsm_pp2_stage8))) begin
        filter_V_address0 = zext_ln215_8_fu_1877_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
        filter_V_address0 = zext_ln215_7_fu_1834_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6))) begin
        filter_V_address0 = zext_ln215_6_fu_1787_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        filter_V_address0 = zext_ln215_5_fu_1703_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        filter_V_address0 = zext_ln215_4_fu_1618_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        filter_V_address0 = zext_ln215_3_fu_1491_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        filter_V_address0 = zext_ln215_2_fu_1359_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        filter_V_address0 = zext_ln215_1_fu_1236_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        filter_V_address0 = zext_ln215_fu_1166_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filter_V_address0 = zext_ln54_4_fu_910_p1;
    end else begin
        filter_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        filter_V_ce0 = 1'b1;
    end else begin
        filter_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln52_reg_2276 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filter_V_we0 = 1'b1;
    end else begin
        filter_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1139_ce = 1'b1;
    end else begin
        grp_fu_1139_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1232_ce = 1'b1;
    end else begin
        grp_fu_1232_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1244_ce = 1'b1;
    end else begin
        grp_fu_1244_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1363_ce = 1'b1;
    end else begin
        grp_fu_1363_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1371_ce = 1'b1;
    end else begin
        grp_fu_1371_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1503_ce = 1'b1;
    end else begin
        grp_fu_1503_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_1511_ce = 1'b1;
    end else begin
        grp_fu_1511_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_1630_ce = 1'b1;
    end else begin
        grp_fu_1630_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_1643_ce = 1'b1;
    end else begin
        grp_fu_1643_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_1729_ce = 1'b1;
    end else begin
        grp_fu_1729_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2039_ce = 1'b1;
    end else begin
        grp_fu_2039_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_2047_ce = 1'b1;
    end else begin
        grp_fu_2047_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_2056_ce = 1'b1;
    end else begin
        grp_fu_2056_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
        grp_fu_2065_ce = 1'b1;
    end else begin
        grp_fu_2065_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)))) begin
        grp_fu_2074_ce = 1'b1;
    end else begin
        grp_fu_2074_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)))) begin
        grp_fu_2083_ce = 1'b1;
    end else begin
        grp_fu_2083_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2090_ce = 1'b1;
    end else begin
        grp_fu_2090_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage8_11001) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2099_ce = 1'b1;
    end else begin
        grp_fu_2099_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2108_ce = 1'b1;
    end else begin
        grp_fu_2108_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_2117_ce = 1'b1;
    end else begin
        grp_fu_2117_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage5_11001) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_fu_2126_ce = 1'b1;
    end else begin
        grp_fu_2126_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln67_fu_992_p2 == 1'd0) & (icmp_ln64_fu_987_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((or_ln52_reg_2276 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8) & (1'b1 == ap_CS_fsm_pp2_stage8) & (cmp92_reg_2404 == 1'd1) & (icmp_ln105_reg_2747 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1)))) begin
        strm_in_TDATA_blk_n = strm_in_TVALID_int_regslice;
    end else begin
        strm_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op169_read_state8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((or_ln52_reg_2276 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | (~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage8_11001) & (ap_predicate_op477_read_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage8)))) begin
        strm_in_TREADY_int_regslice = 1'b1;
    end else begin
        strm_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln100_reg_2546_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln100_reg_2546_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        strm_out_TDATA_blk_n = strm_out_TREADY_int_regslice;
    end else begin
        strm_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage5_11001) & (ap_predicate_op545_write_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        strm_out_TVALID_int_regslice = 1'b1;
    end else begin
        strm_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln47_fu_703_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln47_fu_703_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln61_fu_937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln62_fu_971_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln64_fu_987_p2 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln64_fu_987_p2 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln80_fu_1045_p2 == 1'd0) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln80_fu_1045_p2 == 1'd1) & (regslice_both_strm_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln83_fu_1122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln86_reg_2435 == 1'd0)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln86_reg_2435 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((1'b0 == ap_block_pp2_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter1 == 1'b1)) & (1'b0 == ap_block_pp2_stage6_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((1'b0 == ap_block_pp2_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_pp2_stage8 : begin
            if ((1'b0 == ap_block_pp2_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accum_V_10_fu_1863_p3 = ((icmp_ln99_2_reg_2493[0:0] == 1'b1) ? accum_V_9_fu_1857_p3 : accum_V_7_reg_2855);

assign accum_V_12_fu_1889_p3 = ((and_ln101_2_fu_1885_p2[0:0] == 1'b1) ? grp_fu_2074_p3 : accum_V_10_reg_2882);

assign accum_V_13_fu_1895_p3 = ((icmp_ln99_3_reg_2509[0:0] == 1'b1) ? accum_V_12_fu_1889_p3 : accum_V_10_reg_2882);

assign accum_V_15_fu_1916_p3 = ((and_ln101_3_fu_1912_p2[0:0] == 1'b1) ? grp_fu_2090_p3 : accum_V_13_reg_2909);

assign accum_V_16_fu_1922_p3 = ((icmp_ln99_4_reg_2586[0:0] == 1'b1) ? accum_V_15_fu_1916_p3 : accum_V_13_reg_2909);

assign accum_V_18_fu_1940_p3 = ((and_ln101_4_fu_1936_p2[0:0] == 1'b1) ? grp_fu_2099_p3 : accum_V_16_reg_2931);

assign accum_V_19_fu_1946_p3 = ((icmp_ln99_5_reg_2602[0:0] == 1'b1) ? accum_V_18_fu_1940_p3 : accum_V_16_reg_2931);

assign accum_V_21_fu_1963_p3 = ((and_ln101_5_fu_1959_p2[0:0] == 1'b1) ? grp_fu_2108_p3 : accum_V_19_reg_2948);

assign accum_V_22_fu_1969_p3 = ((icmp_ln99_6_reg_2671[0:0] == 1'b1) ? accum_V_21_fu_1963_p3 : accum_V_19_reg_2948);

assign accum_V_24_fu_1979_p3 = ((and_ln101_6_fu_1975_p2[0:0] == 1'b1) ? grp_fu_2117_p3 : accum_V_22_reg_2965);

assign accum_V_25_fu_1985_p3 = ((icmp_ln99_7_reg_2687_pp2_iter1_reg[0:0] == 1'b1) ? accum_V_24_fu_1979_p3 : accum_V_22_reg_2965);

assign accum_V_27_fu_1996_p3 = ((icmp_ln100_reg_2546_pp2_iter1_reg[0:0] == 1'b1) ? grp_fu_2126_p3 : accum_V_25_reg_2972);

assign accum_V_29_fu_2015_p3 = ((and_ln113_fu_2010_p2[0:0] == 1'b1) ? 8'd0 : accum_V_27_fu_1996_p3);

assign accum_V_3_fu_1767_p3 = ((and_ln100_fu_1763_p2[0:0] == 1'b1) ? grp_fu_2047_p3 : accum_V_load_reg_2761);

assign accum_V_4_fu_1773_p3 = ((icmp_ln99_reg_2439[0:0] == 1'b1) ? accum_V_3_fu_1767_p3 : accum_V_load_reg_2761);

assign accum_V_6_fu_1814_p3 = ((and_ln101_fu_1810_p2[0:0] == 1'b1) ? grp_fu_2056_p3 : accum_V_4_reg_2818);

assign accum_V_7_fu_1820_p3 = ((icmp_ln99_1_reg_2455[0:0] == 1'b1) ? accum_V_6_fu_1814_p3 : accum_V_4_reg_2818);

assign accum_V_9_fu_1857_p3 = ((and_ln101_1_fu_1853_p2[0:0] == 1'b1) ? grp_fu_2065_p3 : accum_V_7_reg_2855);

assign add74_2_fu_1097_p2 = (trunc_ln80_fu_1050_p1 ^ 2'd2);

assign add98_fu_1063_p2 = ($signed(trunc_ln80_fu_1050_p1) + $signed(2'd3));

assign add_ln102_10_fu_1603_p2 = (trunc_ln102_4_reg_2660 + 18'd1);

assign add_ln102_11_fu_1608_p2 = (add_ln102_10_fu_1603_p2 + add_ln102_9_reg_2665);

assign add_ln102_12_fu_1688_p2 = (trunc_ln102_5_reg_2733 + 18'd2);

assign add_ln102_13_fu_1693_p2 = (add_ln102_12_fu_1688_p2 + add_ln102_9_reg_2665);

assign add_ln102_14_fu_1707_p2 = (mul_ln83_reg_2425 + trunc_ln102_6_reg_2738);

assign add_ln102_15_fu_1711_p2 = (add_ln102_14_fu_1707_p2 + trunc_ln36_reg_2537);

assign add_ln102_16_fu_1725_p2 = (mul_ln83_reg_2425 + trunc_ln36_reg_2537);

assign add_ln102_17_fu_1791_p2 = (trunc_ln102_7_reg_2797 + 18'd1);

assign add_ln102_18_fu_1796_p2 = (add_ln102_17_fu_1791_p2 + add_ln102_16_reg_2802);

assign add_ln102_19_fu_1838_p2 = (trunc_ln102_8_reg_2850 + 18'd2);

assign add_ln102_1_fu_1335_p2 = (add_ln102_fu_1331_p2 + trunc_ln36_fu_1322_p1);

assign add_ln102_20_fu_1843_p2 = (add_ln102_19_fu_1838_p2 + add_ln102_16_reg_2802);

assign add_ln102_2_fu_1350_p2 = (mul75_cast_reg_2413 + trunc_ln36_fu_1322_p1);

assign add_ln102_3_fu_1457_p2 = (trunc_ln102_1_reg_2565 + 18'd1);

assign add_ln102_4_fu_1462_p2 = (add_ln102_3_fu_1457_p2 + add_ln102_2_reg_2570);

assign add_ln102_5_fu_1472_p2 = (trunc_ln102_2_reg_2576 + 18'd2);

assign add_ln102_6_fu_1477_p2 = (add_ln102_5_fu_1472_p2 + add_ln102_2_reg_2570);

assign add_ln102_7_fu_1589_p2 = (mul75_1_cast_reg_2419 + trunc_ln102_3_reg_2650);

assign add_ln102_8_fu_1593_p2 = (add_ln102_7_fu_1589_p2 + trunc_ln36_reg_2537);

assign add_ln102_9_fu_1499_p2 = (mul75_1_cast_reg_2419 + trunc_ln36_reg_2537);

assign add_ln102_fu_1331_p2 = (mul75_cast_reg_2413 + trunc_ln102_reg_2483);

assign add_ln126_fu_1666_p2 = ($signed(kn_8_reg_2698) + $signed(32'd1));

assign add_ln215_10_fu_1427_p2 = (add_ln215_9_fu_1421_p2 + 14'd5);

assign add_ln215_11_fu_1522_p2 = (tmp_11_cast_fu_1515_p3 + trunc_ln215_12_reg_2620);

assign add_ln215_12_fu_1527_p2 = (add_ln215_11_fu_1522_p2 + 14'd6);

assign add_ln215_13_fu_1561_p2 = (tmp_12_cast_fu_1553_p3 + trunc_ln215_14_fu_1545_p1);

assign add_ln215_14_fu_1567_p2 = (add_ln215_13_fu_1561_p2 + 14'd7);

assign add_ln215_15_fu_1747_p2 = (tmp_13_cast_fu_1739_p3 + trunc_ln215_16_fu_1733_p1);

assign add_ln215_16_fu_1753_p2 = (add_ln215_15_fu_1747_p2 + 14'd8);

assign add_ln215_1_fu_1200_p2 = (tmp_6_cast_fu_1192_p3 + trunc_ln215_2_fu_1184_p1);

assign add_ln215_2_fu_1206_p2 = (add_ln215_1_fu_1200_p2 + 14'd1);

assign add_ln215_3_fu_1255_p2 = (tmp_7_cast_fu_1248_p3 + trunc_ln215_4_reg_2473);

assign add_ln215_4_fu_1260_p2 = (add_ln215_3_fu_1255_p2 + 14'd2);

assign add_ln215_5_fu_1294_p2 = (tmp_8_cast_fu_1286_p3 + trunc_ln215_6_fu_1278_p1);

assign add_ln215_6_fu_1300_p2 = (add_ln215_5_fu_1294_p2 + 14'd3);

assign add_ln215_7_fu_1382_p2 = (tmp_9_cast_fu_1375_p3 + trunc_ln215_8_reg_2527);

assign add_ln215_8_fu_1387_p2 = (add_ln215_7_fu_1382_p2 + 14'd4);

assign add_ln215_9_fu_1421_p2 = (tmp_10_cast_fu_1413_p3 + trunc_ln215_10_fu_1405_p1);

assign add_ln215_fu_1160_p2 = (tmp_5_cast_fu_1152_p3 + trunc_ln215_fu_1144_p1);

assign add_ln47_1_fu_682_p2 = (indvar_flatten17_reg_418 + 36'd1);

assign add_ln47_fu_708_p2 = (ap_phi_mux_n_phi_fu_433_p4 + 32'd1);

assign add_ln49_1_fu_788_p2 = (indvar_flatten_reg_440 + 4'd1);

assign add_ln49_fu_754_p2 = (select_ln47_fu_720_p3 + 2'd1);

assign add_ln50_fu_782_p2 = (select_ln49_fu_766_p3 + 2'd1);

assign add_ln54_1_fu_904_p2 = (sub_ln54_1_fu_896_p2 + zext_ln54_3_fu_901_p1);

assign add_ln54_fu_834_p2 = ($signed(sext_ln47_fu_822_p1) + $signed(zext_ln54_2_fu_831_p1));

assign add_ln67_fu_997_p2 = (phi_mul_reg_518 + trunc_ln70_reg_2285);

assign and99_cast_fu_1069_p1 = add98_fu_1063_p2;

assign and_ln100_fu_1763_p2 = (icmp_ln99_reg_2439 & icmp_ln100_reg_2546);

assign and_ln101_1_fu_1853_p2 = (icmp_ln99_2_reg_2493 & icmp_ln100_reg_2546);

assign and_ln101_2_fu_1885_p2 = (icmp_ln99_3_reg_2509 & icmp_ln100_reg_2546);

assign and_ln101_3_fu_1912_p2 = (icmp_ln99_4_reg_2586 & icmp_ln100_reg_2546);

assign and_ln101_4_fu_1936_p2 = (icmp_ln99_5_reg_2602 & icmp_ln100_reg_2546);

assign and_ln101_5_fu_1959_p2 = (icmp_ln99_6_reg_2671 & icmp_ln100_reg_2546_pp2_iter1_reg);

assign and_ln101_6_fu_1975_p2 = (icmp_ln99_7_reg_2687_pp2_iter1_reg & icmp_ln100_reg_2546_pp2_iter1_reg);

assign and_ln101_fu_1810_p2 = (icmp_ln99_1_reg_2455 & icmp_ln100_reg_2546);

assign and_ln113_fu_2010_p1 = relu;

assign and_ln113_fu_2010_p2 = (tmp_4_fu_2002_p3 & and_ln113_fu_2010_p1);

assign and_ln47_fu_748_p2 = (xor_ln47_fu_736_p2 & icmp_ln50_fu_742_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage8 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((or_ln52_reg_2276 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((or_ln52_reg_2276 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_predicate_op169_read_state8 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_predicate_op169_read_state8 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage5_01001 = ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op545_write_state30 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage5_11001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state30_io) | ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op545_write_state30 == 1'b1))));
end

always @ (*) begin
    ap_block_pp2_stage5_subdone = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state30_io) | ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op545_write_state30 == 1'b1))));
end

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage6_11001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state31_io) | ((ap_predicate_op547_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage6_subdone = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state31_io) | ((ap_predicate_op547_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage8_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_predicate_op477_read_state24 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp2_stage8_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_predicate_op477_read_state24 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp2_stage8_iter0 = ((ap_predicate_op477_read_state24 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state25_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op545_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_state30_pp2_stage5_iter1 = ((strm_out_TREADY_int_regslice == 1'b0) & (ap_predicate_op545_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_state31_io = ((ap_predicate_op547_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp2_stage6_iter1 = ((ap_predicate_op547_write_state31 == 1'b1) & (strm_out_TREADY_int_regslice == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((or_ln52_reg_2276 == 1'd0) & (strm_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp1_stage0_iter0 = ((ap_predicate_op169_read_state8 == 1'b1) & (strm_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2060 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln86_reg_2435 == 1'd1));
end

always @ (*) begin
    ap_condition_454 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_x_7_reg_529 = 'bx;

always @ (*) begin
    ap_predicate_op169_read_state8 = ((icmp_ln67_fu_992_p2 == 1'd0) & (icmp_ln64_fu_987_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op477_read_state24 = ((cmp92_reg_2404 == 1'd1) & (icmp_ln105_reg_2747 == 1'd1) & (icmp_ln99_8_reg_2743 == 1'd1) & (icmp_ln86_reg_2435 == 1'd1));
end

always @ (*) begin
    ap_predicate_op545_write_state30 = ((icmp_ln100_reg_2546_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op547_write_state31 = ((icmp_ln100_reg_2546_pp2_iter1_reg == 1'd1) & (icmp_ln105_reg_2747_pp2_iter1_reg == 1'd1) & (icmp_ln99_8_reg_2743_pp2_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bias_V_fu_650_p1 = strm_in_TDATA_int_regslice[3:0];

assign bound4_fu_670_p2 = (p_shl_fu_666_p1 + cast2_fu_654_p1);

assign cast2_fu_654_p1 = kernelN;

assign cmp22_not_mid113_fu_676_p2 = (($signed(kernelSize) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign cmp92_fu_1058_p2 = (($signed(zext_ln80_fu_1054_p1) < $signed(sub91_reg_2378)) ? 1'b1 : 1'b0);

assign conv69_fu_1023_p1 = $signed(outMapXSize_reg_2326);

assign conv_i38_fu_1026_p1 = $signed(bias_V_reg_2193);

assign empty_16_fu_642_p1 = kernelSize[15:0];

assign empty_17_fu_646_p0 = mapSizeY;

assign empty_17_fu_646_p1 = empty_17_fu_646_p0[15:0];

assign empty_20_fu_928_p0 = mapSizeX;

assign empty_20_fu_928_p1 = empty_20_fu_928_p0[17:0];

assign empty_23_fu_1759_p1 = grp_fu_1643_p2[17:0];

assign empty_fu_638_p0 = mapSizeX;

assign empty_fu_638_p1 = empty_fu_638_p0[15:0];

assign filter_V_d0 = strm_in_TDATA_int_regslice[3:0];

assign grp_fu_2039_p1 = zext_ln61_reg_2307;

assign grp_fu_2047_p2 = ((icmp_ln100_reg_2546[0:0] == 1'b1) ? conv_i38_reg_2373 : ap_sig_allocacmp_accum_V_load);

assign grp_fu_2056_p2 = ((icmp_ln99_reg_2439[0:0] == 1'b1) ? accum_V_3_fu_1767_p3 : accum_V_load_reg_2761);

assign grp_fu_2065_p2 = ((icmp_ln99_1_reg_2455[0:0] == 1'b1) ? accum_V_6_fu_1814_p3 : accum_V_4_reg_2818);

assign grp_fu_2074_p2 = ((icmp_ln99_2_reg_2493[0:0] == 1'b1) ? accum_V_9_fu_1857_p3 : accum_V_7_reg_2855);

assign grp_fu_2083_p1 = and99_cast_reg_2408;

assign grp_fu_2090_p2 = ((icmp_ln99_3_reg_2509[0:0] == 1'b1) ? accum_V_12_fu_1889_p3 : accum_V_10_reg_2882);

assign grp_fu_2099_p2 = ((icmp_ln99_4_reg_2586[0:0] == 1'b1) ? accum_V_15_fu_1916_p3 : accum_V_13_reg_2909);

assign grp_fu_2108_p2 = ((icmp_ln99_5_reg_2602[0:0] == 1'b1) ? accum_V_18_fu_1940_p3 : accum_V_16_reg_2931);

assign grp_fu_2117_p2 = ((icmp_ln99_6_reg_2671[0:0] == 1'b1) ? accum_V_21_fu_1963_p3 : accum_V_19_reg_2948);

assign grp_fu_2126_p2 = ((icmp_ln99_7_reg_2687_pp2_iter1_reg[0:0] == 1'b1) ? accum_V_24_fu_1979_p3 : accum_V_22_reg_2965);

assign icmp_ln100_fu_1326_p2 = (($signed(ap_phi_mux_x_5_phi_fu_580_p4) < $signed(conv69_reg_2368)) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_1638_p1 = mapSizeX;

assign icmp_ln105_fu_1638_p2 = (($signed(x_5_reg_577) < $signed(icmp_ln105_fu_1638_p1)) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_1647_p1 = mapSizeX;

assign icmp_ln122_fu_1647_p2 = (($signed(x_5_reg_577) < $signed(icmp_ln122_fu_1647_p1)) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_703_p2 = ((indvar_flatten17_reg_418 == bound4_reg_2198) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_714_p2 = ((indvar_flatten_reg_440 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_742_p2 = ((x_1_reg_462 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_872_p2 = (($signed(zext_ln50_fu_869_p1) < $signed(kernelSize)) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_937_p2 = ((y_reg_473 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_971_p2 = (($signed(x_reg_484) < $signed(32'd42)) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_987_p2 = (($signed(zext_ln64_fu_983_p1) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_992_p2 = (($signed(ap_phi_mux_x_3_phi_fu_510_p4) > $signed(sub_reg_2280)) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1045_p2 = (($signed(zext_ln80_1_fu_1041_p1) < $signed(outMapYSize_reg_2320)) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_1122_p2 = (($signed(tmp_2_fu_1112_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_1128_p2 = (($signed(ap_phi_mux_kn_phi_fu_569_p4) < $signed(32'd1536)) ? 1'b1 : 1'b0);

assign icmp_ln99_1_fu_1179_p2 = (($signed(kn_1_fu_1171_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_2_fu_1240_p2 = (($signed(kn_2_reg_2466) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_3_fu_1273_p2 = (($signed(kn_3_fu_1266_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_4_fu_1367_p2 = (($signed(kn_4_reg_2520) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_5_fu_1400_p2 = (($signed(kn_5_fu_1393_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_6_fu_1507_p2 = (($signed(kn_6_reg_2613) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_7_fu_1540_p2 = (($signed(kn_7_fu_1533_p3) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_8_fu_1634_p2 = (($signed(kn_8_reg_2698) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_1134_p2 = (($signed(ap_phi_mux_kn_phi_fu_569_p4) < $signed(kernelN)) ? 1'b1 : 1'b0);

assign kn_1_fu_1171_p3 = ((icmp_ln99_fu_1134_p2[0:0] == 1'b1) ? ap_phi_mux_kn_phi_fu_569_p4 : 32'd1536);

assign kn_2_fu_1212_p3 = ((icmp_ln99_1_fu_1179_p2[0:0] == 1'b1) ? kn_1_fu_1171_p3 : 32'd1536);

assign kn_3_fu_1266_p3 = ((icmp_ln99_2_fu_1240_p2[0:0] == 1'b1) ? kn_2_reg_2466 : 32'd1536);

assign kn_4_fu_1306_p3 = ((icmp_ln99_3_fu_1273_p2[0:0] == 1'b1) ? kn_3_fu_1266_p3 : 32'd1536);

assign kn_5_fu_1393_p3 = ((icmp_ln99_4_fu_1367_p2[0:0] == 1'b1) ? kn_4_reg_2520 : 32'd1536);

assign kn_6_fu_1433_p3 = ((icmp_ln99_5_fu_1400_p2[0:0] == 1'b1) ? kn_5_fu_1393_p3 : 32'd1536);

assign kn_7_fu_1533_p3 = ((icmp_ln99_6_fu_1507_p2[0:0] == 1'b1) ? kn_6_reg_2613 : 32'd1536);

assign kn_8_fu_1573_p3 = ((icmp_ln99_7_fu_1540_p2[0:0] == 1'b1) ? kn_7_fu_1533_p3 : 32'd1536);

assign mul75_1_cast_fu_1092_p0 = mul75_1_cast_fu_1092_p00;

assign mul75_1_cast_fu_1092_p00 = y_4_cast_fu_1082_p2;

assign mul75_cast_fu_1077_p0 = mul75_cast_fu_1077_p00;

assign mul75_cast_fu_1077_p00 = trunc_ln80_fu_1050_p1;

assign mul_ln83_fu_1107_p0 = mul_ln83_fu_1107_p00;

assign mul_ln83_fu_1107_p00 = add74_2_fu_1097_p2;

assign n_2_fu_977_p2 = (n_1_reg_496 + 31'd1);

assign or_ln49_fu_760_p2 = (icmp_ln49_fu_714_p2 | and_ln47_fu_748_p2);

assign or_ln52_fu_883_p2 = (xor_ln52_fu_877_p2 | select_ln49_2_fu_862_p3);

assign outMapXSize_fu_961_p2 = (sub_ln78_fu_957_p2 + 16'd1);

assign outMapYSize_cast_fu_1020_p1 = outMapYSize_reg_2320;

assign outMapYSize_fu_951_p2 = (sub_ln77_fu_947_p2 + 16'd1);

assign p_shl1_cast_fu_889_p3 = {{trunc_ln54_1_reg_2271}, {2'd0}};

assign p_shl_fu_666_p1 = tmp_1_fu_658_p3;

assign rev107_fu_697_p2 = (slt_fu_692_p2 ^ 1'd1);

assign rev109_fu_856_p2 = (slt108_fu_851_p2 ^ 1'd1);

assign select_ln47_1_fu_728_p3 = ((icmp_ln49_fu_714_p2[0:0] == 1'b1) ? add_ln47_fu_708_p2 : ap_phi_mux_n_phi_fu_433_p4);

assign select_ln47_2_fu_826_p3 = ((icmp_ln49_reg_2222[0:0] == 1'b1) ? cmp22_not_mid113_reg_2203 : rev107_reg_2213);

assign select_ln47_fu_720_p3 = ((icmp_ln49_fu_714_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_y_1_phi_fu_455_p4);

assign select_ln49_1_fu_774_p3 = ((and_ln47_fu_748_p2[0:0] == 1'b1) ? add_ln49_fu_754_p2 : select_ln47_fu_720_p3);

assign select_ln49_2_fu_862_p3 = ((and_ln47_reg_2234[0:0] == 1'b1) ? rev109_fu_856_p2 : select_ln47_2_fu_826_p3);

assign select_ln49_3_fu_794_p3 = ((icmp_ln49_fu_714_p2[0:0] == 1'b1) ? 4'd1 : add_ln49_1_fu_788_p2);

assign select_ln49_fu_766_p3 = ((or_ln49_fu_760_p2[0:0] == 1'b1) ? 2'd0 : x_1_reg_462);

assign sext_ln47_fu_822_p1 = $signed(sub_ln54_fu_816_p2);

assign slt108_fu_851_p2 = (($signed(zext_ln49_1_fu_848_p1) < $signed(kernelSize)) ? 1'b1 : 1'b0);

assign slt_fu_692_p2 = (($signed(zext_ln49_fu_688_p1) < $signed(kernelSize)) ? 1'b1 : 1'b0);

assign strm_in_TREADY = regslice_both_strm_in_V_data_V_U_ack_in;

assign strm_out_TDATA_int_regslice = $signed(accum_V_29_fu_2015_p3);

assign strm_out_TVALID = regslice_both_strm_out_V_data_V_U_vld_out;

assign sub91_fu_1029_p2 = ($signed(outMapYSize_cast_fu_1020_p1) + $signed(17'd131071));

assign sub_fu_920_p0 = mapSizeX;

assign sub_fu_920_p2 = ($signed(sub_fu_920_p0) + $signed(32'd4294967295));

assign sub_ln54_1_fu_896_p2 = (p_shl1_cast_fu_889_p3 - trunc_ln54_reg_2266);

assign sub_ln54_fu_816_p2 = (zext_ln54_1_fu_812_p1 - zext_ln54_fu_802_p1);

assign sub_ln77_fu_947_p2 = (empty_17_reg_2188 - empty_16_reg_2182);

assign sub_ln78_fu_957_p2 = (empty_reg_2177 - empty_16_reg_2182);

assign tmp_10_cast_fu_1413_p3 = {{trunc_ln215_11_fu_1409_p1}, {3'd0}};

assign tmp_11_cast_fu_1515_p3 = {{trunc_ln215_13_reg_2625}, {3'd0}};

assign tmp_12_cast_fu_1553_p3 = {{trunc_ln215_15_fu_1549_p1}, {3'd0}};

assign tmp_13_cast_fu_1739_p3 = {{trunc_ln215_17_fu_1736_p1}, {3'd0}};

assign tmp_1_fu_658_p3 = {{kernelN}, {3'd0}};

assign tmp_2_fu_1112_p4 = {{x_2_reg_553[31:10]}};

assign tmp_3_fu_805_p3 = {{select_ln47_1_reg_2227}, {2'd0}};

assign tmp_4_fu_2002_p3 = accum_V_27_fu_1996_p3[32'd7];

assign tmp_5_cast_fu_1152_p3 = {{trunc_ln215_1_fu_1148_p1}, {3'd0}};

assign tmp_6_cast_fu_1192_p3 = {{trunc_ln215_3_fu_1188_p1}, {3'd0}};

assign tmp_7_cast_fu_1248_p3 = {{trunc_ln215_5_reg_2478}, {3'd0}};

assign tmp_8_cast_fu_1286_p3 = {{trunc_ln215_7_fu_1282_p1}, {3'd0}};

assign tmp_9_cast_fu_1375_p3 = {{trunc_ln215_9_reg_2532}, {3'd0}};

assign trunc_ln102_1_fu_1346_p1 = grp_fu_1232_p2[17:0];

assign trunc_ln102_2_fu_1355_p1 = grp_fu_1244_p2[17:0];

assign trunc_ln102_3_fu_1487_p1 = grp_fu_1363_p2[17:0];

assign trunc_ln102_4_fu_1495_p1 = grp_fu_1371_p2[17:0];

assign trunc_ln102_5_fu_1622_p1 = grp_fu_1503_p2[17:0];

assign trunc_ln102_6_fu_1626_p1 = grp_fu_1511_p2[17:0];

assign trunc_ln102_7_fu_1721_p1 = grp_fu_1630_p2[17:0];

assign trunc_ln102_8_fu_1806_p1 = grp_fu_1729_p2[17:0];

assign trunc_ln102_fu_1228_p1 = grp_fu_1139_p2[17:0];

assign trunc_ln215_10_fu_1405_p1 = kn_5_fu_1393_p3[13:0];

assign trunc_ln215_11_fu_1409_p1 = kn_5_fu_1393_p3[10:0];

assign trunc_ln215_12_fu_1441_p1 = kn_6_fu_1433_p3[13:0];

assign trunc_ln215_13_fu_1445_p1 = kn_6_fu_1433_p3[10:0];

assign trunc_ln215_14_fu_1545_p1 = kn_7_fu_1533_p3[13:0];

assign trunc_ln215_15_fu_1549_p1 = kn_7_fu_1533_p3[10:0];

assign trunc_ln215_16_fu_1733_p1 = kn_8_reg_2698[13:0];

assign trunc_ln215_17_fu_1736_p1 = kn_8_reg_2698[10:0];

assign trunc_ln215_1_fu_1148_p1 = ap_phi_mux_kn_phi_fu_569_p4[10:0];

assign trunc_ln215_2_fu_1184_p1 = kn_1_fu_1171_p3[13:0];

assign trunc_ln215_3_fu_1188_p1 = kn_1_fu_1171_p3[10:0];

assign trunc_ln215_4_fu_1220_p1 = kn_2_fu_1212_p3[13:0];

assign trunc_ln215_5_fu_1224_p1 = kn_2_fu_1212_p3[10:0];

assign trunc_ln215_6_fu_1278_p1 = kn_3_fu_1266_p3[13:0];

assign trunc_ln215_7_fu_1282_p1 = kn_3_fu_1266_p3[10:0];

assign trunc_ln215_8_fu_1314_p1 = kn_4_fu_1306_p3[13:0];

assign trunc_ln215_9_fu_1318_p1 = kn_4_fu_1306_p3[10:0];

assign trunc_ln215_fu_1144_p1 = ap_phi_mux_kn_phi_fu_569_p4[13:0];

assign trunc_ln36_fu_1322_p1 = ap_phi_mux_x_5_phi_fu_580_p4[17:0];

assign trunc_ln54_1_fu_844_p1 = add_ln54_fu_834_p2[11:0];

assign trunc_ln54_fu_840_p1 = add_ln54_fu_834_p2[13:0];

assign trunc_ln64_fu_1006_p1 = x_3_reg_507[17:0];

assign trunc_ln69_1_fu_1002_p1 = strm_in_TDATA_int_regslice[3:0];

assign trunc_ln69_2_fu_1881_p1 = strm_in_TDATA_int_regslice[3:0];

assign trunc_ln70_fu_925_p0 = mapSizeY;

assign trunc_ln70_fu_925_p1 = trunc_ln70_fu_925_p0[17:0];

assign trunc_ln80_fu_1050_p1 = y_2_reg_542[1:0];

assign x_4_fu_1014_p2 = (x_3_reg_507 + 32'd1);

assign x_6_fu_2033_p2 = (x_5_reg_577 + 32'd1);

assign x_8_fu_1658_p3 = ((xor_ln122_fu_1652_p2[0:0] == 1'b1) ? 32'd1024 : x_5_reg_577);

assign xor_ln122_fu_1652_p2 = (icmp_ln122_fu_1647_p2 ^ 1'd1);

assign xor_ln47_fu_736_p2 = (icmp_ln49_fu_714_p2 ^ 1'd1);

assign xor_ln52_fu_877_p2 = (icmp_ln52_fu_872_p2 ^ 1'd1);

assign y_3_fu_931_p2 = (y_reg_473 + 2'd1);

assign y_4_cast_fu_1082_p2 = (trunc_ln80_fu_1050_p1 + 2'd1);

assign y_4_fu_1035_p2 = (y_2_reg_542 + 15'd1);

assign zext_ln102_1_fu_1467_p1 = add_ln102_4_fu_1462_p2;

assign zext_ln102_2_fu_1482_p1 = add_ln102_6_fu_1477_p2;

assign zext_ln102_3_fu_1598_p1 = add_ln102_8_fu_1593_p2;

assign zext_ln102_4_fu_1613_p1 = add_ln102_11_fu_1608_p2;

assign zext_ln102_5_fu_1698_p1 = add_ln102_13_fu_1693_p2;

assign zext_ln102_6_fu_1716_p1 = add_ln102_15_fu_1711_p2;

assign zext_ln102_7_fu_1801_p1 = add_ln102_18_fu_1796_p2;

assign zext_ln102_8_fu_1848_p1 = add_ln102_20_fu_1843_p2;

assign zext_ln102_fu_1341_p1 = add_ln102_1_fu_1335_p2;

assign zext_ln109_fu_1908_p1 = $unsigned(grp_fu_2083_p4);

assign zext_ln215_1_fu_1236_p1 = add_ln215_2_reg_2461;

assign zext_ln215_2_fu_1359_p1 = add_ln215_4_reg_2499;

assign zext_ln215_3_fu_1491_p1 = add_ln215_6_reg_2515;

assign zext_ln215_4_fu_1618_p1 = add_ln215_8_reg_2592;

assign zext_ln215_5_fu_1703_p1 = add_ln215_10_reg_2608;

assign zext_ln215_6_fu_1787_p1 = add_ln215_12_reg_2677;

assign zext_ln215_7_fu_1834_p1 = add_ln215_14_reg_2693;

assign zext_ln215_8_fu_1877_p1 = add_ln215_16_reg_2808;

assign zext_ln215_fu_1166_p1 = add_ln215_fu_1160_p2;

assign zext_ln49_1_fu_848_p1 = add_ln49_reg_2239;

assign zext_ln49_fu_688_p1 = ap_phi_mux_y_1_phi_fu_455_p4;

assign zext_ln50_fu_869_p1 = select_ln49_reg_2244;

assign zext_ln54_1_fu_812_p1 = tmp_3_fu_805_p3;

assign zext_ln54_2_fu_831_p1 = select_ln49_1_reg_2250;

assign zext_ln54_3_fu_901_p1 = select_ln49_reg_2244_pp0_iter1_reg;

assign zext_ln54_4_fu_910_p1 = add_ln54_1_fu_904_p2;

assign zext_ln54_fu_802_p1 = select_ln47_1_reg_2227;

assign zext_ln61_fu_943_p1 = y_reg_473;

assign zext_ln64_fu_983_p1 = n_1_reg_496;

assign zext_ln70_fu_1010_p1 = $unsigned(grp_fu_2039_p4);

assign zext_ln80_1_fu_1041_p1 = y_2_reg_542;

assign zext_ln80_fu_1054_p1 = y_2_reg_542;

always @ (posedge ap_clk) begin
    zext_ln61_reg_2307[17:2] <= 16'b0000000000000000;
    and99_cast_reg_2408[17:2] <= 16'b0000000000000000;
end

endmodule //depthwise
