-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity depthwise is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_TVALID : IN STD_LOGIC;
    strm_in_TREADY : OUT STD_LOGIC;
    strm_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    strm_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    strm_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    strm_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_TVALID : OUT STD_LOGIC;
    strm_out_TREADY : IN STD_LOGIC;
    strm_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    strm_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    strm_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    kernelN : IN STD_LOGIC_VECTOR (31 downto 0);
    kernelSize : IN STD_LOGIC_VECTOR (31 downto 0);
    mapSizeX : IN STD_LOGIC_VECTOR (31 downto 0);
    mapSizeY : IN STD_LOGIC_VECTOR (31 downto 0);
    relu : IN STD_LOGIC );
end;


architecture behav of depthwise is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "depthwise_depthwise,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.215500,HLS_SYN_LAT=10597,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=3767,HLS_SYN_LUT=3493,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_pp2_stage4 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp2_stage5 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_pp2_stage6 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp2_stage7 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp2_stage8 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_601 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011000000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv36_1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv22_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_const_lv32_600 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv14_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000101";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv18_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_const_lv14_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000110";
    constant ap_const_lv14_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000111";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv14_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal strm_in_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln52_reg_2276 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln64_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage8 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_pp2_stage8 : BOOLEAN;
    signal icmp_ln86_reg_2435 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_8_reg_2743 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_2747 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp92_reg_2404 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage5 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage5 : BOOLEAN;
    signal icmp_ln99_8_reg_2743_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_2747_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_2546 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_2546_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage6 : signal is "none";
    signal ap_block_pp2_stage6 : BOOLEAN;
    signal indvar_flatten17_reg_418 : STD_LOGIC_VECTOR (35 downto 0);
    signal n_reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_reg_440 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_1_reg_451 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_1_reg_462 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_1_reg_496 : STD_LOGIC_VECTOR (30 downto 0);
    signal x_3_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_518 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_7_reg_529 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_5_reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_9_reg_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_9_reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_621 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state17_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state26_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_block_state19_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state28_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal icmp_ln99_2_reg_2493 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state21_pp2_stage5_iter0 : BOOLEAN;
    signal ap_predicate_op545_write_state30 : BOOLEAN;
    signal ap_block_state30_pp2_stage5_iter1 : BOOLEAN;
    signal ap_block_state30_io : BOOLEAN;
    signal ap_block_pp2_stage5_11001 : BOOLEAN;
    signal icmp_ln99_4_reg_2586 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage7 : signal is "none";
    signal ap_block_state23_pp2_stage7_iter0 : BOOLEAN;
    signal ap_block_pp2_stage7_11001 : BOOLEAN;
    signal icmp_ln99_6_reg_2671 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_625 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state18_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state27_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal icmp_ln99_1_reg_2455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage4 : signal is "none";
    signal ap_block_state20_pp2_stage4_iter0 : BOOLEAN;
    signal ap_block_state29_pp2_stage4_iter1 : BOOLEAN;
    signal ap_block_pp2_stage4_11001 : BOOLEAN;
    signal icmp_ln99_3_reg_2509 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state22_pp2_stage6_iter0 : BOOLEAN;
    signal ap_predicate_op547_write_state31 : BOOLEAN;
    signal ap_block_state31_pp2_stage6_iter1 : BOOLEAN;
    signal ap_block_state31_io : BOOLEAN;
    signal ap_block_pp2_stage6_11001 : BOOLEAN;
    signal icmp_ln99_5_reg_2602 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op477_read_state24 : BOOLEAN;
    signal ap_block_state24_pp2_stage8_iter0 : BOOLEAN;
    signal ap_block_pp2_stage8_11001 : BOOLEAN;
    signal icmp_ln99_7_reg_2687 : STD_LOGIC_VECTOR (0 downto 0);
    signal featureMap_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_629 : STD_LOGIC_VECTOR (3 downto 0);
    signal featureMap_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_634 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_638_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_reg_2177 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_16_fu_642_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_16_reg_2182 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_17_fu_646_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_17_reg_2188 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_V_fu_650_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal bias_V_reg_2193 : STD_LOGIC_VECTOR (3 downto 0);
    signal bound4_fu_670_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal bound4_reg_2198 : STD_LOGIC_VECTOR (35 downto 0);
    signal cmp22_not_mid113_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp22_not_mid113_reg_2203 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_1_fu_682_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal rev107_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev107_reg_2213 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_2218 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_2222 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_1_fu_728_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln47_1_reg_2227 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln47_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_reg_2234 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln49_fu_754_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln49_reg_2239 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_fu_766_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_reg_2244 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_reg_2244_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_1_fu_774_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_1_reg_2250 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln50_fu_782_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_3_fu_794_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln54_fu_840_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln54_reg_2266 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln54_1_fu_844_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln54_1_reg_2271 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln52_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_fu_920_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_2280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln70_fu_925_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln70_reg_2285 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_20_fu_928_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_20_reg_2290 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_3_fu_931_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_3_reg_2299 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln61_fu_943_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln61_reg_2307 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln61_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outMapYSize_fu_951_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapYSize_reg_2320 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapXSize_fu_961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapXSize_reg_2326 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln62_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal n_2_fu_977_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_predicate_op169_read_state8 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln64_reg_2340 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_2340_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_2340_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2344 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2344_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2344_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln67_fu_997_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln69_1_fu_1002_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2353 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2353_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2353_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln64_fu_1006_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln64_reg_2358 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_4_fu_1014_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal conv69_fu_1023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv69_reg_2368 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal conv_i38_fu_1026_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_i38_reg_2373 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub91_fu_1029_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub91_reg_2378 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln102_reg_2383 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_4_fu_1035_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_4_reg_2396 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal regslice_both_strm_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal cmp92_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and99_cast_fu_1069_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal and99_cast_reg_2408 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul75_cast_fu_1077_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul75_cast_reg_2413 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul75_1_cast_fu_1092_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul75_1_cast_reg_2419 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln83_fu_1107_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln83_reg_2425 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln83_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln86_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state16_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln86_reg_2435_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_reg_2439 : STD_LOGIC_VECTOR (0 downto 0);
    signal kn_1_fu_1171_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_1_reg_2450 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_1_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_2_fu_1206_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_2_reg_2461 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_2_fu_1212_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_2_reg_2466 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_4_fu_1220_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_4_reg_2473 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_5_fu_1224_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln215_5_reg_2478 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln102_fu_1228_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_reg_2483 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln99_2_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_4_fu_1260_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_4_reg_2499 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_3_fu_1266_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_3_reg_2504 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_3_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_6_fu_1300_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_6_reg_2515 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_4_fu_1306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_4_reg_2520 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_8_fu_1314_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_8_reg_2527 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_9_fu_1318_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln215_9_reg_2532 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln36_fu_1322_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln36_reg_2537 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln100_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln102_1_fu_1346_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_1_reg_2565 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_2_fu_1350_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_2_reg_2570 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_2_fu_1355_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_2_reg_2576 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln99_4_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_8_fu_1387_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_8_reg_2592 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_5_fu_1393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_5_reg_2597 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_5_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_10_fu_1427_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_10_reg_2608 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_6_fu_1433_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_6_reg_2613 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_12_fu_1441_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_12_reg_2620 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_13_fu_1445_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln215_13_reg_2625 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln102_3_fu_1487_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_3_reg_2650 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_4_fu_1495_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_4_reg_2660 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_9_fu_1499_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_9_reg_2665 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln99_6_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_12_fu_1527_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_12_reg_2677 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_7_fu_1533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_7_reg_2682 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_7_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_7_reg_2687_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_14_fu_1567_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_14_reg_2693 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_8_fu_1573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_8_reg_2698 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln102_5_fu_1622_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_5_reg_2733 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_6_fu_1626_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_6_reg_2738 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln99_8_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_8_fu_1658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln126_fu_1666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_V_load_reg_2761 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln102_7_fu_1721_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_7_reg_2797 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_16_fu_1725_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_16_reg_2802 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln215_16_fu_1753_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_16_reg_2808 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_23_fu_1759_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_23_reg_2813 : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_V_4_fu_1773_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_4_reg_2818 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_6_reg_2840 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln102_8_fu_1806_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln102_8_reg_2850 : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_V_7_fu_1820_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_7_reg_2855 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_10_fu_1863_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_10_reg_2882 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_2_fu_1881_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_2_reg_2904 : STD_LOGIC_VECTOR (3 downto 0);
    signal accum_V_13_fu_1895_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_13_reg_2909 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_8_reg_2926 : STD_LOGIC_VECTOR (3 downto 0);
    signal accum_V_16_fu_1922_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_16_reg_2931 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_19_fu_1946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_19_reg_2948 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_22_fu_1969_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_22_reg_2965 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_25_fu_1985_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_25_reg_2972 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_6_fu_2033_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state18 : STD_LOGIC;
    signal ap_block_pp2_stage8_subdone : BOOLEAN;
    signal ap_block_pp2_stage6_subdone : BOOLEAN;
    signal filter_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal filter_V_ce0 : STD_LOGIC;
    signal filter_V_we0 : STD_LOGIC;
    signal filter_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal featureMap_V_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal featureMap_V_ce0 : STD_LOGIC;
    signal featureMap_V_we0 : STD_LOGIC;
    signal featureMap_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal featureMap_V_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal featureMap_V_ce1 : STD_LOGIC;
    signal ap_phi_mux_n_phi_fu_433_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y_1_phi_fu_455_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_reg_473 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_x_3_phi_fu_510_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_x_7_reg_529 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_reg_542 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_2_reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_kn_phi_fu_569_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_x_5_phi_fu_580_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal ap_phi_reg_pp2_iter0_x_9_reg_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_kn_9_reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_4_fu_910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_fu_1010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_1_fu_1236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal zext_ln102_fu_1341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_2_fu_1359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_1_fu_1467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal zext_ln102_2_fu_1482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_3_fu_1491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_3_fu_1598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage4 : BOOLEAN;
    signal zext_ln215_4_fu_1618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_4_fu_1613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_5_fu_1703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_5_fu_1698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_6_fu_1716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_6_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_7_fu_1801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_7_fu_1834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage7 : BOOLEAN;
    signal zext_ln102_8_fu_1848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_8_fu_1877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_fu_1908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_V_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_27_fu_1996_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_accum_V_load : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_29_fu_2015_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage5_01001 : BOOLEAN;
    signal empty_fu_638_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_17_fu_646_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_658_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_shl_fu_666_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal cast2_fu_654_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln49_fu_688_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln47_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_fu_720_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln49_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln49_1_fu_788_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_805_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln54_1_fu_812_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln54_fu_802_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal sub_ln54_fu_816_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln47_fu_822_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln54_2_fu_831_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln54_fu_834_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln49_1_fu_848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt108_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev109_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_2_fu_826_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln50_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln49_2_fu_862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl1_cast_fu_889_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln54_1_fu_896_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln54_3_fu_901_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln54_1_fu_904_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_fu_920_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln70_fu_925_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_20_fu_928_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln77_fu_947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln78_fu_957_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln64_fu_983_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2039_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal outMapYSize_cast_fu_1020_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln80_1_fu_1041_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln80_fu_1054_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln80_fu_1050_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add98_fu_1063_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul75_cast_fu_1077_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_4_cast_fu_1082_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul75_1_cast_fu_1092_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal add74_2_fu_1097_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln83_fu_1107_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_1112_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln215_1_fu_1148_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_cast_fu_1152_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_fu_1144_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_fu_1160_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_3_fu_1188_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_cast_fu_1192_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_2_fu_1184_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_1_fu_1200_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_cast_fu_1248_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_3_fu_1255_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_7_fu_1282_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_cast_fu_1286_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_6_fu_1278_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_5_fu_1294_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln102_fu_1331_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_1_fu_1335_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1232_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_cast_fu_1375_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_7_fu_1382_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_11_fu_1409_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_cast_fu_1413_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_10_fu_1405_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_9_fu_1421_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln102_3_fu_1457_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_4_fu_1462_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_5_fu_1472_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_6_fu_1477_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1371_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_cast_fu_1515_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_11_fu_1522_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_15_fu_1549_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_cast_fu_1553_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_14_fu_1545_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_13_fu_1561_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln102_7_fu_1589_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_8_fu_1593_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_10_fu_1603_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_11_fu_1608_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1511_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln105_fu_1638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln122_fu_1647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln122_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln122_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln102_12_fu_1688_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_13_fu_1693_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_14_fu_1707_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_15_fu_1711_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1630_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_17_fu_1736_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_cast_fu_1739_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_16_fu_1733_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_15_fu_1747_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln100_fu_1763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_3_fu_1767_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln102_17_fu_1791_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_18_fu_1796_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1729_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln101_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2056_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_6_fu_1814_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln102_19_fu_1838_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_20_fu_1843_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal and_ln101_1_fu_1853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2065_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_9_fu_1857_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_2_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2074_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_12_fu_1889_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2083_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal and_ln101_3_fu_1912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2090_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_15_fu_1916_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_4_fu_1936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2099_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_18_fu_1940_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_5_fu_1959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2108_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_21_fu_1963_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_6_fu_1975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2117_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_24_fu_1979_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2126_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_2002_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln113_fu_2010_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln113_fu_2010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2039_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2047_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2056_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2065_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2074_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2083_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2090_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2099_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2108_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2117_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2126_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1139_ce : STD_LOGIC;
    signal grp_fu_1232_ce : STD_LOGIC;
    signal grp_fu_1244_ce : STD_LOGIC;
    signal grp_fu_1363_ce : STD_LOGIC;
    signal grp_fu_1371_ce : STD_LOGIC;
    signal grp_fu_1503_ce : STD_LOGIC;
    signal grp_fu_1511_ce : STD_LOGIC;
    signal grp_fu_1630_ce : STD_LOGIC;
    signal grp_fu_1643_ce : STD_LOGIC;
    signal grp_fu_1729_ce : STD_LOGIC;
    signal grp_fu_2039_ce : STD_LOGIC;
    signal grp_fu_2047_ce : STD_LOGIC;
    signal grp_fu_2056_ce : STD_LOGIC;
    signal grp_fu_2065_ce : STD_LOGIC;
    signal grp_fu_2074_ce : STD_LOGIC;
    signal grp_fu_2083_ce : STD_LOGIC;
    signal grp_fu_2090_ce : STD_LOGIC;
    signal grp_fu_2099_ce : STD_LOGIC;
    signal grp_fu_2108_ce : STD_LOGIC;
    signal grp_fu_2117_ce : STD_LOGIC;
    signal grp_fu_2126_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_block_pp2_stage4_subdone : BOOLEAN;
    signal ap_block_pp2_stage5_subdone : BOOLEAN;
    signal ap_block_pp2_stage7_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal regslice_both_strm_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal strm_in_TVALID_int_regslice : STD_LOGIC;
    signal strm_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_strm_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_strm_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_strm_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_strm_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_last_V_U_ack_in : STD_LOGIC;
    signal strm_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal strm_out_TVALID_int_regslice : STD_LOGIC;
    signal strm_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_strm_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_vld_out : STD_LOGIC;
    signal mul75_1_cast_fu_1092_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul75_cast_fu_1077_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln83_fu_1107_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_condition_2060 : BOOLEAN;
    signal ap_condition_454 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component depthwise_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component depthwise_mul_2ns_18s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component depthwise_mac_muladd_4s_4s_8ns_8_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component depthwise_filter_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component depthwise_featureMap_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        address1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component depthwise_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    filter_V_U : component depthwise_filter_V
    generic map (
        DataWidth => 4,
        AddressRange => 13824,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => filter_V_address0,
        ce0 => filter_V_ce0,
        we0 => filter_V_we0,
        d0 => filter_V_d0,
        q0 => filter_V_q0);

    featureMap_V_U : component depthwise_featureMap_V
    generic map (
        DataWidth => 4,
        AddressRange => 258048,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => featureMap_V_address0,
        ce0 => featureMap_V_ce0,
        we0 => featureMap_V_we0,
        d0 => featureMap_V_d0,
        q0 => featureMap_V_q0,
        address1 => featureMap_V_address1,
        ce1 => featureMap_V_ce1,
        q1 => featureMap_V_q1);

    mul_32s_32s_32_2_1_U1 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mapSizeY,
        din1 => mapSizeX,
        ce => ap_const_logic_1,
        dout => grp_fu_967_p2);

    mul_2ns_18s_18_1_1_U2 : component depthwise_mul_2ns_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => mul75_cast_fu_1077_p0,
        din1 => empty_20_reg_2290,
        dout => mul75_cast_fu_1077_p2);

    mul_2ns_18s_18_1_1_U3 : component depthwise_mul_2ns_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => mul75_1_cast_fu_1092_p0,
        din1 => empty_20_reg_2290,
        dout => mul75_1_cast_fu_1092_p2);

    mul_2ns_18s_18_1_1_U4 : component depthwise_mul_2ns_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln83_fu_1107_p0,
        din1 => empty_20_reg_2290,
        dout => mul_ln83_fu_1107_p2);

    mul_32s_32s_32_2_1_U5 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_phi_mux_kn_phi_fu_569_p4,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1139_ce,
        dout => grp_fu_1139_p2);

    mul_32s_32s_32_2_1_U6 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_1_reg_2450,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1232_ce,
        dout => grp_fu_1232_p2);

    mul_32s_32s_32_2_1_U7 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_2_reg_2466,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1244_ce,
        dout => grp_fu_1244_p2);

    mul_32s_32s_32_2_1_U8 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_3_reg_2504,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1363_ce,
        dout => grp_fu_1363_p2);

    mul_32s_32s_32_2_1_U9 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_4_reg_2520,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1371_ce,
        dout => grp_fu_1371_p2);

    mul_32s_32s_32_2_1_U10 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_5_reg_2597,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1503_ce,
        dout => grp_fu_1503_p2);

    mul_32s_32s_32_2_1_U11 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_6_reg_2613,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1511_ce,
        dout => grp_fu_1511_p2);

    mul_32s_32s_32_2_1_U12 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_7_reg_2682,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1630_ce,
        dout => grp_fu_1630_p2);

    mul_32s_32s_32_2_1_U13 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_8_reg_2698,
        din1 => mapSizeY,
        ce => grp_fu_1643_ce,
        dout => grp_fu_1643_p2);

    mul_32s_32s_32_2_1_U14 : component depthwise_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => kn_8_reg_2698,
        din1 => mul_ln102_reg_2383,
        ce => grp_fu_1729_ce,
        dout => grp_fu_1729_p2);

    ama_addmuladd_18ns_2ns_18s_18ns_18_4_1_U15 : component depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 2,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => phi_mul_reg_518,
        din1 => grp_fu_2039_p1,
        din2 => empty_20_reg_2290,
        din3 => trunc_ln64_reg_2358,
        ce => grp_fu_2039_ce,
        dout => grp_fu_2039_p4);

    mac_muladd_4s_4s_8ns_8_4_1_U16 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_621,
        din1 => featureMap_V_q0,
        din2 => grp_fu_2047_p2,
        ce => grp_fu_2047_ce,
        dout => grp_fu_2047_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U17 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_625,
        din1 => featureMap_V_q1,
        din2 => grp_fu_2056_p2,
        ce => grp_fu_2056_ce,
        dout => grp_fu_2056_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U18 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_621,
        din1 => reg_629,
        din2 => grp_fu_2065_p2,
        ce => grp_fu_2065_ce,
        dout => grp_fu_2065_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U19 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_625,
        din1 => reg_629,
        din2 => grp_fu_2074_p2,
        ce => grp_fu_2074_ce,
        dout => grp_fu_2074_p3);

    ama_addmuladd_18ns_2ns_18s_18ns_18_4_1_U20 : component depthwise_ama_addmuladd_18ns_2ns_18s_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 2,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => empty_23_reg_2813,
        din1 => grp_fu_2083_p1,
        din2 => empty_20_reg_2290,
        din3 => trunc_ln36_reg_2537,
        ce => grp_fu_2083_ce,
        dout => grp_fu_2083_p4);

    mac_muladd_4s_4s_8ns_8_4_1_U21 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_621,
        din1 => reg_634,
        din2 => grp_fu_2090_p2,
        ce => grp_fu_2090_ce,
        dout => grp_fu_2090_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U22 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_625,
        din1 => reg_629,
        din2 => grp_fu_2099_p2,
        ce => grp_fu_2099_ce,
        dout => grp_fu_2099_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U23 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_621,
        din1 => lhs_6_reg_2840,
        din2 => grp_fu_2108_p2,
        ce => grp_fu_2108_ce,
        dout => grp_fu_2108_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U24 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_625,
        din1 => reg_634,
        din2 => grp_fu_2117_p2,
        ce => grp_fu_2117_ce,
        dout => grp_fu_2117_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U25 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => rhs_8_reg_2926,
        din1 => reg_629,
        din2 => grp_fu_2126_p2,
        ce => grp_fu_2126_ce,
        dout => grp_fu_2126_p3);

    regslice_both_strm_in_V_data_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TDATA,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_data_V_U_ack_in,
        data_out => strm_in_TDATA_int_regslice,
        vld_out => strm_in_TVALID_int_regslice,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_data_V_U_apdone_blk);

    regslice_both_strm_in_V_keep_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TKEEP,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_keep_V_U_ack_in,
        data_out => strm_in_TKEEP_int_regslice,
        vld_out => regslice_both_strm_in_V_keep_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_keep_V_U_apdone_blk);

    regslice_both_strm_in_V_strb_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TSTRB,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_strb_V_U_ack_in,
        data_out => strm_in_TSTRB_int_regslice,
        vld_out => regslice_both_strm_in_V_strb_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_strb_V_U_apdone_blk);

    regslice_both_strm_in_V_last_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TLAST,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_last_V_U_ack_in,
        data_out => strm_in_TLAST_int_regslice,
        vld_out => regslice_both_strm_in_V_last_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_last_V_U_apdone_blk);

    regslice_both_strm_out_V_data_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_out_TDATA_int_regslice,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => strm_out_TREADY_int_regslice,
        data_out => strm_out_TDATA,
        vld_out => regslice_both_strm_out_V_data_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_data_V_U_apdone_blk);

    regslice_both_strm_out_V_keep_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_keep_V_U_ack_in_dummy,
        data_out => strm_out_TKEEP,
        vld_out => regslice_both_strm_out_V_keep_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_keep_V_U_apdone_blk);

    regslice_both_strm_out_V_strb_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_strb_V_U_ack_in_dummy,
        data_out => strm_out_TSTRB,
        vld_out => regslice_both_strm_out_V_strb_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_strb_V_U_apdone_blk);

    regslice_both_strm_out_V_last_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv1_0,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_last_V_U_ack_in_dummy,
        data_out => strm_out_TLAST,
        vld_out => regslice_both_strm_out_V_last_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln62_fu_971_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((icmp_ln62_fu_971_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln83_fu_1122_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((icmp_ln83_fu_1122_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accum_V_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_0))) then 
                accum_V_fu_192 <= accum_V_25_fu_1985_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                accum_V_fu_192 <= accum_V_29_fu_2015_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
                accum_V_fu_192 <= accum_V_27_fu_1996_p3;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter0_kn_9_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2060)) then
                if ((icmp_ln99_8_fu_1634_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp2_iter0_kn_9_reg_600 <= ap_const_lv32_601;
                elsif ((icmp_ln99_8_fu_1634_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp2_iter0_kn_9_reg_600 <= add_ln126_fu_1666_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter0_x_9_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2060)) then
                if ((icmp_ln99_8_fu_1634_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp2_iter0_x_9_reg_588 <= x_5_reg_577;
                elsif ((icmp_ln99_8_fu_1634_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp2_iter0_x_9_reg_588 <= x_8_fu_1658_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten17_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_703_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten17_reg_418 <= add_ln47_1_fu_682_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten17_reg_418 <= ap_const_lv36_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_703_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_440 <= select_ln49_3_fu_794_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_440 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    kn_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then 
                kn_reg_565 <= kn_9_reg_600;
            elsif (((icmp_ln83_fu_1122_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                kn_reg_565 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    n_1_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_fu_987_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                n_1_reg_496 <= n_2_fu_977_p2;
            elsif (((icmp_ln62_fu_971_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                n_1_reg_496 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    n_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_reg_2218 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                n_reg_429 <= select_ln47_1_reg_2227;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_reg_429 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_fu_987_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                phi_mul_reg_518 <= add_ln67_fu_997_p2;
            elsif (((icmp_ln62_fu_971_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                phi_mul_reg_518 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    reg_629_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln99_5_reg_2602 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln99_3_reg_2509 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2435 = ap_const_lv1_1)))) then 
                reg_629 <= featureMap_V_q1;
            elsif ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (icmp_ln100_reg_2546 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_2_reg_2493 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1)))) then 
                reg_629 <= featureMap_V_q0;
            end if; 
        end if;
    end process;

    x_1_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_703_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                x_1_reg_462 <= add_ln50_fu_782_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_1_reg_462 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    x_2_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                x_2_reg_553 <= x_6_fu_2033_p2;
            elsif (((icmp_ln80_fu_1045_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                x_2_reg_553 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_3_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln64_reg_2340 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                x_3_reg_507 <= x_7_reg_529;
            elsif (((icmp_ln62_fu_971_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                x_3_reg_507 <= x_reg_484;
            end if; 
        end if;
    end process;

    x_5_reg_577_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                x_5_reg_577 <= x_9_reg_588;
            elsif (((icmp_ln83_fu_1122_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                x_5_reg_577 <= x_2_reg_553;
            end if; 
        end if;
    end process;

    x_7_reg_529_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_454)) then
                if (((icmp_ln67_fu_992_p2 = ap_const_lv1_1) and (icmp_ln64_fu_987_p2 = ap_const_lv1_1))) then 
                    x_7_reg_529 <= ap_const_lv32_2A;
                elsif (((icmp_ln67_fu_992_p2 = ap_const_lv1_0) and (icmp_ln64_fu_987_p2 = ap_const_lv1_1))) then 
                    x_7_reg_529 <= ap_phi_mux_x_3_phi_fu_510_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    x_7_reg_529 <= ap_phi_reg_pp1_iter0_x_7_reg_529;
                end if;
            end if; 
        end if;
    end process;

    x_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                x_reg_484 <= x_4_fu_1014_p2;
            elsif (((icmp_ln61_fu_937_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                x_reg_484 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_1_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_reg_2218 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                y_1_reg_451 <= select_ln49_1_reg_2250;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_1_reg_451 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    y_2_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln83_fu_1122_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                y_2_reg_542 <= y_4_reg_2396;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                y_2_reg_542 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    y_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln62_fu_971_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                y_reg_473 <= y_3_reg_2299;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                y_reg_473 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                accum_V_10_reg_2882 <= accum_V_10_fu_1863_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                accum_V_13_reg_2909 <= accum_V_13_fu_1895_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then
                accum_V_16_reg_2931 <= accum_V_16_fu_1922_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then
                accum_V_19_reg_2948 <= accum_V_19_fu_1946_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then
                accum_V_22_reg_2965 <= accum_V_22_fu_1969_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then
                accum_V_25_reg_2972 <= accum_V_25_fu_1985_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                accum_V_4_reg_2818 <= accum_V_4_fu_1773_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                accum_V_7_reg_2855 <= accum_V_7_fu_1820_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                accum_V_load_reg_2761 <= ap_sig_allocacmp_accum_V_load;
                add_ln102_16_reg_2802 <= add_ln102_16_fu_1725_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                add_ln102_2_reg_2570 <= add_ln102_2_fu_1350_p2;
                add_ln215_10_reg_2608 <= add_ln215_10_fu_1427_p2;
                add_ln215_8_reg_2592 <= add_ln215_8_fu_1387_p2;
                icmp_ln100_reg_2546 <= icmp_ln100_fu_1326_p2;
                icmp_ln99_4_reg_2586 <= icmp_ln99_4_fu_1367_p2;
                icmp_ln99_5_reg_2602 <= icmp_ln99_5_fu_1400_p2;
                kn_5_reg_2597 <= kn_5_fu_1393_p3;
                kn_6_reg_2613 <= kn_6_fu_1433_p3;
                trunc_ln215_12_reg_2620 <= trunc_ln215_12_fu_1441_p1;
                trunc_ln215_13_reg_2625 <= trunc_ln215_13_fu_1445_p1;
                trunc_ln36_reg_2537 <= trunc_ln36_fu_1322_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                add_ln102_9_reg_2665 <= add_ln102_9_fu_1499_p2;
                add_ln215_12_reg_2677 <= add_ln215_12_fu_1527_p2;
                add_ln215_14_reg_2693 <= add_ln215_14_fu_1567_p2;
                icmp_ln99_6_reg_2671 <= icmp_ln99_6_fu_1507_p2;
                icmp_ln99_7_reg_2687 <= icmp_ln99_7_fu_1540_p2;
                kn_7_reg_2682 <= kn_7_fu_1533_p3;
                kn_8_reg_2698 <= kn_8_fu_1573_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln100_reg_2546 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                add_ln215_16_reg_2808 <= add_ln215_16_fu_1753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln86_fu_1128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln215_2_reg_2461 <= add_ln215_2_fu_1206_p2;
                icmp_ln99_1_reg_2455 <= icmp_ln99_1_fu_1179_p2;
                icmp_ln99_reg_2439 <= icmp_ln99_fu_1134_p2;
                kn_1_reg_2450 <= kn_1_fu_1171_p3;
                kn_2_reg_2466 <= kn_2_fu_1212_p3;
                trunc_ln215_4_reg_2473 <= trunc_ln215_4_fu_1220_p1;
                trunc_ln215_5_reg_2478 <= trunc_ln215_5_fu_1224_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                add_ln215_4_reg_2499 <= add_ln215_4_fu_1260_p2;
                add_ln215_6_reg_2515 <= add_ln215_6_fu_1300_p2;
                icmp_ln99_2_reg_2493 <= icmp_ln99_2_fu_1240_p2;
                icmp_ln99_3_reg_2509 <= icmp_ln99_3_fu_1273_p2;
                kn_3_reg_2504 <= kn_3_fu_1266_p3;
                kn_4_reg_2520 <= kn_4_fu_1306_p3;
                trunc_ln215_8_reg_2527 <= trunc_ln215_8_fu_1314_p1;
                trunc_ln215_9_reg_2532 <= trunc_ln215_9_fu_1318_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_703_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln49_reg_2239 <= add_ln49_fu_754_p2;
                and_ln47_reg_2234 <= and_ln47_fu_748_p2;
                icmp_ln49_reg_2222 <= icmp_ln49_fu_714_p2;
                select_ln49_reg_2244 <= select_ln49_fu_766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln80_fu_1045_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    and99_cast_reg_2408(1 downto 0) <= and99_cast_fu_1069_p1(1 downto 0);
                cmp92_reg_2404 <= cmp92_fu_1058_p2;
                mul75_1_cast_reg_2419 <= mul75_1_cast_fu_1092_p2;
                mul75_cast_reg_2413 <= mul75_cast_fu_1077_p2;
                mul_ln83_reg_2425 <= mul_ln83_fu_1107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bias_V_reg_2193 <= bias_V_fu_650_p1;
                bound4_reg_2198 <= bound4_fu_670_p2;
                cmp22_not_mid113_reg_2203 <= cmp22_not_mid113_fu_676_p2;
                empty_16_reg_2182 <= empty_16_fu_642_p1;
                empty_17_reg_2188 <= empty_17_fu_646_p1;
                empty_reg_2177 <= empty_fu_638_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                conv69_reg_2368 <= conv69_fu_1023_p1;
                conv_i38_reg_2373 <= conv_i38_fu_1026_p1;
                mul_ln102_reg_2383 <= grp_fu_967_p2;
                sub91_reg_2378 <= sub91_fu_1029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                empty_20_reg_2290 <= empty_20_fu_928_p1;
                sub_reg_2280 <= sub_fu_920_p2;
                trunc_ln70_reg_2285 <= trunc_ln70_fu_925_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (cmp92_reg_2404 = ap_const_lv1_1) and (icmp_ln105_reg_2747 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                empty_23_reg_2813 <= empty_23_fu_1759_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then
                icmp_ln100_reg_2546_pp2_iter1_reg <= icmp_ln100_reg_2546;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln99_8_fu_1634_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                icmp_ln105_reg_2747 <= icmp_ln105_fu_1638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then
                icmp_ln105_reg_2747_pp2_iter1_reg <= icmp_ln105_reg_2747;
                icmp_ln99_8_reg_2743_pp2_iter1_reg <= icmp_ln99_8_reg_2743;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln47_reg_2218 <= icmp_ln47_fu_703_p2;
                rev107_reg_2213 <= rev107_fu_697_p2;
                select_ln49_reg_2244_pp0_iter1_reg <= select_ln49_reg_2244;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln64_reg_2340 <= icmp_ln64_fu_987_p2;
                icmp_ln64_reg_2340_pp1_iter1_reg <= icmp_ln64_reg_2340;
                icmp_ln67_reg_2344_pp1_iter1_reg <= icmp_ln67_reg_2344;
                trunc_ln69_1_reg_2353_pp1_iter1_reg <= trunc_ln69_1_reg_2353;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln64_reg_2340_pp1_iter2_reg <= icmp_ln64_reg_2340_pp1_iter1_reg;
                icmp_ln67_reg_2344_pp1_iter2_reg <= icmp_ln67_reg_2344_pp1_iter1_reg;
                trunc_ln69_1_reg_2353_pp1_iter2_reg <= trunc_ln69_1_reg_2353_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_fu_987_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln67_reg_2344 <= icmp_ln67_fu_992_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln86_reg_2435 <= icmp_ln86_fu_1128_p2;
                icmp_ln86_reg_2435_pp2_iter1_reg <= icmp_ln86_reg_2435;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then
                icmp_ln99_7_reg_2687_pp2_iter1_reg <= icmp_ln99_7_reg_2687;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                icmp_ln99_8_reg_2743 <= icmp_ln99_8_fu_1634_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then
                kn_9_reg_600 <= ap_phi_reg_pp2_iter0_kn_9_reg_600;
                x_9_reg_588 <= ap_phi_reg_pp2_iter0_x_9_reg_588;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln99_6_reg_2671 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                lhs_6_reg_2840 <= featureMap_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_reg_2218 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln52_reg_2276 <= or_ln52_fu_883_p2;
                trunc_ln54_1_reg_2271 <= trunc_ln54_1_fu_844_p1;
                trunc_ln54_reg_2266 <= trunc_ln54_fu_840_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln61_fu_937_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                outMapXSize_reg_2326 <= outMapXSize_fu_961_p2;
                outMapYSize_reg_2320 <= outMapYSize_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln99_6_reg_2671 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln99_4_reg_2586 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln99_2_reg_2493 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln86_reg_2435 = ap_const_lv1_1)))) then
                reg_621 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (icmp_ln99_7_reg_2687 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln99_5_reg_2602 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_3_reg_2509 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln99_1_reg_2455 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln86_reg_2435 = ap_const_lv1_1)))) then
                reg_625 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln99_7_reg_2687 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln86_reg_2435 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln99_4_reg_2586 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2435 = ap_const_lv1_1)))) then
                reg_634 <= featureMap_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln100_reg_2546 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1))) then
                rhs_8_reg_2926 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_703_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln47_1_reg_2227 <= select_ln47_1_fu_728_p3;
                select_ln49_1_reg_2250 <= select_ln49_1_fu_774_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln99_1_reg_2455 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_1_reg_2565 <= trunc_ln102_1_fu_1346_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln99_2_reg_2493 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_2_reg_2576 <= trunc_ln102_2_fu_1355_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln99_3_reg_2509 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_3_reg_2650 <= trunc_ln102_3_fu_1487_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln99_4_reg_2586 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_4_reg_2660 <= trunc_ln102_4_fu_1495_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_5_reg_2602 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_5_reg_2733 <= trunc_ln102_5_fu_1622_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_6_reg_2671 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_6_reg_2738 <= trunc_ln102_6_fu_1626_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln99_7_reg_2687 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_7_reg_2797 <= trunc_ln102_7_fu_1721_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2546 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_8_reg_2850 <= trunc_ln102_8_fu_1806_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln99_reg_2439 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln102_reg_2483 <= trunc_ln102_fu_1228_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln64_reg_2340 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln64_reg_2358 <= trunc_ln64_fu_1006_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln67_fu_992_p2 = ap_const_lv1_0) and (icmp_ln64_fu_987_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln69_1_reg_2353 <= trunc_ln69_1_fu_1002_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (cmp92_reg_2404 = ap_const_lv1_1) and (icmp_ln105_reg_2747 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then
                trunc_ln69_2_reg_2904 <= trunc_ln69_2_fu_1881_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                y_3_reg_2299 <= y_3_fu_931_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                y_4_reg_2396 <= y_4_fu_1035_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln61_fu_937_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    zext_ln61_reg_2307(1 downto 0) <= zext_ln61_fu_943_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln61_reg_2307(17 downto 2) <= "0000000000000000";
    and99_cast_reg_2408(17 downto 2) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter0, icmp_ln64_fu_987_p2, ap_enable_reg_pp2_iter0, icmp_ln86_reg_2435, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage6, ap_enable_reg_pp0_iter0, icmp_ln47_fu_703_p2, ap_CS_fsm_state6, icmp_ln61_fu_937_p2, icmp_ln62_fu_971_p2, ap_CS_fsm_state7, ap_CS_fsm_state14, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln80_fu_1045_p2, icmp_ln83_fu_1122_p2, ap_CS_fsm_state15, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_block_pp2_stage2_subdone, ap_block_pp2_stage8_subdone, ap_block_pp2_stage6_subdone, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone, ap_block_pp2_stage3_subdone, ap_block_pp2_stage4_subdone, ap_block_pp2_stage5_subdone, ap_block_pp2_stage7_subdone, strm_in_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln47_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln47_fu_703_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln61_fu_937_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln62_fu_971_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln64_fu_987_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((icmp_ln64_fu_987_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln80_fu_1045_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln80_fu_1045_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln83_fu_1122_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln86_reg_2435 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln86_reg_2435 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_pp2_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                end if;
            when ap_ST_fsm_pp2_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                end if;
            when ap_ST_fsm_pp2_stage6 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                end if;
            when ap_ST_fsm_pp2_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                end if;
            when ap_ST_fsm_pp2_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage8;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    accum_V_10_fu_1863_p3 <= 
        accum_V_9_fu_1857_p3 when (icmp_ln99_2_reg_2493(0) = '1') else 
        accum_V_7_reg_2855;
    accum_V_12_fu_1889_p3 <= 
        grp_fu_2074_p3 when (and_ln101_2_fu_1885_p2(0) = '1') else 
        accum_V_10_reg_2882;
    accum_V_13_fu_1895_p3 <= 
        accum_V_12_fu_1889_p3 when (icmp_ln99_3_reg_2509(0) = '1') else 
        accum_V_10_reg_2882;
    accum_V_15_fu_1916_p3 <= 
        grp_fu_2090_p3 when (and_ln101_3_fu_1912_p2(0) = '1') else 
        accum_V_13_reg_2909;
    accum_V_16_fu_1922_p3 <= 
        accum_V_15_fu_1916_p3 when (icmp_ln99_4_reg_2586(0) = '1') else 
        accum_V_13_reg_2909;
    accum_V_18_fu_1940_p3 <= 
        grp_fu_2099_p3 when (and_ln101_4_fu_1936_p2(0) = '1') else 
        accum_V_16_reg_2931;
    accum_V_19_fu_1946_p3 <= 
        accum_V_18_fu_1940_p3 when (icmp_ln99_5_reg_2602(0) = '1') else 
        accum_V_16_reg_2931;
    accum_V_21_fu_1963_p3 <= 
        grp_fu_2108_p3 when (and_ln101_5_fu_1959_p2(0) = '1') else 
        accum_V_19_reg_2948;
    accum_V_22_fu_1969_p3 <= 
        accum_V_21_fu_1963_p3 when (icmp_ln99_6_reg_2671(0) = '1') else 
        accum_V_19_reg_2948;
    accum_V_24_fu_1979_p3 <= 
        grp_fu_2117_p3 when (and_ln101_6_fu_1975_p2(0) = '1') else 
        accum_V_22_reg_2965;
    accum_V_25_fu_1985_p3 <= 
        accum_V_24_fu_1979_p3 when (icmp_ln99_7_reg_2687_pp2_iter1_reg(0) = '1') else 
        accum_V_22_reg_2965;
    accum_V_27_fu_1996_p3 <= 
        grp_fu_2126_p3 when (icmp_ln100_reg_2546_pp2_iter1_reg(0) = '1') else 
        accum_V_25_reg_2972;
    accum_V_29_fu_2015_p3 <= 
        ap_const_lv8_0 when (and_ln113_fu_2010_p2(0) = '1') else 
        accum_V_27_fu_1996_p3;
    accum_V_3_fu_1767_p3 <= 
        grp_fu_2047_p3 when (and_ln100_fu_1763_p2(0) = '1') else 
        accum_V_load_reg_2761;
    accum_V_4_fu_1773_p3 <= 
        accum_V_3_fu_1767_p3 when (icmp_ln99_reg_2439(0) = '1') else 
        accum_V_load_reg_2761;
    accum_V_6_fu_1814_p3 <= 
        grp_fu_2056_p3 when (and_ln101_fu_1810_p2(0) = '1') else 
        accum_V_4_reg_2818;
    accum_V_7_fu_1820_p3 <= 
        accum_V_6_fu_1814_p3 when (icmp_ln99_1_reg_2455(0) = '1') else 
        accum_V_4_reg_2818;
    accum_V_9_fu_1857_p3 <= 
        grp_fu_2065_p3 when (and_ln101_1_fu_1853_p2(0) = '1') else 
        accum_V_7_reg_2855;
    add74_2_fu_1097_p2 <= (trunc_ln80_fu_1050_p1 xor ap_const_lv2_2);
    add98_fu_1063_p2 <= std_logic_vector(unsigned(trunc_ln80_fu_1050_p1) + unsigned(ap_const_lv2_3));
    add_ln102_10_fu_1603_p2 <= std_logic_vector(unsigned(trunc_ln102_4_reg_2660) + unsigned(ap_const_lv18_1));
    add_ln102_11_fu_1608_p2 <= std_logic_vector(unsigned(add_ln102_10_fu_1603_p2) + unsigned(add_ln102_9_reg_2665));
    add_ln102_12_fu_1688_p2 <= std_logic_vector(unsigned(trunc_ln102_5_reg_2733) + unsigned(ap_const_lv18_2));
    add_ln102_13_fu_1693_p2 <= std_logic_vector(unsigned(add_ln102_12_fu_1688_p2) + unsigned(add_ln102_9_reg_2665));
    add_ln102_14_fu_1707_p2 <= std_logic_vector(unsigned(mul_ln83_reg_2425) + unsigned(trunc_ln102_6_reg_2738));
    add_ln102_15_fu_1711_p2 <= std_logic_vector(unsigned(add_ln102_14_fu_1707_p2) + unsigned(trunc_ln36_reg_2537));
    add_ln102_16_fu_1725_p2 <= std_logic_vector(unsigned(mul_ln83_reg_2425) + unsigned(trunc_ln36_reg_2537));
    add_ln102_17_fu_1791_p2 <= std_logic_vector(unsigned(trunc_ln102_7_reg_2797) + unsigned(ap_const_lv18_1));
    add_ln102_18_fu_1796_p2 <= std_logic_vector(unsigned(add_ln102_17_fu_1791_p2) + unsigned(add_ln102_16_reg_2802));
    add_ln102_19_fu_1838_p2 <= std_logic_vector(unsigned(trunc_ln102_8_reg_2850) + unsigned(ap_const_lv18_2));
    add_ln102_1_fu_1335_p2 <= std_logic_vector(unsigned(add_ln102_fu_1331_p2) + unsigned(trunc_ln36_fu_1322_p1));
    add_ln102_20_fu_1843_p2 <= std_logic_vector(unsigned(add_ln102_19_fu_1838_p2) + unsigned(add_ln102_16_reg_2802));
    add_ln102_2_fu_1350_p2 <= std_logic_vector(unsigned(mul75_cast_reg_2413) + unsigned(trunc_ln36_fu_1322_p1));
    add_ln102_3_fu_1457_p2 <= std_logic_vector(unsigned(trunc_ln102_1_reg_2565) + unsigned(ap_const_lv18_1));
    add_ln102_4_fu_1462_p2 <= std_logic_vector(unsigned(add_ln102_3_fu_1457_p2) + unsigned(add_ln102_2_reg_2570));
    add_ln102_5_fu_1472_p2 <= std_logic_vector(unsigned(trunc_ln102_2_reg_2576) + unsigned(ap_const_lv18_2));
    add_ln102_6_fu_1477_p2 <= std_logic_vector(unsigned(add_ln102_5_fu_1472_p2) + unsigned(add_ln102_2_reg_2570));
    add_ln102_7_fu_1589_p2 <= std_logic_vector(unsigned(mul75_1_cast_reg_2419) + unsigned(trunc_ln102_3_reg_2650));
    add_ln102_8_fu_1593_p2 <= std_logic_vector(unsigned(add_ln102_7_fu_1589_p2) + unsigned(trunc_ln36_reg_2537));
    add_ln102_9_fu_1499_p2 <= std_logic_vector(unsigned(mul75_1_cast_reg_2419) + unsigned(trunc_ln36_reg_2537));
    add_ln102_fu_1331_p2 <= std_logic_vector(unsigned(mul75_cast_reg_2413) + unsigned(trunc_ln102_reg_2483));
    add_ln126_fu_1666_p2 <= std_logic_vector(signed(kn_8_reg_2698) + signed(ap_const_lv32_1));
    add_ln215_10_fu_1427_p2 <= std_logic_vector(unsigned(add_ln215_9_fu_1421_p2) + unsigned(ap_const_lv14_5));
    add_ln215_11_fu_1522_p2 <= std_logic_vector(unsigned(tmp_11_cast_fu_1515_p3) + unsigned(trunc_ln215_12_reg_2620));
    add_ln215_12_fu_1527_p2 <= std_logic_vector(unsigned(add_ln215_11_fu_1522_p2) + unsigned(ap_const_lv14_6));
    add_ln215_13_fu_1561_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_1553_p3) + unsigned(trunc_ln215_14_fu_1545_p1));
    add_ln215_14_fu_1567_p2 <= std_logic_vector(unsigned(add_ln215_13_fu_1561_p2) + unsigned(ap_const_lv14_7));
    add_ln215_15_fu_1747_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_1739_p3) + unsigned(trunc_ln215_16_fu_1733_p1));
    add_ln215_16_fu_1753_p2 <= std_logic_vector(unsigned(add_ln215_15_fu_1747_p2) + unsigned(ap_const_lv14_8));
    add_ln215_1_fu_1200_p2 <= std_logic_vector(unsigned(tmp_6_cast_fu_1192_p3) + unsigned(trunc_ln215_2_fu_1184_p1));
    add_ln215_2_fu_1206_p2 <= std_logic_vector(unsigned(add_ln215_1_fu_1200_p2) + unsigned(ap_const_lv14_1));
    add_ln215_3_fu_1255_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_1248_p3) + unsigned(trunc_ln215_4_reg_2473));
    add_ln215_4_fu_1260_p2 <= std_logic_vector(unsigned(add_ln215_3_fu_1255_p2) + unsigned(ap_const_lv14_2));
    add_ln215_5_fu_1294_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_1286_p3) + unsigned(trunc_ln215_6_fu_1278_p1));
    add_ln215_6_fu_1300_p2 <= std_logic_vector(unsigned(add_ln215_5_fu_1294_p2) + unsigned(ap_const_lv14_3));
    add_ln215_7_fu_1382_p2 <= std_logic_vector(unsigned(tmp_9_cast_fu_1375_p3) + unsigned(trunc_ln215_8_reg_2527));
    add_ln215_8_fu_1387_p2 <= std_logic_vector(unsigned(add_ln215_7_fu_1382_p2) + unsigned(ap_const_lv14_4));
    add_ln215_9_fu_1421_p2 <= std_logic_vector(unsigned(tmp_10_cast_fu_1413_p3) + unsigned(trunc_ln215_10_fu_1405_p1));
    add_ln215_fu_1160_p2 <= std_logic_vector(unsigned(tmp_5_cast_fu_1152_p3) + unsigned(trunc_ln215_fu_1144_p1));
    add_ln47_1_fu_682_p2 <= std_logic_vector(unsigned(indvar_flatten17_reg_418) + unsigned(ap_const_lv36_1));
    add_ln47_fu_708_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_phi_fu_433_p4) + unsigned(ap_const_lv32_1));
    add_ln49_1_fu_788_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_440) + unsigned(ap_const_lv4_1));
    add_ln49_fu_754_p2 <= std_logic_vector(unsigned(select_ln47_fu_720_p3) + unsigned(ap_const_lv2_1));
    add_ln50_fu_782_p2 <= std_logic_vector(unsigned(select_ln49_fu_766_p3) + unsigned(ap_const_lv2_1));
    add_ln54_1_fu_904_p2 <= std_logic_vector(unsigned(sub_ln54_1_fu_896_p2) + unsigned(zext_ln54_3_fu_901_p1));
    add_ln54_fu_834_p2 <= std_logic_vector(signed(sext_ln47_fu_822_p1) + signed(zext_ln54_2_fu_831_p1));
    add_ln67_fu_997_p2 <= std_logic_vector(unsigned(phi_mul_reg_518) + unsigned(trunc_ln70_reg_2285));
    and99_cast_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add98_fu_1063_p2),18));
    and_ln100_fu_1763_p2 <= (icmp_ln99_reg_2439 and icmp_ln100_reg_2546);
    and_ln101_1_fu_1853_p2 <= (icmp_ln99_2_reg_2493 and icmp_ln100_reg_2546);
    and_ln101_2_fu_1885_p2 <= (icmp_ln99_3_reg_2509 and icmp_ln100_reg_2546);
    and_ln101_3_fu_1912_p2 <= (icmp_ln99_4_reg_2586 and icmp_ln100_reg_2546);
    and_ln101_4_fu_1936_p2 <= (icmp_ln99_5_reg_2602 and icmp_ln100_reg_2546);
    and_ln101_5_fu_1959_p2 <= (icmp_ln99_6_reg_2671 and icmp_ln100_reg_2546_pp2_iter1_reg);
    and_ln101_6_fu_1975_p2 <= (icmp_ln99_7_reg_2687_pp2_iter1_reg and icmp_ln100_reg_2546_pp2_iter1_reg);
    and_ln101_fu_1810_p2 <= (icmp_ln99_1_reg_2455 and icmp_ln100_reg_2546);
    and_ln113_fu_2010_p1 <= (0=>relu, others=>'-');
    and_ln113_fu_2010_p2 <= (tmp_4_fu_2002_p3 and and_ln113_fu_2010_p1);
    and_ln47_fu_748_p2 <= (xor_ln47_fu_736_p2 and icmp_ln50_fu_742_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(11);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(13);
    ap_CS_fsm_pp2_stage4 <= ap_CS_fsm(14);
    ap_CS_fsm_pp2_stage5 <= ap_CS_fsm(15);
    ap_CS_fsm_pp2_stage6 <= ap_CS_fsm(16);
    ap_CS_fsm_pp2_stage7 <= ap_CS_fsm(17);
    ap_CS_fsm_pp2_stage8 <= ap_CS_fsm(18);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(6);
    ap_CS_fsm_state13 <= ap_CS_fsm(7);
    ap_CS_fsm_state14 <= ap_CS_fsm(8);
    ap_CS_fsm_state15 <= ap_CS_fsm(9);
    ap_CS_fsm_state32 <= ap_CS_fsm(19);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln52_reg_2276, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((or_ln52_reg_2276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln52_reg_2276, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((or_ln52_reg_2276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter0, ap_predicate_op169_read_state8, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op169_read_state8 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter0, ap_predicate_op169_read_state8, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op169_read_state8 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage5_01001_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op545_write_state30, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage5_01001 <= ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op545_write_state30 = ap_const_boolean_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage5_11001_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op545_write_state30, ap_block_state30_io, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage5_11001 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_io) or ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op545_write_state30 = ap_const_boolean_1))));
    end process;


    ap_block_pp2_stage5_subdone_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op545_write_state30, ap_block_state30_io, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage5_subdone <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_io) or ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op545_write_state30 = ap_const_boolean_1))));
    end process;

        ap_block_pp2_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage6_11001_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op547_write_state31, ap_block_state31_io, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage6_11001 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state31_io) or ((ap_predicate_op547_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp2_stage6_subdone_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op547_write_state31, ap_block_state31_io, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage6_subdone <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state31_io) or ((ap_predicate_op547_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp2_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage8_11001_assign_proc : process(ap_enable_reg_pp2_iter0, ap_predicate_op477_read_state24, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp2_stage8_11001 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_predicate_op477_read_state24 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp2_stage8_subdone_assign_proc : process(ap_enable_reg_pp2_iter0, ap_predicate_op477_read_state24, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp2_stage8_subdone <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_predicate_op477_read_state24 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state1_assign_proc : process(ap_start, strm_in_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_pp2_stage8_iter0_assign_proc : process(ap_predicate_op477_read_state24, strm_in_TVALID_int_regslice)
    begin
                ap_block_state24_pp2_stage8_iter0 <= ((ap_predicate_op477_read_state24 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state25_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_io_assign_proc : process(ap_predicate_op545_write_state30, strm_out_TREADY_int_regslice)
    begin
                ap_block_state30_io <= ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op545_write_state30 = ap_const_boolean_1));
    end process;


    ap_block_state30_pp2_stage5_iter1_assign_proc : process(ap_predicate_op545_write_state30, strm_out_TREADY_int_regslice)
    begin
                ap_block_state30_pp2_stage5_iter1 <= ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op545_write_state30 = ap_const_boolean_1));
    end process;


    ap_block_state31_io_assign_proc : process(ap_predicate_op547_write_state31, strm_out_TREADY_int_regslice)
    begin
                ap_block_state31_io <= ((ap_predicate_op547_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state31_pp2_stage6_iter1_assign_proc : process(ap_predicate_op547_write_state31, strm_out_TREADY_int_regslice)
    begin
                ap_block_state31_pp2_stage6_iter1 <= ((ap_predicate_op547_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(or_ln52_reg_2276, strm_in_TVALID_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((or_ln52_reg_2276 = ap_const_lv1_0) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_pp1_stage0_iter0_assign_proc : process(ap_predicate_op169_read_state8, strm_in_TVALID_int_regslice)
    begin
                ap_block_state8_pp1_stage0_iter0 <= ((ap_predicate_op169_read_state8 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2060_assign_proc : process(ap_enable_reg_pp2_iter0, icmp_ln86_reg_2435, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
                ap_condition_2060 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2435 = ap_const_lv1_1));
    end process;


    ap_condition_454_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
                ap_condition_454 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln47_fu_703_p2)
    begin
        if ((icmp_ln47_fu_703_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln64_fu_987_p2)
    begin
        if ((icmp_ln64_fu_987_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state18_assign_proc : process(icmp_ln86_reg_2435)
    begin
        if ((icmp_ln86_reg_2435 = ap_const_lv1_0)) then 
            ap_condition_pp2_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state14, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln80_fu_1045_p2)
    begin
        if (((icmp_ln80_fu_1045_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_kn_phi_fu_569_p4_assign_proc : process(icmp_ln86_reg_2435, ap_enable_reg_pp2_iter1, kn_reg_565, kn_9_reg_600, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1))) then 
            ap_phi_mux_kn_phi_fu_569_p4 <= kn_9_reg_600;
        else 
            ap_phi_mux_kn_phi_fu_569_p4 <= kn_reg_565;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_433_p4_assign_proc : process(ap_block_pp0_stage0, n_reg_429, ap_CS_fsm_pp0_stage0, icmp_ln47_reg_2218, select_ln47_1_reg_2227, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln47_reg_2218 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_n_phi_fu_433_p4 <= select_ln47_1_reg_2227;
        else 
            ap_phi_mux_n_phi_fu_433_p4 <= n_reg_429;
        end if; 
    end process;


    ap_phi_mux_x_3_phi_fu_510_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, x_3_reg_507, x_7_reg_529, icmp_ln64_reg_2340, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln64_reg_2340 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_x_3_phi_fu_510_p4 <= x_7_reg_529;
        else 
            ap_phi_mux_x_3_phi_fu_510_p4 <= x_3_reg_507;
        end if; 
    end process;


    ap_phi_mux_x_5_phi_fu_580_p4_assign_proc : process(ap_enable_reg_pp2_iter1, x_5_reg_577, x_9_reg_588, ap_CS_fsm_pp2_stage2, icmp_ln86_reg_2435_pp2_iter1_reg, ap_block_pp2_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage2) and (icmp_ln86_reg_2435_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_x_5_phi_fu_580_p4 <= x_9_reg_588;
        else 
            ap_phi_mux_x_5_phi_fu_580_p4 <= x_5_reg_577;
        end if; 
    end process;


    ap_phi_mux_y_1_phi_fu_455_p4_assign_proc : process(ap_block_pp0_stage0, y_1_reg_451, ap_CS_fsm_pp0_stage0, icmp_ln47_reg_2218, select_ln49_1_reg_2250, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln47_reg_2218 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_y_1_phi_fu_455_p4 <= select_ln49_1_reg_2250;
        else 
            ap_phi_mux_y_1_phi_fu_455_p4 <= y_1_reg_451;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_x_7_reg_529 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op169_read_state8_assign_proc : process(icmp_ln64_fu_987_p2, icmp_ln67_fu_992_p2)
    begin
                ap_predicate_op169_read_state8 <= ((icmp_ln67_fu_992_p2 = ap_const_lv1_0) and (icmp_ln64_fu_987_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op477_read_state24_assign_proc : process(icmp_ln86_reg_2435, icmp_ln99_8_reg_2743, icmp_ln105_reg_2747, cmp92_reg_2404)
    begin
                ap_predicate_op477_read_state24 <= ((cmp92_reg_2404 = ap_const_lv1_1) and (icmp_ln105_reg_2747 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1));
    end process;


    ap_predicate_op545_write_state30_assign_proc : process(icmp_ln99_8_reg_2743_pp2_iter1_reg, icmp_ln105_reg_2747_pp2_iter1_reg, icmp_ln100_reg_2546_pp2_iter1_reg)
    begin
                ap_predicate_op545_write_state30 <= ((icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op547_write_state31_assign_proc : process(icmp_ln99_8_reg_2743_pp2_iter1_reg, icmp_ln105_reg_2747_pp2_iter1_reg, icmp_ln100_reg_2546_pp2_iter1_reg)
    begin
                ap_predicate_op547_write_state31 <= ((icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln80_fu_1045_p2)
    begin
        if (((icmp_ln80_fu_1045_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_accum_V_load_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_enable_reg_pp2_iter1, ap_block_pp2_stage5, icmp_ln99_8_reg_2743_pp2_iter1_reg, icmp_ln105_reg_2747_pp2_iter1_reg, icmp_ln100_reg_2546_pp2_iter1_reg, accum_V_fu_192, accum_V_27_fu_1996_p3, accum_V_29_fu_2015_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_accum_V_load <= accum_V_29_fu_2015_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
            ap_sig_allocacmp_accum_V_load <= accum_V_27_fu_1996_p3;
        else 
            ap_sig_allocacmp_accum_V_load <= accum_V_fu_192;
        end if; 
    end process;

    bias_V_fu_650_p1 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);
    bound4_fu_670_p2 <= std_logic_vector(unsigned(p_shl_fu_666_p1) + unsigned(cast2_fu_654_p1));
    cast2_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernelN),36));
    cmp22_not_mid113_fu_676_p2 <= "1" when (signed(kernelSize) < signed(ap_const_lv32_1)) else "0";
    cmp92_fu_1058_p2 <= "1" when (signed(zext_ln80_fu_1054_p1) < signed(sub91_reg_2378)) else "0";
        conv69_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapXSize_reg_2326),32));

        conv_i38_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_V_reg_2193),8));

    empty_16_fu_642_p1 <= kernelSize(16 - 1 downto 0);
    empty_17_fu_646_p0 <= mapSizeY;
    empty_17_fu_646_p1 <= empty_17_fu_646_p0(16 - 1 downto 0);
    empty_20_fu_928_p0 <= mapSizeX;
    empty_20_fu_928_p1 <= empty_20_fu_928_p0(18 - 1 downto 0);
    empty_23_fu_1759_p1 <= grp_fu_1643_p2(18 - 1 downto 0);
    empty_fu_638_p0 <= mapSizeX;
    empty_fu_638_p1 <= empty_fu_638_p0(16 - 1 downto 0);

    featureMap_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage5, ap_enable_reg_pp2_iter1, ap_block_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp1_iter3, ap_block_pp2_stage0, ap_block_pp2_stage2, zext_ln70_fu_1010_p1, zext_ln102_fu_1341_p1, ap_block_pp2_stage3, zext_ln102_2_fu_1482_p1, ap_block_pp2_stage4, zext_ln102_4_fu_1613_p1, zext_ln102_6_fu_1716_p1, zext_ln102_7_fu_1801_p1, ap_block_pp2_stage7, zext_ln102_8_fu_1848_p1, zext_ln109_fu_1908_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            featureMap_V_address0 <= zext_ln109_fu_1908_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
            featureMap_V_address0 <= zext_ln102_8_fu_1848_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6))) then 
            featureMap_V_address0 <= zext_ln102_7_fu_1801_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then 
            featureMap_V_address0 <= zext_ln102_6_fu_1716_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then 
            featureMap_V_address0 <= zext_ln102_4_fu_1613_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
            featureMap_V_address0 <= zext_ln102_2_fu_1482_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
            featureMap_V_address0 <= zext_ln102_fu_1341_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            featureMap_V_address0 <= zext_ln70_fu_1010_p1(18 - 1 downto 0);
        else 
            featureMap_V_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    featureMap_V_address1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage4, zext_ln102_1_fu_1467_p1, ap_block_pp2_stage3, zext_ln102_3_fu_1598_p1, ap_block_pp2_stage4, zext_ln102_5_fu_1698_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then 
                featureMap_V_address1 <= zext_ln102_5_fu_1698_p1(18 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then 
                featureMap_V_address1 <= zext_ln102_3_fu_1598_p1(18 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
                featureMap_V_address1 <= zext_ln102_1_fu_1467_p1(18 - 1 downto 0);
            else 
                featureMap_V_address1 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            featureMap_V_address1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    featureMap_V_ce0_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage5, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage6_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            featureMap_V_ce0 <= ap_const_logic_1;
        else 
            featureMap_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    featureMap_V_ce1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            featureMap_V_ce1 <= ap_const_logic_1;
        else 
            featureMap_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    featureMap_V_d0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp2_iter1, trunc_ln69_1_reg_2353_pp1_iter2_reg, ap_CS_fsm_pp2_stage0, trunc_ln69_2_reg_2904, ap_enable_reg_pp1_iter3, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            featureMap_V_d0 <= trunc_ln69_2_reg_2904;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            featureMap_V_d0 <= trunc_ln69_1_reg_2353_pp1_iter2_reg;
        else 
            featureMap_V_d0 <= "XXXX";
        end if; 
    end process;


    featureMap_V_we0_assign_proc : process(icmp_ln99_8_reg_2743, icmp_ln105_reg_2747, cmp92_reg_2404, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_11001, icmp_ln64_reg_2340_pp1_iter2_reg, icmp_ln67_reg_2344_pp1_iter2_reg, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (cmp92_reg_2404 = ap_const_lv1_1) and (icmp_ln105_reg_2747 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln67_reg_2344_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln64_reg_2340_pp1_iter2_reg = ap_const_lv1_1)))) then 
            featureMap_V_we0 <= ap_const_logic_1;
        else 
            featureMap_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_V_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage8, ap_enable_reg_pp2_iter0, ap_block_pp2_stage8, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6, ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_block_pp2_stage2, zext_ln54_4_fu_910_p1, zext_ln215_fu_1166_p1, zext_ln215_1_fu_1236_p1, ap_block_pp2_stage1, zext_ln215_2_fu_1359_p1, ap_block_pp2_stage3, zext_ln215_3_fu_1491_p1, ap_block_pp2_stage4, zext_ln215_4_fu_1618_p1, zext_ln215_5_fu_1703_p1, zext_ln215_6_fu_1787_p1, zext_ln215_7_fu_1834_p1, ap_block_pp2_stage7, zext_ln215_8_fu_1877_p1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8))) then 
            filter_V_address0 <= zext_ln215_8_fu_1877_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
            filter_V_address0 <= zext_ln215_7_fu_1834_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6))) then 
            filter_V_address0 <= zext_ln215_6_fu_1787_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then 
            filter_V_address0 <= zext_ln215_5_fu_1703_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then 
            filter_V_address0 <= zext_ln215_4_fu_1618_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
            filter_V_address0 <= zext_ln215_3_fu_1491_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
            filter_V_address0 <= zext_ln215_2_fu_1359_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            filter_V_address0 <= zext_ln215_1_fu_1236_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_V_address0 <= zext_ln215_fu_1166_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filter_V_address0 <= zext_ln54_4_fu_910_p1(14 - 1 downto 0);
        else 
            filter_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    filter_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp2_stage8, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage6_11001, ap_block_pp2_stage8_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            filter_V_ce0 <= ap_const_logic_1;
        else 
            filter_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_V_d0 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);

    filter_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln52_reg_2276, ap_block_pp0_stage0_11001)
    begin
        if (((or_ln52_reg_2276 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filter_V_we0 <= ap_const_logic_1;
        else 
            filter_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1139_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1139_ce <= ap_const_logic_1;
        else 
            grp_fu_1139_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1232_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1232_ce <= ap_const_logic_1;
        else 
            grp_fu_1232_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1244_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1244_ce <= ap_const_logic_1;
        else 
            grp_fu_1244_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1363_ce_assign_proc : process(ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            grp_fu_1363_ce <= ap_const_logic_1;
        else 
            grp_fu_1363_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1371_ce_assign_proc : process(ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            grp_fu_1371_ce <= ap_const_logic_1;
        else 
            grp_fu_1371_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1503_ce_assign_proc : process(ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            grp_fu_1503_ce <= ap_const_logic_1;
        else 
            grp_fu_1503_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1511_ce_assign_proc : process(ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            grp_fu_1511_ce <= ap_const_logic_1;
        else 
            grp_fu_1511_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1630_ce_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)))) then 
            grp_fu_1630_ce <= ap_const_logic_1;
        else 
            grp_fu_1630_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1643_ce_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)))) then 
            grp_fu_1643_ce <= ap_const_logic_1;
        else 
            grp_fu_1643_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1729_ce_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage5_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)))) then 
            grp_fu_1729_ce <= ap_const_logic_1;
        else 
            grp_fu_1729_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2039_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_2039_ce <= ap_const_logic_1;
        else 
            grp_fu_2039_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2039_p1 <= zext_ln61_reg_2307(2 - 1 downto 0);

    grp_fu_2047_ce_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            grp_fu_2047_ce <= ap_const_logic_1;
        else 
            grp_fu_2047_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2047_p2 <= 
        conv_i38_reg_2373 when (icmp_ln100_reg_2546(0) = '1') else 
        ap_sig_allocacmp_accum_V_load;

    grp_fu_2056_ce_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)))) then 
            grp_fu_2056_ce <= ap_const_logic_1;
        else 
            grp_fu_2056_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2056_p2 <= 
        accum_V_3_fu_1767_p3 when (icmp_ln99_reg_2439(0) = '1') else 
        accum_V_load_reg_2761;

    grp_fu_2065_ce_assign_proc : process(ap_CS_fsm_pp2_stage8, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_block_pp2_stage6_11001, ap_block_pp2_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)))) then 
            grp_fu_2065_ce <= ap_const_logic_1;
        else 
            grp_fu_2065_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2065_p2 <= 
        accum_V_6_fu_1814_p3 when (icmp_ln99_1_reg_2455(0) = '1') else 
        accum_V_4_reg_2818;

    grp_fu_2074_ce_assign_proc : process(ap_CS_fsm_pp2_stage8, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_block_pp2_stage6_11001, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)))) then 
            grp_fu_2074_ce <= ap_const_logic_1;
        else 
            grp_fu_2074_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2074_p2 <= 
        accum_V_9_fu_1857_p3 when (icmp_ln99_2_reg_2493(0) = '1') else 
        accum_V_7_reg_2855;

    grp_fu_2083_ce_assign_proc : process(ap_CS_fsm_pp2_stage8, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_block_pp2_stage6_11001, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)))) then 
            grp_fu_2083_ce <= ap_const_logic_1;
        else 
            grp_fu_2083_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2083_p1 <= and99_cast_reg_2408(2 - 1 downto 0);

    grp_fu_2090_ce_assign_proc : process(ap_CS_fsm_pp2_stage8, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2090_ce <= ap_const_logic_1;
        else 
            grp_fu_2090_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2090_p2 <= 
        accum_V_12_fu_1889_p3 when (icmp_ln99_3_reg_2509(0) = '1') else 
        accum_V_10_reg_2882;

    grp_fu_2099_ce_assign_proc : process(ap_CS_fsm_pp2_stage8, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2099_ce <= ap_const_logic_1;
        else 
            grp_fu_2099_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2099_p2 <= 
        accum_V_15_fu_1916_p3 when (icmp_ln99_4_reg_2586(0) = '1') else 
        accum_V_13_reg_2909;

    grp_fu_2108_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2108_ce <= ap_const_logic_1;
        else 
            grp_fu_2108_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2108_p2 <= 
        accum_V_18_fu_1940_p3 when (icmp_ln99_5_reg_2602(0) = '1') else 
        accum_V_16_reg_2931;

    grp_fu_2117_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2117_ce <= ap_const_logic_1;
        else 
            grp_fu_2117_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2117_p2 <= 
        accum_V_21_fu_1963_p3 when (icmp_ln99_6_reg_2671(0) = '1') else 
        accum_V_19_reg_2948;

    grp_fu_2126_ce_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)))) then 
            grp_fu_2126_ce <= ap_const_logic_1;
        else 
            grp_fu_2126_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2126_p2 <= 
        accum_V_24_fu_1979_p3 when (icmp_ln99_7_reg_2687_pp2_iter1_reg(0) = '1') else 
        accum_V_22_reg_2965;
    icmp_ln100_fu_1326_p2 <= "1" when (signed(ap_phi_mux_x_5_phi_fu_580_p4) < signed(conv69_reg_2368)) else "0";
    icmp_ln105_fu_1638_p1 <= mapSizeX;
    icmp_ln105_fu_1638_p2 <= "1" when (signed(x_5_reg_577) < signed(icmp_ln105_fu_1638_p1)) else "0";
    icmp_ln122_fu_1647_p1 <= mapSizeX;
    icmp_ln122_fu_1647_p2 <= "1" when (signed(x_5_reg_577) < signed(icmp_ln122_fu_1647_p1)) else "0";
    icmp_ln47_fu_703_p2 <= "1" when (indvar_flatten17_reg_418 = bound4_reg_2198) else "0";
    icmp_ln49_fu_714_p2 <= "1" when (indvar_flatten_reg_440 = ap_const_lv4_9) else "0";
    icmp_ln50_fu_742_p2 <= "1" when (x_1_reg_462 = ap_const_lv2_3) else "0";
    icmp_ln52_fu_872_p2 <= "1" when (signed(zext_ln50_fu_869_p1) < signed(kernelSize)) else "0";
    icmp_ln61_fu_937_p2 <= "1" when (y_reg_473 = ap_const_lv2_3) else "0";
    icmp_ln62_fu_971_p2 <= "1" when (signed(x_reg_484) < signed(ap_const_lv32_2A)) else "0";
    icmp_ln64_fu_987_p2 <= "1" when (signed(zext_ln64_fu_983_p1) < signed(kernelN)) else "0";
    icmp_ln67_fu_992_p2 <= "1" when (signed(ap_phi_mux_x_3_phi_fu_510_p4) > signed(sub_reg_2280)) else "0";
    icmp_ln80_fu_1045_p2 <= "1" when (signed(zext_ln80_1_fu_1041_p1) < signed(outMapYSize_reg_2320)) else "0";
    icmp_ln83_fu_1122_p2 <= "1" when (signed(tmp_2_fu_1112_p4) < signed(ap_const_lv22_1)) else "0";
    icmp_ln86_fu_1128_p2 <= "1" when (signed(ap_phi_mux_kn_phi_fu_569_p4) < signed(ap_const_lv32_600)) else "0";
    icmp_ln99_1_fu_1179_p2 <= "1" when (signed(kn_1_fu_1171_p3) < signed(kernelN)) else "0";
    icmp_ln99_2_fu_1240_p2 <= "1" when (signed(kn_2_reg_2466) < signed(kernelN)) else "0";
    icmp_ln99_3_fu_1273_p2 <= "1" when (signed(kn_3_fu_1266_p3) < signed(kernelN)) else "0";
    icmp_ln99_4_fu_1367_p2 <= "1" when (signed(kn_4_reg_2520) < signed(kernelN)) else "0";
    icmp_ln99_5_fu_1400_p2 <= "1" when (signed(kn_5_fu_1393_p3) < signed(kernelN)) else "0";
    icmp_ln99_6_fu_1507_p2 <= "1" when (signed(kn_6_reg_2613) < signed(kernelN)) else "0";
    icmp_ln99_7_fu_1540_p2 <= "1" when (signed(kn_7_fu_1533_p3) < signed(kernelN)) else "0";
    icmp_ln99_8_fu_1634_p2 <= "1" when (signed(kn_8_reg_2698) < signed(kernelN)) else "0";
    icmp_ln99_fu_1134_p2 <= "1" when (signed(ap_phi_mux_kn_phi_fu_569_p4) < signed(kernelN)) else "0";
    kn_1_fu_1171_p3 <= 
        ap_phi_mux_kn_phi_fu_569_p4 when (icmp_ln99_fu_1134_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_2_fu_1212_p3 <= 
        kn_1_fu_1171_p3 when (icmp_ln99_1_fu_1179_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_3_fu_1266_p3 <= 
        kn_2_reg_2466 when (icmp_ln99_2_fu_1240_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_4_fu_1306_p3 <= 
        kn_3_fu_1266_p3 when (icmp_ln99_3_fu_1273_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_5_fu_1393_p3 <= 
        kn_4_reg_2520 when (icmp_ln99_4_fu_1367_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_6_fu_1433_p3 <= 
        kn_5_fu_1393_p3 when (icmp_ln99_5_fu_1400_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_7_fu_1533_p3 <= 
        kn_6_reg_2613 when (icmp_ln99_6_fu_1507_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_8_fu_1573_p3 <= 
        kn_7_fu_1533_p3 when (icmp_ln99_7_fu_1540_p2(0) = '1') else 
        ap_const_lv32_600;
    mul75_1_cast_fu_1092_p0 <= mul75_1_cast_fu_1092_p00(2 - 1 downto 0);
    mul75_1_cast_fu_1092_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_4_cast_fu_1082_p2),18));
    mul75_cast_fu_1077_p0 <= mul75_cast_fu_1077_p00(2 - 1 downto 0);
    mul75_cast_fu_1077_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln80_fu_1050_p1),18));
    mul_ln83_fu_1107_p0 <= mul_ln83_fu_1107_p00(2 - 1 downto 0);
    mul_ln83_fu_1107_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add74_2_fu_1097_p2),18));
    n_2_fu_977_p2 <= std_logic_vector(unsigned(n_1_reg_496) + unsigned(ap_const_lv31_1));
    or_ln49_fu_760_p2 <= (icmp_ln49_fu_714_p2 or and_ln47_fu_748_p2);
    or_ln52_fu_883_p2 <= (xor_ln52_fu_877_p2 or select_ln49_2_fu_862_p3);
    outMapXSize_fu_961_p2 <= std_logic_vector(unsigned(sub_ln78_fu_957_p2) + unsigned(ap_const_lv16_1));
        outMapYSize_cast_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapYSize_reg_2320),17));

    outMapYSize_fu_951_p2 <= std_logic_vector(unsigned(sub_ln77_fu_947_p2) + unsigned(ap_const_lv16_1));
    p_shl1_cast_fu_889_p3 <= (trunc_ln54_1_reg_2271 & ap_const_lv2_0);
    p_shl_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_658_p3),36));
    rev107_fu_697_p2 <= (slt_fu_692_p2 xor ap_const_lv1_1);
    rev109_fu_856_p2 <= (slt108_fu_851_p2 xor ap_const_lv1_1);
    select_ln47_1_fu_728_p3 <= 
        add_ln47_fu_708_p2 when (icmp_ln49_fu_714_p2(0) = '1') else 
        ap_phi_mux_n_phi_fu_433_p4;
    select_ln47_2_fu_826_p3 <= 
        cmp22_not_mid113_reg_2203 when (icmp_ln49_reg_2222(0) = '1') else 
        rev107_reg_2213;
    select_ln47_fu_720_p3 <= 
        ap_const_lv2_0 when (icmp_ln49_fu_714_p2(0) = '1') else 
        ap_phi_mux_y_1_phi_fu_455_p4;
    select_ln49_1_fu_774_p3 <= 
        add_ln49_fu_754_p2 when (and_ln47_fu_748_p2(0) = '1') else 
        select_ln47_fu_720_p3;
    select_ln49_2_fu_862_p3 <= 
        rev109_fu_856_p2 when (and_ln47_reg_2234(0) = '1') else 
        select_ln47_2_fu_826_p3;
    select_ln49_3_fu_794_p3 <= 
        ap_const_lv4_1 when (icmp_ln49_fu_714_p2(0) = '1') else 
        add_ln49_1_fu_788_p2;
    select_ln49_fu_766_p3 <= 
        ap_const_lv2_0 when (or_ln49_fu_760_p2(0) = '1') else 
        x_1_reg_462;
        sext_ln47_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln54_fu_816_p2),36));

    slt108_fu_851_p2 <= "1" when (signed(zext_ln49_1_fu_848_p1) < signed(kernelSize)) else "0";
    slt_fu_692_p2 <= "1" when (signed(zext_ln49_fu_688_p1) < signed(kernelSize)) else "0";

    strm_in_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_ln52_reg_2276, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, icmp_ln64_fu_987_p2, icmp_ln67_fu_992_p2, ap_CS_fsm_pp2_stage8, ap_enable_reg_pp2_iter0, ap_block_pp2_stage8, icmp_ln86_reg_2435, icmp_ln99_8_reg_2743, icmp_ln105_reg_2747, cmp92_reg_2404, strm_in_TVALID_int_regslice)
    begin
        if ((((icmp_ln67_fu_992_p2 = ap_const_lv1_0) and (icmp_ln64_fu_987_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((or_ln52_reg_2276 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (cmp92_reg_2404 = ap_const_lv1_1) and (icmp_ln105_reg_2747 = ap_const_lv1_1) and (icmp_ln99_8_reg_2743 = ap_const_lv1_1) and (icmp_ln86_reg_2435 = ap_const_lv1_1)))) then 
            strm_in_TDATA_blk_n <= strm_in_TVALID_int_regslice;
        else 
            strm_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_TREADY <= regslice_both_strm_in_V_data_V_U_ack_in;

    strm_in_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, or_ln52_reg_2276, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage8, ap_enable_reg_pp2_iter0, ap_predicate_op477_read_state24, ap_block_pp2_stage8_11001, ap_block_pp0_stage0_11001, ap_predicate_op169_read_state8, ap_block_pp1_stage0_11001, strm_in_TVALID_int_regslice)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op169_read_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((or_ln52_reg_2276 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_predicate_op477_read_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)))) then 
            strm_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            strm_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_enable_reg_pp2_iter1, ap_block_pp2_stage5, icmp_ln99_8_reg_2743_pp2_iter1_reg, icmp_ln105_reg_2747_pp2_iter1_reg, icmp_ln100_reg_2546_pp2_iter1_reg, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6, strm_out_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln100_reg_2546_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2747_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2743_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
            strm_out_TDATA_blk_n <= strm_out_TREADY_int_regslice;
        else 
            strm_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        strm_out_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(signed(accum_V_29_fu_2015_p3),32));

    strm_out_TVALID <= regslice_both_strm_out_V_data_V_U_vld_out;

    strm_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp2_stage5, ap_enable_reg_pp2_iter1, ap_predicate_op545_write_state30, ap_block_pp2_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_predicate_op545_write_state30 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            strm_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            strm_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub91_fu_1029_p2 <= std_logic_vector(signed(outMapYSize_cast_fu_1020_p1) + signed(ap_const_lv17_1FFFF));
    sub_fu_920_p0 <= mapSizeX;
    sub_fu_920_p2 <= std_logic_vector(signed(sub_fu_920_p0) + signed(ap_const_lv32_FFFFFFFF));
    sub_ln54_1_fu_896_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_889_p3) - unsigned(trunc_ln54_reg_2266));
    sub_ln54_fu_816_p2 <= std_logic_vector(unsigned(zext_ln54_1_fu_812_p1) - unsigned(zext_ln54_fu_802_p1));
    sub_ln77_fu_947_p2 <= std_logic_vector(unsigned(empty_17_reg_2188) - unsigned(empty_16_reg_2182));
    sub_ln78_fu_957_p2 <= std_logic_vector(unsigned(empty_reg_2177) - unsigned(empty_16_reg_2182));
    tmp_10_cast_fu_1413_p3 <= (trunc_ln215_11_fu_1409_p1 & ap_const_lv3_0);
    tmp_11_cast_fu_1515_p3 <= (trunc_ln215_13_reg_2625 & ap_const_lv3_0);
    tmp_12_cast_fu_1553_p3 <= (trunc_ln215_15_fu_1549_p1 & ap_const_lv3_0);
    tmp_13_cast_fu_1739_p3 <= (trunc_ln215_17_fu_1736_p1 & ap_const_lv3_0);
    tmp_1_fu_658_p3 <= (kernelN & ap_const_lv3_0);
    tmp_2_fu_1112_p4 <= x_2_reg_553(31 downto 10);
    tmp_3_fu_805_p3 <= (select_ln47_1_reg_2227 & ap_const_lv2_0);
    tmp_4_fu_2002_p3 <= accum_V_27_fu_1996_p3(7 downto 7);
    tmp_5_cast_fu_1152_p3 <= (trunc_ln215_1_fu_1148_p1 & ap_const_lv3_0);
    tmp_6_cast_fu_1192_p3 <= (trunc_ln215_3_fu_1188_p1 & ap_const_lv3_0);
    tmp_7_cast_fu_1248_p3 <= (trunc_ln215_5_reg_2478 & ap_const_lv3_0);
    tmp_8_cast_fu_1286_p3 <= (trunc_ln215_7_fu_1282_p1 & ap_const_lv3_0);
    tmp_9_cast_fu_1375_p3 <= (trunc_ln215_9_reg_2532 & ap_const_lv3_0);
    trunc_ln102_1_fu_1346_p1 <= grp_fu_1232_p2(18 - 1 downto 0);
    trunc_ln102_2_fu_1355_p1 <= grp_fu_1244_p2(18 - 1 downto 0);
    trunc_ln102_3_fu_1487_p1 <= grp_fu_1363_p2(18 - 1 downto 0);
    trunc_ln102_4_fu_1495_p1 <= grp_fu_1371_p2(18 - 1 downto 0);
    trunc_ln102_5_fu_1622_p1 <= grp_fu_1503_p2(18 - 1 downto 0);
    trunc_ln102_6_fu_1626_p1 <= grp_fu_1511_p2(18 - 1 downto 0);
    trunc_ln102_7_fu_1721_p1 <= grp_fu_1630_p2(18 - 1 downto 0);
    trunc_ln102_8_fu_1806_p1 <= grp_fu_1729_p2(18 - 1 downto 0);
    trunc_ln102_fu_1228_p1 <= grp_fu_1139_p2(18 - 1 downto 0);
    trunc_ln215_10_fu_1405_p1 <= kn_5_fu_1393_p3(14 - 1 downto 0);
    trunc_ln215_11_fu_1409_p1 <= kn_5_fu_1393_p3(11 - 1 downto 0);
    trunc_ln215_12_fu_1441_p1 <= kn_6_fu_1433_p3(14 - 1 downto 0);
    trunc_ln215_13_fu_1445_p1 <= kn_6_fu_1433_p3(11 - 1 downto 0);
    trunc_ln215_14_fu_1545_p1 <= kn_7_fu_1533_p3(14 - 1 downto 0);
    trunc_ln215_15_fu_1549_p1 <= kn_7_fu_1533_p3(11 - 1 downto 0);
    trunc_ln215_16_fu_1733_p1 <= kn_8_reg_2698(14 - 1 downto 0);
    trunc_ln215_17_fu_1736_p1 <= kn_8_reg_2698(11 - 1 downto 0);
    trunc_ln215_1_fu_1148_p1 <= ap_phi_mux_kn_phi_fu_569_p4(11 - 1 downto 0);
    trunc_ln215_2_fu_1184_p1 <= kn_1_fu_1171_p3(14 - 1 downto 0);
    trunc_ln215_3_fu_1188_p1 <= kn_1_fu_1171_p3(11 - 1 downto 0);
    trunc_ln215_4_fu_1220_p1 <= kn_2_fu_1212_p3(14 - 1 downto 0);
    trunc_ln215_5_fu_1224_p1 <= kn_2_fu_1212_p3(11 - 1 downto 0);
    trunc_ln215_6_fu_1278_p1 <= kn_3_fu_1266_p3(14 - 1 downto 0);
    trunc_ln215_7_fu_1282_p1 <= kn_3_fu_1266_p3(11 - 1 downto 0);
    trunc_ln215_8_fu_1314_p1 <= kn_4_fu_1306_p3(14 - 1 downto 0);
    trunc_ln215_9_fu_1318_p1 <= kn_4_fu_1306_p3(11 - 1 downto 0);
    trunc_ln215_fu_1144_p1 <= ap_phi_mux_kn_phi_fu_569_p4(14 - 1 downto 0);
    trunc_ln36_fu_1322_p1 <= ap_phi_mux_x_5_phi_fu_580_p4(18 - 1 downto 0);
    trunc_ln54_1_fu_844_p1 <= add_ln54_fu_834_p2(12 - 1 downto 0);
    trunc_ln54_fu_840_p1 <= add_ln54_fu_834_p2(14 - 1 downto 0);
    trunc_ln64_fu_1006_p1 <= x_3_reg_507(18 - 1 downto 0);
    trunc_ln69_1_fu_1002_p1 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln69_2_fu_1881_p1 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln70_fu_925_p0 <= mapSizeY;
    trunc_ln70_fu_925_p1 <= trunc_ln70_fu_925_p0(18 - 1 downto 0);
    trunc_ln80_fu_1050_p1 <= y_2_reg_542(2 - 1 downto 0);
    x_4_fu_1014_p2 <= std_logic_vector(unsigned(x_3_reg_507) + unsigned(ap_const_lv32_1));
    x_6_fu_2033_p2 <= std_logic_vector(unsigned(x_5_reg_577) + unsigned(ap_const_lv32_1));
    x_8_fu_1658_p3 <= 
        ap_const_lv32_400 when (xor_ln122_fu_1652_p2(0) = '1') else 
        x_5_reg_577;
    xor_ln122_fu_1652_p2 <= (icmp_ln122_fu_1647_p2 xor ap_const_lv1_1);
    xor_ln47_fu_736_p2 <= (icmp_ln49_fu_714_p2 xor ap_const_lv1_1);
    xor_ln52_fu_877_p2 <= (icmp_ln52_fu_872_p2 xor ap_const_lv1_1);
    y_3_fu_931_p2 <= std_logic_vector(unsigned(y_reg_473) + unsigned(ap_const_lv2_1));
    y_4_cast_fu_1082_p2 <= std_logic_vector(unsigned(trunc_ln80_fu_1050_p1) + unsigned(ap_const_lv2_1));
    y_4_fu_1035_p2 <= std_logic_vector(unsigned(y_2_reg_542) + unsigned(ap_const_lv15_1));
    zext_ln102_1_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_4_fu_1462_p2),64));
    zext_ln102_2_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_6_fu_1477_p2),64));
    zext_ln102_3_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_8_fu_1593_p2),64));
    zext_ln102_4_fu_1613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_11_fu_1608_p2),64));
    zext_ln102_5_fu_1698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_13_fu_1693_p2),64));
    zext_ln102_6_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_15_fu_1711_p2),64));
    zext_ln102_7_fu_1801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_18_fu_1796_p2),64));
    zext_ln102_8_fu_1848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_20_fu_1843_p2),64));
    zext_ln102_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_1_fu_1335_p2),64));
    zext_ln109_fu_1908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2083_p4),64));
    zext_ln215_1_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_2_reg_2461),64));
    zext_ln215_2_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_4_reg_2499),64));
    zext_ln215_3_fu_1491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_6_reg_2515),64));
    zext_ln215_4_fu_1618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_8_reg_2592),64));
    zext_ln215_5_fu_1703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_10_reg_2608),64));
    zext_ln215_6_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_12_reg_2677),64));
    zext_ln215_7_fu_1834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_14_reg_2693),64));
    zext_ln215_8_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_16_reg_2808),64));
    zext_ln215_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_fu_1160_p2),64));
    zext_ln49_1_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln49_reg_2239),32));
    zext_ln49_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_y_1_phi_fu_455_p4),32));
    zext_ln50_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_reg_2244),32));
    zext_ln54_1_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_805_p3),35));
    zext_ln54_2_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_1_reg_2250),36));
    zext_ln54_3_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_reg_2244_pp0_iter1_reg),14));
    zext_ln54_4_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_1_fu_904_p2),64));
    zext_ln54_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln47_1_reg_2227),35));
    zext_ln61_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_473),18));
    zext_ln64_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_1_reg_496),32));
    zext_ln70_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2039_p4),64));
    zext_ln80_1_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_2_reg_542),16));
    zext_ln80_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_2_reg_542),17));
end behav;
