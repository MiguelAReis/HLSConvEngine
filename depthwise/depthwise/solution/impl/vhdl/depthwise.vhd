-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity depthwise is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_TVALID : IN STD_LOGIC;
    strm_in_TREADY : OUT STD_LOGIC;
    strm_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    strm_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    strm_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    strm_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_TVALID : OUT STD_LOGIC;
    strm_out_TREADY : IN STD_LOGIC;
    strm_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    strm_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    strm_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    kernelN : IN STD_LOGIC_VECTOR (31 downto 0);
    kernelSize : IN STD_LOGIC_VECTOR (31 downto 0);
    mapSizeX : IN STD_LOGIC_VECTOR (31 downto 0);
    mapSizeY : IN STD_LOGIC_VECTOR (31 downto 0);
    relu : IN STD_LOGIC );
end;


architecture behav of depthwise is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "depthwise_depthwise,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.098500,HLS_SYN_LAT=10900,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=1513,HLS_SYN_LUT=2613,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp2_stage4 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_pp2_stage5 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_pp2_stage6 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_pp2_stage7 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_pp2_stage8 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_601 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011000000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv36_1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_600 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv18_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_const_lv14_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000101";
    constant ap_const_lv14_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000110";
    constant ap_const_lv14_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000111";
    constant ap_const_lv14_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_16 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal strm_in_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln52_reg_2211 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln64_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage7 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_pp2_stage7 : BOOLEAN;
    signal icmp_ln86_reg_2340 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_8_reg_2613 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_2632 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp103_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage6 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage6 : BOOLEAN;
    signal icmp_ln99_8_reg_2613_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_2632_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_2439 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_2439_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten17_reg_406 : STD_LOGIC_VECTOR (35 downto 0);
    signal n_reg_417 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_reg_428 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_1_reg_439 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_1_reg_450 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_1_reg_485 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_4_reg_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_7_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_reg_543 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_5_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_9_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_9_reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_598 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state17_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state26_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage4 : signal is "none";
    signal ap_block_state20_pp2_stage4_iter0 : BOOLEAN;
    signal ap_block_state29_pp2_stage4_iter1 : BOOLEAN;
    signal ap_block_pp2_stage4_11001 : BOOLEAN;
    signal icmp_ln99_3_reg_2408 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op458_read_state23 : BOOLEAN;
    signal ap_block_state23_pp2_stage7_iter0 : BOOLEAN;
    signal ap_predicate_op548_write_state32 : BOOLEAN;
    signal ap_block_state32_pp2_stage7_iter1 : BOOLEAN;
    signal ap_block_state32_io : BOOLEAN;
    signal ap_block_pp2_stage7_11001 : BOOLEAN;
    signal icmp_ln99_6_reg_2540 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_602 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state18_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state27_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal icmp_ln99_1_reg_2365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage5 : signal is "none";
    signal ap_block_state21_pp2_stage5_iter0 : BOOLEAN;
    signal ap_block_state30_pp2_stage5_iter1 : BOOLEAN;
    signal ap_block_pp2_stage5_11001 : BOOLEAN;
    signal icmp_ln99_4_reg_2470 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage8 : signal is "none";
    signal ap_block_state24_pp2_stage8_iter0 : BOOLEAN;
    signal ap_block_pp2_stage8_11001 : BOOLEAN;
    signal icmp_ln99_7_reg_2561 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_606 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_block_state19_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state28_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal icmp_ln99_2_reg_2387 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state22_pp2_stage6_iter0 : BOOLEAN;
    signal ap_predicate_op546_write_state31 : BOOLEAN;
    signal ap_block_state31_pp2_stage6_iter1 : BOOLEAN;
    signal ap_block_state31_io : BOOLEAN;
    signal ap_block_pp2_stage6_11001 : BOOLEAN;
    signal icmp_ln99_5_reg_2491 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state16_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal featureMap_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_610 : STD_LOGIC_VECTOR (3 downto 0);
    signal featureMap_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_615 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_620_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_reg_2112 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_14_fu_624_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_14_reg_2117 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_15_fu_628_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_15_reg_2123 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_V_fu_632_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal bias_V_reg_2128 : STD_LOGIC_VECTOR (3 downto 0);
    signal bound4_fu_652_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal bound4_reg_2133 : STD_LOGIC_VECTOR (35 downto 0);
    signal cmp34_not_mid113_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp34_not_mid113_reg_2138 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_1_fu_664_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal rev139_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev139_reg_2148 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_2153 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_2157 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_1_fu_710_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln47_1_reg_2162 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln47_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_reg_2169 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln49_fu_736_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln49_reg_2174 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_fu_748_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_reg_2179 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_reg_2179_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_1_fu_756_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_1_reg_2185 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln50_fu_764_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln49_3_fu_776_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln54_fu_822_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln54_reg_2201 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln54_1_fu_826_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln54_1_reg_2206 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln52_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_fu_902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_2215 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln61_fu_907_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln61_reg_2220 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal outMapYSize_fu_923_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapYSize_reg_2236 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln61_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv81_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv81_reg_2241 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i45_fu_947_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_i45_reg_2246 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub102_fu_950_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub102_reg_2251 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln62_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln64_fu_962_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op171_read_state8 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln64_reg_2265 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_2265_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_2265_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_2265_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2274 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2274_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2274_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_2274_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln69_1_fu_990_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2278 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2278_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2278_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_1_reg_2278_pp1_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln70_1_fu_994_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln70_1_reg_2283 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln70_1_reg_2283_pp1_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln70_fu_998_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln70_fu_998_p2 : signal is "no";
    signal add_ln70_reg_2288 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_3_fu_1006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal y_3_fu_1012_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_3_reg_2298 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal regslice_both_strm_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal trunc_ln80_fu_1027_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln80_reg_2306 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln80_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp103_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add109_fu_1040_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add109_reg_2317 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_3_cast_fu_1046_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_3_cast_reg_2322 : STD_LOGIC_VECTOR (1 downto 0);
    signal add86_2_fu_1052_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add86_2_reg_2329 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln83_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln86_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_reg_2340_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_reg_2344 : STD_LOGIC_VECTOR (0 downto 0);
    signal kn_1_fu_1113_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_1_reg_2360 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_1_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_3_fu_1148_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_3_reg_2372 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln99_2_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_6_fu_1202_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_6_reg_2393 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_3_fu_1219_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_3_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_3_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln215_9_fu_1232_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_9_reg_2415 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_10_fu_1236_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln215_10_reg_2420 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln36_fu_1251_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln36_reg_2430 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln100_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln102_fu_1260_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of add_ln102_fu_1260_p2 : signal is "no";
    signal add_ln102_reg_2453 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln215_9_fu_1282_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_9_reg_2465 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln99_4_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_12_fu_1321_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_12_reg_2476 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_5_fu_1338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_5_reg_2486 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_5_fu_1346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_5_reg_2491_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln215_15_fu_1351_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_15_reg_2498 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_16_fu_1355_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln215_16_reg_2503 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln102_1_fu_1378_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of add_ln102_1_fu_1378_p2 : signal is "no";
    signal add_ln102_1_reg_2523 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln215_15_fu_1399_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_15_reg_2535 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln99_6_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_6_reg_2540_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_18_fu_1438_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_18_reg_2546 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_7_fu_1455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_7_reg_2556 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln99_7_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_7_reg_2561_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln215_21_fu_1468_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_21_reg_2568 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_22_fu_1472_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln215_22_reg_2573 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln215_21_fu_1519_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_21_reg_2608 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln99_8_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln215_24_fu_1558_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_24_reg_2617 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln105_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_8_fu_1602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln126_fu_1610_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_V_load_reg_2671 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_5_reg_2692 : STD_LOGIC_VECTOR (3 downto 0);
    signal accum_V_4_fu_1675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_4_reg_2712 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_7_reg_2734 : STD_LOGIC_VECTOR (3 downto 0);
    signal accum_V_7_fu_1716_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_7_reg_2744 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_10_fu_1744_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_10_reg_2766 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_13_fu_1767_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_13_reg_2783 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_16_fu_1791_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_16_reg_2800 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_19_fu_1814_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_19_reg_2817 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_22_fu_1838_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_22_reg_2834 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_25_fu_1854_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_25_reg_2841 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_6_fu_1902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state18 : STD_LOGIC;
    signal ap_block_pp2_stage8_subdone : BOOLEAN;
    signal ap_block_pp2_stage7_subdone : BOOLEAN;
    signal filter_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal filter_V_ce0 : STD_LOGIC;
    signal filter_V_we0 : STD_LOGIC;
    signal filter_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal featureMap_V_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal featureMap_V_ce0 : STD_LOGIC;
    signal featureMap_V_we0 : STD_LOGIC;
    signal featureMap_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal featureMap_V_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal featureMap_V_ce1 : STD_LOGIC;
    signal ap_phi_mux_n_phi_fu_421_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y_1_phi_fu_443_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_reg_461 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_x_4_phi_fu_499_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_x_7_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_reg_520 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_2_reg_531 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_kn_phi_fu_547_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_x_5_phi_fu_557_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal ap_phi_reg_pp2_iter0_x_9_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_kn_9_reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_4_fu_892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_fu_1002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_fu_1097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_2_fu_1165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal zext_ln215_4_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_1_fu_1370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal zext_ln215_3_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_6_fu_1383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_5_fu_1495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage4 : BOOLEAN;
    signal zext_ln215_7_fu_1499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_8_fu_1503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_9_fu_1624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage5 : BOOLEAN;
    signal zext_ln215_10_fu_1628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_11_fu_1632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_12_fu_1653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_13_fu_1657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_15_fu_1661_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_14_fu_1689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_17_fu_1693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_fu_1697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_16_fu_1730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage8 : BOOLEAN;
    signal accum_V_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_27_fu_1865_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_accum_V_load : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_29_fu_1884_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage6_01001 : BOOLEAN;
    signal trunc_ln69_2_fu_1701_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_640_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_shl_fu_648_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal cast2_fu_636_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln49_fu_670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_fu_690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln47_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_fu_702_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln49_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln49_1_fu_770_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_787_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln54_1_fu_794_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln54_fu_784_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal sub_ln54_fu_798_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln47_fu_804_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln54_2_fu_813_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln54_fu_816_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln49_1_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt140_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev141_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_2_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln50_fu_851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln49_2_fu_844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl1_cast_fu_871_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln54_1_fu_878_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln54_3_fu_883_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln54_1_fu_886_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln77_fu_919_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln78_fu_929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapXSize_fu_933_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapYSize_cast_fu_939_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln70_fu_973_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1908_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln80_1_fu_1018_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln80_fu_1031_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln215_1_fu_1079_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_cast_fu_1083_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_fu_1075_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_fu_1091_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_2_fu_1102_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln215_4_fu_1130_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_cast_fu_1134_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_3_fu_1126_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_2_fu_1142_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_5_fu_1154_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kn_2_fu_1169_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_7_fu_1184_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_cast_fu_1188_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_6_fu_1180_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_5_fu_1196_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_8_fu_1208_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln215_11_fu_1240_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_cast_fu_1270_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_8_fu_1277_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_4_fu_1288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_13_fu_1303_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_cast_fu_1307_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_12_fu_1299_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_11_fu_1315_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_14_fu_1327_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln215_17_fu_1359_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1915_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1924_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_14_cast_fu_1387_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_14_fu_1394_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_6_fu_1405_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_19_fu_1420_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_cast_fu_1424_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_18_fu_1416_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_17_fu_1432_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_20_fu_1444_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln215_23_fu_1476_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1933_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1942_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_cast_fu_1507_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_20_fu_1514_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal kn_8_fu_1525_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln215_25_fu_1540_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_cast_fu_1544_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_24_fu_1536_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_23_fu_1552_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln215_26_fu_1564_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln109_fu_1575_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln122_fu_1591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln122_fu_1596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1950_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1958_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1966_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1974_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal and_ln100_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_3_fu_1669_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1991_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1999_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal and_ln101_fu_1706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2007_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_6_fu_1710_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_1_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2016_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_9_fu_1738_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_2_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_12_fu_1761_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_3_fu_1781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2034_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_15_fu_1785_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_4_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2043_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_18_fu_1808_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_5_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2052_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_21_fu_1832_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln101_6_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal accum_V_24_fu_1848_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2070_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1871_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln113_fu_1879_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln113_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1908_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1908_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1915_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1915_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1924_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1924_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1924_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1933_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1933_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1933_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1942_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1942_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1950_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1950_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1958_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1958_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1966_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1966_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1974_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1974_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1982_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1991_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1991_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1999_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1999_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2007_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2016_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2025_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2034_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2043_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2052_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2061_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2070_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1908_ce : STD_LOGIC;
    signal grp_fu_1915_ce : STD_LOGIC;
    signal grp_fu_1924_ce : STD_LOGIC;
    signal grp_fu_1933_ce : STD_LOGIC;
    signal grp_fu_1942_ce : STD_LOGIC;
    signal grp_fu_1950_ce : STD_LOGIC;
    signal grp_fu_1958_ce : STD_LOGIC;
    signal grp_fu_1966_ce : STD_LOGIC;
    signal grp_fu_1974_ce : STD_LOGIC;
    signal grp_fu_1982_ce : STD_LOGIC;
    signal grp_fu_1991_ce : STD_LOGIC;
    signal grp_fu_1999_ce : STD_LOGIC;
    signal grp_fu_2007_ce : STD_LOGIC;
    signal grp_fu_2016_ce : STD_LOGIC;
    signal grp_fu_2025_ce : STD_LOGIC;
    signal grp_fu_2034_ce : STD_LOGIC;
    signal grp_fu_2043_ce : STD_LOGIC;
    signal grp_fu_2052_ce : STD_LOGIC;
    signal grp_fu_2061_ce : STD_LOGIC;
    signal grp_fu_2070_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_block_pp2_stage4_subdone : BOOLEAN;
    signal ap_block_pp2_stage5_subdone : BOOLEAN;
    signal ap_block_pp2_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal regslice_both_strm_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal strm_in_TVALID_int_regslice : STD_LOGIC;
    signal strm_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_strm_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_strm_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_strm_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_strm_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_last_V_U_ack_in : STD_LOGIC;
    signal strm_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal strm_out_TVALID_int_regslice : STD_LOGIC;
    signal strm_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_strm_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_1948 : BOOLEAN;
    signal ap_condition_2480 : BOOLEAN;
    signal ap_condition_2484 : BOOLEAN;
    signal ap_condition_460 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component depthwise_mul_mul_18s_6ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component depthwise_mac_muladd_18s_6ns_18ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component depthwise_mac_muladd_4s_4s_8ns_8_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component depthwise_filter_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component depthwise_featureMap_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        address1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component depthwise_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    filter_V_U : component depthwise_filter_V
    generic map (
        DataWidth => 4,
        AddressRange => 13824,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => filter_V_address0,
        ce0 => filter_V_ce0,
        we0 => filter_V_we0,
        d0 => filter_V_d0,
        q0 => filter_V_q0);

    featureMap_V_U : component depthwise_featureMap_V
    generic map (
        DataWidth => 4,
        AddressRange => 135168,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => featureMap_V_address0,
        ce0 => featureMap_V_ce0,
        we0 => featureMap_V_we0,
        d0 => featureMap_V_d0,
        q0 => featureMap_V_q0,
        address1 => featureMap_V_address1,
        ce1 => featureMap_V_ce1,
        q1 => featureMap_V_q1);

    mul_mul_18s_6ns_18_4_1_U1 : component depthwise_mul_mul_18s_6ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1908_p0,
        din1 => grp_fu_1908_p1,
        ce => grp_fu_1908_ce,
        dout => grp_fu_1908_p2);

    mac_muladd_18s_6ns_18ns_18_4_1_U2 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1915_p0,
        din1 => grp_fu_1915_p1,
        din2 => trunc_ln36_fu_1251_p1,
        ce => grp_fu_1915_ce,
        dout => grp_fu_1915_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U3 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1924_p0,
        din1 => grp_fu_1924_p1,
        din2 => grp_fu_1924_p2,
        ce => grp_fu_1924_ce,
        dout => grp_fu_1924_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U4 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1933_p0,
        din1 => grp_fu_1933_p1,
        din2 => grp_fu_1933_p2,
        ce => grp_fu_1933_ce,
        dout => grp_fu_1933_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U5 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1942_p0,
        din1 => grp_fu_1942_p1,
        din2 => trunc_ln36_reg_2430,
        ce => grp_fu_1942_ce,
        dout => grp_fu_1942_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U6 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1950_p0,
        din1 => grp_fu_1950_p1,
        din2 => add_ln102_reg_2453,
        ce => grp_fu_1950_ce,
        dout => grp_fu_1950_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U7 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1958_p0,
        din1 => grp_fu_1958_p1,
        din2 => add_ln102_1_reg_2523,
        ce => grp_fu_1958_ce,
        dout => grp_fu_1958_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U8 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1966_p0,
        din1 => grp_fu_1966_p1,
        din2 => trunc_ln36_reg_2430,
        ce => grp_fu_1966_ce,
        dout => grp_fu_1966_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U9 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1974_p0,
        din1 => grp_fu_1974_p1,
        din2 => add_ln102_reg_2453,
        ce => grp_fu_1974_ce,
        dout => grp_fu_1974_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U10 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_598,
        din1 => featureMap_V_q1,
        din2 => grp_fu_1982_p2,
        ce => grp_fu_1982_ce,
        dout => grp_fu_1982_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U11 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1991_p0,
        din1 => grp_fu_1991_p1,
        din2 => add_ln102_1_reg_2523,
        ce => grp_fu_1991_ce,
        dout => grp_fu_1991_p3);

    mac_muladd_18s_6ns_18ns_18_4_1_U12 : component depthwise_mac_muladd_18s_6ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1999_p0,
        din1 => grp_fu_1999_p1,
        din2 => trunc_ln36_reg_2430,
        ce => grp_fu_1999_ce,
        dout => grp_fu_1999_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U13 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_602,
        din1 => reg_610,
        din2 => grp_fu_2007_p2,
        ce => grp_fu_2007_ce,
        dout => grp_fu_2007_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U14 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_606,
        din1 => reg_610,
        din2 => grp_fu_2016_p2,
        ce => grp_fu_2016_ce,
        dout => grp_fu_2016_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U15 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_598,
        din1 => reg_615,
        din2 => grp_fu_2025_p2,
        ce => grp_fu_2025_ce,
        dout => grp_fu_2025_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U16 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_602,
        din1 => reg_610,
        din2 => grp_fu_2034_p2,
        ce => grp_fu_2034_ce,
        dout => grp_fu_2034_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U17 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_606,
        din1 => lhs_5_reg_2692,
        din2 => grp_fu_2043_p2,
        ce => grp_fu_2043_ce,
        dout => grp_fu_2043_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U18 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_598,
        din1 => reg_615,
        din2 => grp_fu_2052_p2,
        ce => grp_fu_2052_ce,
        dout => grp_fu_2052_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U19 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_602,
        din1 => lhs_7_reg_2734,
        din2 => grp_fu_2061_p2,
        ce => grp_fu_2061_ce,
        dout => grp_fu_2061_p3);

    mac_muladd_4s_4s_8ns_8_4_1_U20 : component depthwise_mac_muladd_4s_4s_8ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_606,
        din1 => reg_610,
        din2 => grp_fu_2070_p2,
        ce => grp_fu_2070_ce,
        dout => grp_fu_2070_p3);

    regslice_both_strm_in_V_data_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TDATA,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_data_V_U_ack_in,
        data_out => strm_in_TDATA_int_regslice,
        vld_out => strm_in_TVALID_int_regslice,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_data_V_U_apdone_blk);

    regslice_both_strm_in_V_keep_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TKEEP,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_keep_V_U_ack_in,
        data_out => strm_in_TKEEP_int_regslice,
        vld_out => regslice_both_strm_in_V_keep_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_keep_V_U_apdone_blk);

    regslice_both_strm_in_V_strb_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TSTRB,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_strb_V_U_ack_in,
        data_out => strm_in_TSTRB_int_regslice,
        vld_out => regslice_both_strm_in_V_strb_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_strb_V_U_apdone_blk);

    regslice_both_strm_in_V_last_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TLAST,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_last_V_U_ack_in,
        data_out => strm_in_TLAST_int_regslice,
        vld_out => regslice_both_strm_in_V_last_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_last_V_U_apdone_blk);

    regslice_both_strm_out_V_data_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_out_TDATA_int_regslice,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => strm_out_TREADY_int_regslice,
        data_out => strm_out_TDATA,
        vld_out => regslice_both_strm_out_V_data_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_data_V_U_apdone_blk);

    regslice_both_strm_out_V_keep_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_keep_V_U_ack_in_dummy,
        data_out => strm_out_TKEEP,
        vld_out => regslice_both_strm_out_V_keep_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_keep_V_U_apdone_blk);

    regslice_both_strm_out_V_strb_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_strb_V_U_ack_in_dummy,
        data_out => strm_out_TSTRB,
        vld_out => regslice_both_strm_out_V_strb_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_strb_V_U_apdone_blk);

    regslice_both_strm_out_V_last_V_U : component depthwise_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv1_0,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_last_V_U_ack_in_dummy,
        data_out => strm_out_TLAST,
        vld_out => regslice_both_strm_out_V_last_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln62_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((icmp_ln62_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln83_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((icmp_ln83_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accum_V_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                accum_V_fu_180 <= accum_V_25_fu_1854_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                accum_V_fu_180 <= accum_V_29_fu_1884_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
                accum_V_fu_180 <= accum_V_27_fu_1865_p3;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter0_kn_9_reg_577_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1948)) then
                if ((icmp_ln99_8_fu_1531_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp2_iter0_kn_9_reg_577 <= ap_const_lv32_601;
                elsif ((icmp_ln99_8_fu_1531_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp2_iter0_kn_9_reg_577 <= add_ln126_fu_1610_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter0_x_9_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1948)) then
                if ((icmp_ln99_8_fu_1531_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp2_iter0_x_9_reg_565 <= x_5_reg_554;
                elsif ((icmp_ln99_8_fu_1531_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp2_iter0_x_9_reg_565 <= x_8_fu_1602_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten17_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_685_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten17_reg_406 <= add_ln47_1_fu_664_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten17_reg_406 <= ap_const_lv36_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_685_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_428 <= select_ln49_3_fu_776_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_428 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    kn_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then 
                kn_reg_543 <= kn_9_reg_577;
            elsif (((icmp_ln83_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                kn_reg_543 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    n_1_reg_485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                n_1_reg_485 <= add_ln64_fu_962_p2;
            elsif (((icmp_ln62_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                n_1_reg_485 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    n_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_reg_2153 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                n_reg_417 <= select_ln47_1_reg_2162;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_reg_417 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln99_4_reg_2470 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (icmp_ln100_reg_2439 = ap_const_lv1_1) and (icmp_ln99_8_reg_2613 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln99_2_reg_2387 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2340 = ap_const_lv1_1)))) then 
                reg_610 <= featureMap_V_q1;
            elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_1_reg_2365 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then 
                reg_610 <= featureMap_V_q0;
            end if; 
        end if;
    end process;

    reg_615_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                if ((ap_const_boolean_1 = ap_condition_2484)) then 
                    reg_615 <= featureMap_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_2480)) then 
                    reg_615 <= featureMap_V_q0;
                end if;
            end if; 
        end if;
    end process;

    x_1_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_685_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                x_1_reg_450 <= add_ln50_fu_764_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_1_reg_450 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    x_2_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                x_2_reg_531 <= x_6_fu_1902_p2;
            elsif (((icmp_ln80_fu_1022_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                x_2_reg_531 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_4_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln64_reg_2265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                x_4_reg_496 <= x_7_reg_507;
            elsif (((icmp_ln62_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                x_4_reg_496 <= x_reg_473;
            end if; 
        end if;
    end process;

    x_5_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                x_5_reg_554 <= x_9_reg_565;
            elsif (((icmp_ln83_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                x_5_reg_554 <= x_2_reg_531;
            end if; 
        end if;
    end process;

    x_7_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_460)) then
                if (((icmp_ln67_fu_985_p2 = ap_const_lv1_1) and (icmp_ln64_fu_968_p2 = ap_const_lv1_0))) then 
                    x_7_reg_507 <= ap_const_lv32_16;
                elsif (((icmp_ln67_fu_985_p2 = ap_const_lv1_0) and (icmp_ln64_fu_968_p2 = ap_const_lv1_0))) then 
                    x_7_reg_507 <= ap_phi_mux_x_4_phi_fu_499_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    x_7_reg_507 <= ap_phi_reg_pp1_iter0_x_7_reg_507;
                end if;
            end if; 
        end if;
    end process;

    x_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                x_reg_473 <= x_3_fu_1006_p2;
            elsif (((icmp_ln61_fu_913_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                x_reg_473 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_1_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_reg_2153 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                y_1_reg_439 <= select_ln49_1_reg_2185;
            elsif ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_1_reg_439 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    y_2_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln83_fu_1058_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                y_2_reg_520 <= y_3_reg_2298;
            elsif (((icmp_ln61_fu_913_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                y_2_reg_520 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    y_reg_461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                y_reg_461 <= ap_const_lv2_0;
            elsif (((icmp_ln62_fu_956_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                y_reg_461 <= add_ln61_reg_2220;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                accum_V_10_reg_2766 <= accum_V_10_fu_1744_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then
                accum_V_13_reg_2783 <= accum_V_13_fu_1767_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then
                accum_V_16_reg_2800 <= accum_V_16_fu_1791_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then
                accum_V_19_reg_2817 <= accum_V_19_fu_1814_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then
                accum_V_22_reg_2834 <= accum_V_22_fu_1838_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then
                accum_V_25_reg_2841 <= accum_V_25_fu_1854_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                accum_V_4_reg_2712 <= accum_V_4_fu_1675_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                accum_V_7_reg_2744 <= accum_V_7_fu_1716_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                accum_V_load_reg_2671 <= ap_sig_allocacmp_accum_V_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln80_fu_1022_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                add109_reg_2317 <= add109_fu_1040_p2;
                add86_2_reg_2329 <= add86_2_fu_1052_p2;
                cmp103_reg_2313 <= cmp103_fu_1035_p2;
                trunc_ln80_reg_2306 <= trunc_ln80_fu_1027_p1;
                y_3_cast_reg_2322 <= y_3_cast_fu_1046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln102_1_reg_2523 <= add_ln102_1_fu_1378_p2;
                add_ln215_18_reg_2546 <= add_ln215_18_fu_1438_p2;
                icmp_ln99_6_reg_2540 <= icmp_ln99_6_fu_1411_p2;
                icmp_ln99_7_reg_2561 <= icmp_ln99_7_fu_1463_p2;
                kn_7_reg_2556 <= kn_7_fu_1455_p3;
                trunc_ln215_21_reg_2568 <= trunc_ln215_21_fu_1468_p1;
                trunc_ln215_22_reg_2573 <= trunc_ln215_22_fu_1472_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln102_reg_2453 <= add_ln102_fu_1260_p2;
                add_ln215_12_reg_2476 <= add_ln215_12_fu_1321_p2;
                icmp_ln100_reg_2439 <= icmp_ln100_fu_1255_p2;
                icmp_ln99_4_reg_2470 <= icmp_ln99_4_fu_1294_p2;
                icmp_ln99_5_reg_2491 <= icmp_ln99_5_fu_1346_p2;
                kn_5_reg_2486 <= kn_5_fu_1338_p3;
                trunc_ln215_15_reg_2498 <= trunc_ln215_15_fu_1351_p1;
                trunc_ln215_16_reg_2503 <= trunc_ln215_16_fu_1355_p1;
                trunc_ln36_reg_2430 <= trunc_ln36_fu_1251_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln99_5_reg_2491 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln215_15_reg_2535 <= add_ln215_15_fu_1399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_7_reg_2561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln215_21_reg_2608 <= add_ln215_21_fu_1519_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_8_fu_1531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln100_reg_2439 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln215_24_reg_2617 <= add_ln215_24_fu_1558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln86_fu_1064_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln215_3_reg_2372 <= add_ln215_3_fu_1148_p2;
                icmp_ln99_1_reg_2365 <= icmp_ln99_1_fu_1121_p2;
                icmp_ln99_reg_2344 <= icmp_ln99_fu_1070_p2;
                kn_1_reg_2360 <= kn_1_fu_1113_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln215_6_reg_2393 <= add_ln215_6_fu_1202_p2;
                icmp_ln99_2_reg_2387 <= icmp_ln99_2_fu_1175_p2;
                icmp_ln99_3_reg_2408 <= icmp_ln99_3_fu_1227_p2;
                kn_3_reg_2403 <= kn_3_fu_1219_p3;
                trunc_ln215_10_reg_2420 <= trunc_ln215_10_fu_1236_p1;
                trunc_ln215_9_reg_2415 <= trunc_ln215_9_fu_1232_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln99_3_reg_2408 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                add_ln215_9_reg_2465 <= add_ln215_9_fu_1282_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_685_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln49_reg_2174 <= add_ln49_fu_736_p2;
                and_ln47_reg_2169 <= and_ln47_fu_730_p2;
                icmp_ln49_reg_2157 <= icmp_ln49_fu_696_p2;
                select_ln49_reg_2179 <= select_ln49_fu_748_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln61_reg_2220 <= add_ln61_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln67_reg_2274_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln64_reg_2265_pp1_iter2_reg = ap_const_lv1_0))) then
                add_ln70_reg_2288 <= add_ln70_fu_998_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bias_V_reg_2128 <= bias_V_fu_632_p1;
                bound4_reg_2133 <= bound4_fu_652_p2;
                cmp34_not_mid113_reg_2138 <= cmp34_not_mid113_fu_658_p2;
                empty_14_reg_2117 <= empty_14_fu_624_p1;
                empty_15_reg_2123 <= empty_15_fu_628_p1;
                empty_reg_2112 <= empty_fu_620_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln61_fu_913_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                conv81_reg_2241 <= conv81_fu_943_p1;
                conv_i45_reg_2246 <= conv_i45_fu_947_p1;
                outMapYSize_reg_2236 <= outMapYSize_fu_923_p2;
                sub102_reg_2251 <= sub102_fu_950_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then
                icmp_ln100_reg_2439_pp2_iter1_reg <= icmp_ln100_reg_2439;
                icmp_ln99_5_reg_2491_pp2_iter1_reg <= icmp_ln99_5_reg_2491;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln99_8_fu_1531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                icmp_ln105_reg_2632 <= icmp_ln105_fu_1586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then
                icmp_ln105_reg_2632_pp2_iter1_reg <= icmp_ln105_reg_2632;
                icmp_ln99_8_reg_2613_pp2_iter1_reg <= icmp_ln99_8_reg_2613;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln47_reg_2153 <= icmp_ln47_fu_685_p2;
                rev139_reg_2148 <= rev139_fu_679_p2;
                select_ln49_reg_2179_pp0_iter1_reg <= select_ln49_reg_2179;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln64_reg_2265 <= icmp_ln64_fu_968_p2;
                icmp_ln64_reg_2265_pp1_iter1_reg <= icmp_ln64_reg_2265;
                icmp_ln67_reg_2274_pp1_iter1_reg <= icmp_ln67_reg_2274;
                trunc_ln69_1_reg_2278_pp1_iter1_reg <= trunc_ln69_1_reg_2278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln64_reg_2265_pp1_iter2_reg <= icmp_ln64_reg_2265_pp1_iter1_reg;
                icmp_ln64_reg_2265_pp1_iter3_reg <= icmp_ln64_reg_2265_pp1_iter2_reg;
                icmp_ln67_reg_2274_pp1_iter2_reg <= icmp_ln67_reg_2274_pp1_iter1_reg;
                icmp_ln67_reg_2274_pp1_iter3_reg <= icmp_ln67_reg_2274_pp1_iter2_reg;
                trunc_ln69_1_reg_2278_pp1_iter2_reg <= trunc_ln69_1_reg_2278_pp1_iter1_reg;
                trunc_ln69_1_reg_2278_pp1_iter3_reg <= trunc_ln69_1_reg_2278_pp1_iter2_reg;
                trunc_ln70_1_reg_2283_pp1_iter2_reg <= trunc_ln70_1_reg_2283;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_fu_968_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln67_reg_2274 <= icmp_ln67_fu_985_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln86_reg_2340 <= icmp_ln86_fu_1064_p2;
                icmp_ln86_reg_2340_pp2_iter1_reg <= icmp_ln86_reg_2340;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then
                icmp_ln99_6_reg_2540_pp2_iter1_reg <= icmp_ln99_6_reg_2540;
                icmp_ln99_7_reg_2561_pp2_iter1_reg <= icmp_ln99_7_reg_2561;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                icmp_ln99_8_reg_2613 <= icmp_ln99_8_fu_1531_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then
                kn_9_reg_577 <= ap_phi_reg_pp2_iter0_kn_9_reg_577;
                x_9_reg_565 <= ap_phi_reg_pp2_iter0_x_9_reg_565;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln99_5_reg_2491 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                lhs_5_reg_2692 <= featureMap_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln99_7_reg_2561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then
                lhs_7_reg_2734 <= featureMap_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_reg_2153 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln52_reg_2211 <= or_ln52_fu_865_p2;
                trunc_ln54_1_reg_2206 <= trunc_ln54_1_fu_826_p1;
                trunc_ln54_reg_2201 <= trunc_ln54_fu_822_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln99_6_reg_2540 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln99_3_reg_2408 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln86_reg_2340 = ap_const_lv1_1)))) then
                reg_598 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (icmp_ln99_7_reg_2561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln99_4_reg_2470 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln99_1_reg_2365 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln86_reg_2340 = ap_const_lv1_1)))) then
                reg_602 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln99_5_reg_2491 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln99_2_reg_2387 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln100_reg_2439 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln99_8_reg_2613 = ap_const_lv1_1)))) then
                reg_606 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln47_fu_685_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln47_1_reg_2162 <= select_ln47_1_fu_710_p3;
                select_ln49_1_reg_2185 <= select_ln49_1_fu_756_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                sub_reg_2215 <= sub_fu_902_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln67_fu_985_p2 = ap_const_lv1_0) and (icmp_ln64_fu_968_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln69_1_reg_2278 <= trunc_ln69_1_fu_990_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln67_reg_2274 = ap_const_lv1_0) and (icmp_ln64_reg_2265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln70_1_reg_2283 <= trunc_ln70_1_fu_994_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                y_3_reg_2298 <= y_3_fu_1012_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter0, icmp_ln64_fu_968_p2, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, icmp_ln86_reg_2340, ap_enable_reg_pp2_iter1, ap_enable_reg_pp0_iter0, icmp_ln47_fu_685_p2, ap_CS_fsm_state6, icmp_ln61_fu_913_p2, icmp_ln62_fu_956_p2, ap_CS_fsm_state7, ap_CS_fsm_state14, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln80_fu_1022_p2, icmp_ln83_fu_1058_p2, ap_CS_fsm_state15, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_block_pp2_stage2_subdone, ap_block_pp2_stage8_subdone, ap_block_pp2_stage7_subdone, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone, ap_block_pp2_stage3_subdone, ap_block_pp2_stage4_subdone, ap_block_pp2_stage5_subdone, ap_block_pp2_stage6_subdone, strm_in_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln47_fu_685_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln47_fu_685_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln61_fu_913_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln62_fu_956_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln64_fu_968_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((icmp_ln64_fu_968_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln80_fu_1022_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln80_fu_1022_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln83_fu_1058_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln86_reg_2340 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln86_reg_2340 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_pp2_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                end if;
            when ap_ST_fsm_pp2_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                end if;
            when ap_ST_fsm_pp2_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                end if;
            when ap_ST_fsm_pp2_stage7 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage8;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                end if;
            when ap_ST_fsm_pp2_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage8;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    accum_V_10_fu_1744_p3 <= 
        accum_V_9_fu_1738_p3 when (icmp_ln99_2_reg_2387(0) = '1') else 
        accum_V_7_reg_2744;
    accum_V_12_fu_1761_p3 <= 
        grp_fu_2025_p3 when (and_ln101_2_fu_1757_p2(0) = '1') else 
        accum_V_10_reg_2766;
    accum_V_13_fu_1767_p3 <= 
        accum_V_12_fu_1761_p3 when (icmp_ln99_3_reg_2408(0) = '1') else 
        accum_V_10_reg_2766;
    accum_V_15_fu_1785_p3 <= 
        grp_fu_2034_p3 when (and_ln101_3_fu_1781_p2(0) = '1') else 
        accum_V_13_reg_2783;
    accum_V_16_fu_1791_p3 <= 
        accum_V_15_fu_1785_p3 when (icmp_ln99_4_reg_2470(0) = '1') else 
        accum_V_13_reg_2783;
    accum_V_18_fu_1808_p3 <= 
        grp_fu_2043_p3 when (and_ln101_4_fu_1804_p2(0) = '1') else 
        accum_V_16_reg_2800;
    accum_V_19_fu_1814_p3 <= 
        accum_V_18_fu_1808_p3 when (icmp_ln99_5_reg_2491_pp2_iter1_reg(0) = '1') else 
        accum_V_16_reg_2800;
    accum_V_21_fu_1832_p3 <= 
        grp_fu_2052_p3 when (and_ln101_5_fu_1828_p2(0) = '1') else 
        accum_V_19_reg_2817;
    accum_V_22_fu_1838_p3 <= 
        accum_V_21_fu_1832_p3 when (icmp_ln99_6_reg_2540_pp2_iter1_reg(0) = '1') else 
        accum_V_19_reg_2817;
    accum_V_24_fu_1848_p3 <= 
        grp_fu_2061_p3 when (and_ln101_6_fu_1844_p2(0) = '1') else 
        accum_V_22_reg_2834;
    accum_V_25_fu_1854_p3 <= 
        accum_V_24_fu_1848_p3 when (icmp_ln99_7_reg_2561_pp2_iter1_reg(0) = '1') else 
        accum_V_22_reg_2834;
    accum_V_27_fu_1865_p3 <= 
        grp_fu_2070_p3 when (icmp_ln100_reg_2439_pp2_iter1_reg(0) = '1') else 
        accum_V_25_reg_2841;
    accum_V_29_fu_1884_p3 <= 
        ap_const_lv8_0 when (and_ln113_fu_1879_p2(0) = '1') else 
        accum_V_27_fu_1865_p3;
    accum_V_3_fu_1669_p3 <= 
        grp_fu_1982_p3 when (and_ln100_fu_1665_p2(0) = '1') else 
        accum_V_load_reg_2671;
    accum_V_4_fu_1675_p3 <= 
        accum_V_3_fu_1669_p3 when (icmp_ln99_reg_2344(0) = '1') else 
        accum_V_load_reg_2671;
    accum_V_6_fu_1710_p3 <= 
        grp_fu_2007_p3 when (and_ln101_fu_1706_p2(0) = '1') else 
        accum_V_4_reg_2712;
    accum_V_7_fu_1716_p3 <= 
        accum_V_6_fu_1710_p3 when (icmp_ln99_1_reg_2365(0) = '1') else 
        accum_V_4_reg_2712;
    accum_V_9_fu_1738_p3 <= 
        grp_fu_2016_p3 when (and_ln101_1_fu_1734_p2(0) = '1') else 
        accum_V_7_reg_2744;
    add109_fu_1040_p2 <= std_logic_vector(unsigned(trunc_ln80_fu_1027_p1) + unsigned(ap_const_lv2_3));
    add86_2_fu_1052_p2 <= (trunc_ln80_fu_1027_p1 xor ap_const_lv2_2);
    add_ln102_1_fu_1378_p2 <= std_logic_vector(unsigned(trunc_ln36_reg_2430) + unsigned(ap_const_lv18_2));
    add_ln102_fu_1260_p2 <= std_logic_vector(unsigned(trunc_ln36_fu_1251_p1) + unsigned(ap_const_lv18_1));
    add_ln126_fu_1610_p2 <= std_logic_vector(unsigned(kn_8_fu_1525_p3) + unsigned(ap_const_lv32_1));
    add_ln215_11_fu_1315_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_1307_p3) + unsigned(trunc_ln215_12_fu_1299_p1));
    add_ln215_12_fu_1321_p2 <= std_logic_vector(unsigned(add_ln215_11_fu_1315_p2) + unsigned(ap_const_lv14_4));
    add_ln215_14_fu_1394_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_1387_p3) + unsigned(trunc_ln215_15_reg_2498));
    add_ln215_15_fu_1399_p2 <= std_logic_vector(unsigned(add_ln215_14_fu_1394_p2) + unsigned(ap_const_lv14_5));
    add_ln215_17_fu_1432_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_1424_p3) + unsigned(trunc_ln215_18_fu_1416_p1));
    add_ln215_18_fu_1438_p2 <= std_logic_vector(unsigned(add_ln215_17_fu_1432_p2) + unsigned(ap_const_lv14_6));
    add_ln215_20_fu_1514_p2 <= std_logic_vector(unsigned(tmp_18_cast_fu_1507_p3) + unsigned(trunc_ln215_21_reg_2568));
    add_ln215_21_fu_1519_p2 <= std_logic_vector(unsigned(add_ln215_20_fu_1514_p2) + unsigned(ap_const_lv14_7));
    add_ln215_23_fu_1552_p2 <= std_logic_vector(unsigned(tmp_20_cast_fu_1544_p3) + unsigned(trunc_ln215_24_fu_1536_p1));
    add_ln215_24_fu_1558_p2 <= std_logic_vector(unsigned(add_ln215_23_fu_1552_p2) + unsigned(ap_const_lv14_8));
    add_ln215_2_fu_1142_p2 <= std_logic_vector(unsigned(tmp_6_cast_fu_1134_p3) + unsigned(trunc_ln215_3_fu_1126_p1));
    add_ln215_3_fu_1148_p2 <= std_logic_vector(unsigned(add_ln215_2_fu_1142_p2) + unsigned(ap_const_lv14_1));
    add_ln215_5_fu_1196_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_1188_p3) + unsigned(trunc_ln215_6_fu_1180_p1));
    add_ln215_6_fu_1202_p2 <= std_logic_vector(unsigned(add_ln215_5_fu_1196_p2) + unsigned(ap_const_lv14_2));
    add_ln215_8_fu_1277_p2 <= std_logic_vector(unsigned(tmp_10_cast_fu_1270_p3) + unsigned(trunc_ln215_9_reg_2415));
    add_ln215_9_fu_1282_p2 <= std_logic_vector(unsigned(add_ln215_8_fu_1277_p2) + unsigned(ap_const_lv14_3));
    add_ln215_fu_1091_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_1083_p3) + unsigned(trunc_ln215_fu_1075_p1));
    add_ln47_1_fu_664_p2 <= std_logic_vector(unsigned(indvar_flatten17_reg_406) + unsigned(ap_const_lv36_1));
    add_ln47_fu_690_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_phi_fu_421_p4) + unsigned(ap_const_lv32_1));
    add_ln49_1_fu_770_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_428) + unsigned(ap_const_lv4_1));
    add_ln49_fu_736_p2 <= std_logic_vector(unsigned(select_ln47_fu_702_p3) + unsigned(ap_const_lv2_1));
    add_ln50_fu_764_p2 <= std_logic_vector(unsigned(select_ln49_fu_748_p3) + unsigned(ap_const_lv2_1));
    add_ln54_1_fu_886_p2 <= std_logic_vector(unsigned(sub_ln54_1_fu_878_p2) + unsigned(zext_ln54_3_fu_883_p1));
    add_ln54_fu_816_p2 <= std_logic_vector(signed(sext_ln47_fu_804_p1) + signed(zext_ln54_2_fu_813_p1));
    add_ln61_fu_907_p2 <= std_logic_vector(unsigned(y_reg_461) + unsigned(ap_const_lv2_1));
    add_ln64_fu_962_p2 <= std_logic_vector(unsigned(n_1_reg_485) + unsigned(ap_const_lv32_1));
    add_ln70_fu_998_p2 <= std_logic_vector(signed(grp_fu_1908_p2) + signed(trunc_ln70_1_reg_2283_pp1_iter2_reg));
    and_ln100_fu_1665_p2 <= (icmp_ln99_reg_2344 and icmp_ln100_reg_2439);
    and_ln101_1_fu_1734_p2 <= (icmp_ln99_2_reg_2387 and icmp_ln100_reg_2439);
    and_ln101_2_fu_1757_p2 <= (icmp_ln99_3_reg_2408 and icmp_ln100_reg_2439);
    and_ln101_3_fu_1781_p2 <= (icmp_ln99_4_reg_2470 and icmp_ln100_reg_2439);
    and_ln101_4_fu_1804_p2 <= (icmp_ln99_5_reg_2491_pp2_iter1_reg and icmp_ln100_reg_2439_pp2_iter1_reg);
    and_ln101_5_fu_1828_p2 <= (icmp_ln99_6_reg_2540_pp2_iter1_reg and icmp_ln100_reg_2439_pp2_iter1_reg);
    and_ln101_6_fu_1844_p2 <= (icmp_ln99_7_reg_2561_pp2_iter1_reg and icmp_ln100_reg_2439_pp2_iter1_reg);
    and_ln101_fu_1706_p2 <= (icmp_ln99_1_reg_2365 and icmp_ln100_reg_2439);
    and_ln113_fu_1879_p1 <= (0=>relu, others=>'-');
    and_ln113_fu_1879_p2 <= (tmp_2_fu_1871_p3 and and_ln113_fu_1879_p1);
    and_ln47_fu_730_p2 <= (xor_ln47_fu_718_p2 and icmp_ln50_fu_724_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(10);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(11);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage4 <= ap_CS_fsm(13);
    ap_CS_fsm_pp2_stage5 <= ap_CS_fsm(14);
    ap_CS_fsm_pp2_stage6 <= ap_CS_fsm(15);
    ap_CS_fsm_pp2_stage7 <= ap_CS_fsm(16);
    ap_CS_fsm_pp2_stage8 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(6);
    ap_CS_fsm_state14 <= ap_CS_fsm(7);
    ap_CS_fsm_state15 <= ap_CS_fsm(8);
    ap_CS_fsm_state33 <= ap_CS_fsm(18);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln52_reg_2211, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((or_ln52_reg_2211 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln52_reg_2211, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((or_ln52_reg_2211 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter0, ap_predicate_op171_read_state8, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op171_read_state8 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter0, ap_predicate_op171_read_state8, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op171_read_state8 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage6_01001_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op546_write_state31, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage6_01001 <= ((ap_predicate_op546_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage6_11001_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op546_write_state31, ap_block_state31_io, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage6_11001 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state31_io) or ((ap_predicate_op546_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp2_stage6_subdone_assign_proc : process(ap_enable_reg_pp2_iter1, ap_predicate_op546_write_state31, ap_block_state31_io, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage6_subdone <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state31_io) or ((ap_predicate_op546_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp2_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage7_11001_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_predicate_op458_read_state23, ap_predicate_op548_write_state32, ap_block_state32_io, strm_in_TVALID_int_regslice, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage7_11001 <= (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op458_read_state23 = ap_const_boolean_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state32_io) or ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op548_write_state32 = ap_const_boolean_1)))));
    end process;


    ap_block_pp2_stage7_subdone_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_predicate_op458_read_state23, ap_predicate_op548_write_state32, ap_block_state32_io, strm_in_TVALID_int_regslice, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage7_subdone <= (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op458_read_state23 = ap_const_boolean_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state32_io) or ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op548_write_state32 = ap_const_boolean_1)))));
    end process;

        ap_block_pp2_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, strm_in_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_pp2_stage7_iter0_assign_proc : process(ap_predicate_op458_read_state23, strm_in_TVALID_int_regslice)
    begin
                ap_block_state23_pp2_stage7_iter0 <= ((strm_in_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op458_read_state23 = ap_const_boolean_1));
    end process;

        ap_block_state24_pp2_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state31_io_assign_proc : process(ap_predicate_op546_write_state31, strm_out_TREADY_int_regslice)
    begin
                ap_block_state31_io <= ((ap_predicate_op546_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state31_pp2_stage6_iter1_assign_proc : process(ap_predicate_op546_write_state31, strm_out_TREADY_int_regslice)
    begin
                ap_block_state31_pp2_stage6_iter1 <= ((ap_predicate_op546_write_state31 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state32_io_assign_proc : process(ap_predicate_op548_write_state32, strm_out_TREADY_int_regslice)
    begin
                ap_block_state32_io <= ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op548_write_state32 = ap_const_boolean_1));
    end process;


    ap_block_state32_pp2_stage7_iter1_assign_proc : process(ap_predicate_op548_write_state32, strm_out_TREADY_int_regslice)
    begin
                ap_block_state32_pp2_stage7_iter1 <= ((strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op548_write_state32 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(or_ln52_reg_2211, strm_in_TVALID_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((or_ln52_reg_2211 = ap_const_lv1_0) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_pp1_stage0_iter0_assign_proc : process(ap_predicate_op171_read_state8, strm_in_TVALID_int_regslice)
    begin
                ap_block_state8_pp1_stage0_iter0 <= ((ap_predicate_op171_read_state8 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1948_assign_proc : process(ap_enable_reg_pp2_iter0, icmp_ln86_reg_2340, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
                ap_condition_1948 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln86_reg_2340 = ap_const_lv1_1));
    end process;


    ap_condition_2480_assign_proc : process(icmp_ln99_3_reg_2408, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001)
    begin
                ap_condition_2480 <= ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln99_3_reg_2408 = ap_const_lv1_1));
    end process;


    ap_condition_2484_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, icmp_ln99_6_reg_2540)
    begin
                ap_condition_2484 <= ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln99_6_reg_2540 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7));
    end process;


    ap_condition_460_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
                ap_condition_460 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln47_fu_685_p2)
    begin
        if ((icmp_ln47_fu_685_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln64_fu_968_p2)
    begin
        if ((icmp_ln64_fu_968_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state18_assign_proc : process(icmp_ln86_reg_2340)
    begin
        if ((icmp_ln86_reg_2340 = ap_const_lv1_0)) then 
            ap_condition_pp2_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state14, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln80_fu_1022_p2)
    begin
        if (((icmp_ln80_fu_1022_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_kn_phi_fu_547_p4_assign_proc : process(icmp_ln86_reg_2340, ap_enable_reg_pp2_iter1, kn_reg_543, kn_9_reg_577, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1))) then 
            ap_phi_mux_kn_phi_fu_547_p4 <= kn_9_reg_577;
        else 
            ap_phi_mux_kn_phi_fu_547_p4 <= kn_reg_543;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_421_p4_assign_proc : process(ap_block_pp0_stage0, n_reg_417, ap_CS_fsm_pp0_stage0, icmp_ln47_reg_2153, select_ln47_1_reg_2162, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln47_reg_2153 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_n_phi_fu_421_p4 <= select_ln47_1_reg_2162;
        else 
            ap_phi_mux_n_phi_fu_421_p4 <= n_reg_417;
        end if; 
    end process;


    ap_phi_mux_x_4_phi_fu_499_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, x_4_reg_496, x_7_reg_507, icmp_ln64_reg_2265, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln64_reg_2265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_x_4_phi_fu_499_p4 <= x_7_reg_507;
        else 
            ap_phi_mux_x_4_phi_fu_499_p4 <= x_4_reg_496;
        end if; 
    end process;


    ap_phi_mux_x_5_phi_fu_557_p4_assign_proc : process(ap_enable_reg_pp2_iter1, x_5_reg_554, x_9_reg_565, ap_CS_fsm_pp2_stage2, icmp_ln86_reg_2340_pp2_iter1_reg, ap_block_pp2_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage2) and (icmp_ln86_reg_2340_pp2_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_x_5_phi_fu_557_p4 <= x_9_reg_565;
        else 
            ap_phi_mux_x_5_phi_fu_557_p4 <= x_5_reg_554;
        end if; 
    end process;


    ap_phi_mux_y_1_phi_fu_443_p4_assign_proc : process(ap_block_pp0_stage0, y_1_reg_439, ap_CS_fsm_pp0_stage0, icmp_ln47_reg_2153, select_ln49_1_reg_2185, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln47_reg_2153 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_y_1_phi_fu_443_p4 <= select_ln49_1_reg_2185;
        else 
            ap_phi_mux_y_1_phi_fu_443_p4 <= y_1_reg_439;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_x_7_reg_507 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op171_read_state8_assign_proc : process(icmp_ln64_fu_968_p2, icmp_ln67_fu_985_p2)
    begin
                ap_predicate_op171_read_state8 <= ((icmp_ln67_fu_985_p2 = ap_const_lv1_0) and (icmp_ln64_fu_968_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op458_read_state23_assign_proc : process(icmp_ln86_reg_2340, icmp_ln99_8_reg_2613, icmp_ln105_reg_2632, cmp103_reg_2313)
    begin
                ap_predicate_op458_read_state23 <= ((cmp103_reg_2313 = ap_const_lv1_1) and (icmp_ln105_reg_2632 = ap_const_lv1_1) and (icmp_ln99_8_reg_2613 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1));
    end process;


    ap_predicate_op546_write_state31_assign_proc : process(icmp_ln99_8_reg_2613_pp2_iter1_reg, icmp_ln105_reg_2632_pp2_iter1_reg, icmp_ln100_reg_2439_pp2_iter1_reg)
    begin
                ap_predicate_op546_write_state31 <= ((icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op548_write_state32_assign_proc : process(icmp_ln99_8_reg_2613_pp2_iter1_reg, icmp_ln105_reg_2632_pp2_iter1_reg, icmp_ln100_reg_2439_pp2_iter1_reg)
    begin
                ap_predicate_op548_write_state32 <= ((icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln80_fu_1022_p2)
    begin
        if (((icmp_ln80_fu_1022_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_accum_V_load_assign_proc : process(ap_CS_fsm_pp2_stage6, ap_enable_reg_pp2_iter1, ap_block_pp2_stage6, icmp_ln99_8_reg_2613_pp2_iter1_reg, icmp_ln105_reg_2632_pp2_iter1_reg, icmp_ln100_reg_2439_pp2_iter1_reg, accum_V_fu_180, accum_V_27_fu_1865_p3, accum_V_29_fu_1884_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_accum_V_load <= accum_V_29_fu_1884_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_0) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
            ap_sig_allocacmp_accum_V_load <= accum_V_27_fu_1865_p3;
        else 
            ap_sig_allocacmp_accum_V_load <= accum_V_fu_180;
        end if; 
    end process;

    bias_V_fu_632_p1 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);
    bound4_fu_652_p2 <= std_logic_vector(unsigned(p_shl_fu_648_p1) + unsigned(cast2_fu_636_p1));
    cast2_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernelN),36));
    cmp103_fu_1035_p2 <= "1" when (signed(zext_ln80_fu_1031_p1) < signed(sub102_reg_2251)) else "0";
    cmp34_not_mid113_fu_658_p2 <= "1" when (signed(kernelSize) < signed(ap_const_lv32_1)) else "0";
        conv81_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapXSize_fu_933_p2),32));

        conv_i45_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_V_reg_2128),8));

    empty_14_fu_624_p1 <= kernelSize(16 - 1 downto 0);
    empty_15_fu_628_p1 <= mapSizeY(16 - 1 downto 0);
    empty_fu_620_p1 <= mapSizeX(16 - 1 downto 0);

    featureMap_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_block_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage3, ap_enable_reg_pp1_iter4, zext_ln70_fu_1002_p1, ap_block_pp2_stage3, zext_ln215_3_fu_1374_p1, ap_block_pp2_stage4, zext_ln215_7_fu_1499_p1, ap_block_pp2_stage5, zext_ln215_11_fu_1632_p1, zext_ln215_15_fu_1661_p1, zext_ln109_fu_1697_p1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
            featureMap_V_address0 <= zext_ln109_fu_1697_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6))) then 
            featureMap_V_address0 <= zext_ln215_15_fu_1661_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then 
            featureMap_V_address0 <= zext_ln215_11_fu_1632_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then 
            featureMap_V_address0 <= zext_ln215_7_fu_1499_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
            featureMap_V_address0 <= zext_ln215_3_fu_1374_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            featureMap_V_address0 <= zext_ln70_fu_1002_p1(18 - 1 downto 0);
        else 
            featureMap_V_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    featureMap_V_address1_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_block_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage3, zext_ln215_1_fu_1370_p1, ap_block_pp2_stage3, zext_ln215_5_fu_1495_p1, ap_block_pp2_stage4, zext_ln215_9_fu_1624_p1, ap_block_pp2_stage5, zext_ln215_13_fu_1657_p1, zext_ln215_17_fu_1693_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                featureMap_V_address1 <= zext_ln215_17_fu_1693_p1(18 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6))) then 
                featureMap_V_address1 <= zext_ln215_13_fu_1657_p1(18 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then 
                featureMap_V_address1 <= zext_ln215_9_fu_1624_p1(18 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then 
                featureMap_V_address1 <= zext_ln215_5_fu_1495_p1(18 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
                featureMap_V_address1 <= zext_ln215_1_fu_1370_p1(18 - 1 downto 0);
            else 
                featureMap_V_address1 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            featureMap_V_address1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    featureMap_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage6_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter4)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            featureMap_V_ce0 <= ap_const_logic_1;
        else 
            featureMap_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    featureMap_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            featureMap_V_ce1 <= ap_const_logic_1;
        else 
            featureMap_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    featureMap_V_d0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_block_pp2_stage7, trunc_ln69_1_reg_2278_pp1_iter3_reg, ap_enable_reg_pp1_iter4, trunc_ln69_2_fu_1701_p1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
            featureMap_V_d0 <= trunc_ln69_2_fu_1701_p1;
        elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            featureMap_V_d0 <= trunc_ln69_1_reg_2278_pp1_iter3_reg;
        else 
            featureMap_V_d0 <= "XXXX";
        end if; 
    end process;


    featureMap_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, icmp_ln86_reg_2340, icmp_ln99_8_reg_2613, icmp_ln105_reg_2632, cmp103_reg_2313, ap_block_pp2_stage7_11001, ap_block_pp1_stage0_11001, icmp_ln64_reg_2265_pp1_iter3_reg, icmp_ln67_reg_2274_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (cmp103_reg_2313 = ap_const_lv1_1) and (icmp_ln105_reg_2632 = ap_const_lv1_1) and (icmp_ln99_8_reg_2613 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln67_reg_2274_pp1_iter3_reg = ap_const_lv1_0) and (icmp_ln64_reg_2265_pp1_iter3_reg = ap_const_lv1_0)))) then 
            featureMap_V_we0 <= ap_const_logic_1;
        else 
            featureMap_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_V_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_block_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6, ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage8, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_block_pp2_stage2, zext_ln54_4_fu_892_p1, zext_ln215_fu_1097_p1, zext_ln215_2_fu_1165_p1, ap_block_pp2_stage1, zext_ln215_4_fu_1266_p1, ap_block_pp2_stage3, zext_ln215_6_fu_1383_p1, ap_block_pp2_stage4, zext_ln215_8_fu_1503_p1, ap_block_pp2_stage5, zext_ln215_10_fu_1628_p1, zext_ln215_12_fu_1653_p1, zext_ln215_14_fu_1689_p1, zext_ln215_16_fu_1730_p1, ap_block_pp2_stage8)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8))) then 
            filter_V_address0 <= zext_ln215_16_fu_1730_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
            filter_V_address0 <= zext_ln215_14_fu_1689_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6))) then 
            filter_V_address0 <= zext_ln215_12_fu_1653_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5))) then 
            filter_V_address0 <= zext_ln215_10_fu_1628_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4))) then 
            filter_V_address0 <= zext_ln215_8_fu_1503_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
            filter_V_address0 <= zext_ln215_6_fu_1383_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
            filter_V_address0 <= zext_ln215_4_fu_1266_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            filter_V_address0 <= zext_ln215_2_fu_1165_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_V_address0 <= zext_ln215_fu_1097_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filter_V_address0 <= zext_ln54_4_fu_892_p1(14 - 1 downto 0);
        else 
            filter_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    filter_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage8, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage6_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            filter_V_ce0 <= ap_const_logic_1;
        else 
            filter_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_V_d0 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);

    filter_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln52_reg_2211, ap_block_pp0_stage0_11001)
    begin
        if (((or_ln52_reg_2211 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filter_V_we0 <= ap_const_logic_1;
        else 
            filter_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1908_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1908_ce <= ap_const_logic_1;
        else 
            grp_fu_1908_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1908_p0 <= (trunc_ln70_fu_973_p1 & y_reg_461);
    grp_fu_1908_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1915_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1915_ce <= ap_const_logic_1;
        else 
            grp_fu_1915_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1915_p0 <= (trunc_ln215_2_fu_1102_p1 & trunc_ln80_reg_2306);
    grp_fu_1915_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1924_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1924_ce <= ap_const_logic_1;
        else 
            grp_fu_1924_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1924_p0 <= (trunc_ln215_5_fu_1154_p1 & trunc_ln80_reg_2306);
    grp_fu_1924_p1 <= ap_const_lv18_16(6 - 1 downto 0);
    grp_fu_1924_p2 <= std_logic_vector(unsigned(trunc_ln36_fu_1251_p1) + unsigned(ap_const_lv18_1));

    grp_fu_1933_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1933_ce <= ap_const_logic_1;
        else 
            grp_fu_1933_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1933_p0 <= (trunc_ln215_8_fu_1208_p1 & trunc_ln80_reg_2306);
    grp_fu_1933_p1 <= ap_const_lv18_16(6 - 1 downto 0);
    grp_fu_1933_p2 <= std_logic_vector(unsigned(trunc_ln36_reg_2430) + unsigned(ap_const_lv18_2));

    grp_fu_1942_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_1942_ce <= ap_const_logic_1;
        else 
            grp_fu_1942_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1942_p0 <= (trunc_ln215_11_fu_1240_p1 & y_3_cast_reg_2322);
    grp_fu_1942_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1950_ce_assign_proc : process(ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1950_ce <= ap_const_logic_1;
        else 
            grp_fu_1950_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1950_p0 <= (trunc_ln215_14_fu_1327_p1 & y_3_cast_reg_2322);
    grp_fu_1950_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1958_ce_assign_proc : process(ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1958_ce <= ap_const_logic_1;
        else 
            grp_fu_1958_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1958_p0 <= (trunc_ln215_17_fu_1359_p1 & y_3_cast_reg_2322);
    grp_fu_1958_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1966_ce_assign_proc : process(ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1966_ce <= ap_const_logic_1;
        else 
            grp_fu_1966_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1966_p0 <= (trunc_ln215_20_fu_1444_p1 & add86_2_reg_2329);
    grp_fu_1966_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1974_ce_assign_proc : process(ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1974_ce <= ap_const_logic_1;
        else 
            grp_fu_1974_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1974_p0 <= (trunc_ln215_23_fu_1476_p1 & add86_2_reg_2329);
    grp_fu_1974_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1982_ce_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1982_ce <= ap_const_logic_1;
        else 
            grp_fu_1982_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1982_p2 <= 
        conv_i45_reg_2246 when (icmp_ln100_reg_2439(0) = '1') else 
        ap_sig_allocacmp_accum_V_load;

    grp_fu_1991_ce_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1991_ce <= ap_const_logic_1;
        else 
            grp_fu_1991_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1991_p0 <= (trunc_ln215_26_fu_1564_p1 & add86_2_reg_2329);
    grp_fu_1991_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_1999_ce_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_1999_ce <= ap_const_logic_1;
        else 
            grp_fu_1999_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1999_p0 <= (trunc_ln109_fu_1575_p1 & add109_reg_2317);
    grp_fu_1999_p1 <= ap_const_lv18_16(6 - 1 downto 0);

    grp_fu_2007_ce_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage8, ap_block_pp2_stage8_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)))) then 
            grp_fu_2007_ce <= ap_const_logic_1;
        else 
            grp_fu_2007_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2007_p2 <= 
        accum_V_3_fu_1669_p3 when (icmp_ln99_reg_2344(0) = '1') else 
        accum_V_load_reg_2671;

    grp_fu_2016_ce_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage8, ap_block_pp2_stage8_11001, ap_block_pp2_stage6_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)))) then 
            grp_fu_2016_ce <= ap_const_logic_1;
        else 
            grp_fu_2016_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2016_p2 <= 
        accum_V_6_fu_1710_p3 when (icmp_ln99_1_reg_2365(0) = '1') else 
        accum_V_4_reg_2712;

    grp_fu_2025_ce_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_block_pp2_stage7_11001, ap_CS_fsm_pp2_stage8, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2025_ce <= ap_const_logic_1;
        else 
            grp_fu_2025_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2025_p2 <= 
        accum_V_9_fu_1738_p3 when (icmp_ln99_2_reg_2387(0) = '1') else 
        accum_V_7_reg_2744;

    grp_fu_2034_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage8, ap_block_pp2_stage8_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage8)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2034_ce <= ap_const_logic_1;
        else 
            grp_fu_2034_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2034_p2 <= 
        accum_V_12_fu_1761_p3 when (icmp_ln99_3_reg_2408(0) = '1') else 
        accum_V_10_reg_2766;

    grp_fu_2043_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2043_ce <= ap_const_logic_1;
        else 
            grp_fu_2043_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2043_p2 <= 
        accum_V_15_fu_1785_p3 when (icmp_ln99_4_reg_2470(0) = '1') else 
        accum_V_13_reg_2783;

    grp_fu_2052_ce_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_2052_ce <= ap_const_logic_1;
        else 
            grp_fu_2052_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2052_p2 <= 
        accum_V_18_fu_1808_p3 when (icmp_ln99_5_reg_2491_pp2_iter1_reg(0) = '1') else 
        accum_V_16_reg_2800;

    grp_fu_2061_ce_assign_proc : process(ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_2061_ce <= ap_const_logic_1;
        else 
            grp_fu_2061_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2061_p2 <= 
        accum_V_21_fu_1832_p3 when (icmp_ln99_6_reg_2540_pp2_iter1_reg(0) = '1') else 
        accum_V_19_reg_2817;

    grp_fu_2070_ce_assign_proc : process(ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_block_pp2_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            grp_fu_2070_ce <= ap_const_logic_1;
        else 
            grp_fu_2070_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2070_p2 <= 
        accum_V_24_fu_1848_p3 when (icmp_ln99_7_reg_2561_pp2_iter1_reg(0) = '1') else 
        accum_V_22_reg_2834;
    icmp_ln100_fu_1255_p2 <= "1" when (signed(ap_phi_mux_x_5_phi_fu_557_p4) < signed(conv81_reg_2241)) else "0";
    icmp_ln105_fu_1586_p2 <= "1" when (signed(x_5_reg_554) < signed(mapSizeX)) else "0";
    icmp_ln122_fu_1591_p2 <= "1" when (signed(x_5_reg_554) < signed(mapSizeX)) else "0";
    icmp_ln47_fu_685_p2 <= "1" when (indvar_flatten17_reg_406 = bound4_reg_2133) else "0";
    icmp_ln49_fu_696_p2 <= "1" when (indvar_flatten_reg_428 = ap_const_lv4_9) else "0";
    icmp_ln50_fu_724_p2 <= "1" when (x_1_reg_450 = ap_const_lv2_3) else "0";
    icmp_ln52_fu_854_p2 <= "1" when (signed(zext_ln50_fu_851_p1) < signed(kernelSize)) else "0";
    icmp_ln61_fu_913_p2 <= "1" when (y_reg_461 = ap_const_lv2_3) else "0";
    icmp_ln62_fu_956_p2 <= "1" when (signed(x_reg_473) < signed(ap_const_lv32_16)) else "0";
    icmp_ln64_fu_968_p2 <= "1" when (n_1_reg_485 = kernelN) else "0";
    icmp_ln67_fu_985_p2 <= "1" when (signed(ap_phi_mux_x_4_phi_fu_499_p4) > signed(sub_reg_2215)) else "0";
    icmp_ln80_fu_1022_p2 <= "1" when (signed(zext_ln80_1_fu_1018_p1) < signed(outMapYSize_reg_2236)) else "0";
    icmp_ln83_fu_1058_p2 <= "1" when (signed(x_2_reg_531) < signed(ap_const_lv32_16)) else "0";
    icmp_ln86_fu_1064_p2 <= "1" when (signed(ap_phi_mux_kn_phi_fu_547_p4) < signed(ap_const_lv32_600)) else "0";
    icmp_ln99_1_fu_1121_p2 <= "1" when (signed(kn_1_fu_1113_p3) < signed(kernelN)) else "0";
    icmp_ln99_2_fu_1175_p2 <= "1" when (signed(kn_2_fu_1169_p3) < signed(kernelN)) else "0";
    icmp_ln99_3_fu_1227_p2 <= "1" when (signed(kn_3_fu_1219_p3) < signed(kernelN)) else "0";
    icmp_ln99_4_fu_1294_p2 <= "1" when (signed(kn_4_fu_1288_p3) < signed(kernelN)) else "0";
    icmp_ln99_5_fu_1346_p2 <= "1" when (signed(kn_5_fu_1338_p3) < signed(kernelN)) else "0";
    icmp_ln99_6_fu_1411_p2 <= "1" when (signed(kn_6_fu_1405_p3) < signed(kernelN)) else "0";
    icmp_ln99_7_fu_1463_p2 <= "1" when (signed(kn_7_fu_1455_p3) < signed(kernelN)) else "0";
    icmp_ln99_8_fu_1531_p2 <= "1" when (signed(kn_8_fu_1525_p3) < signed(kernelN)) else "0";
    icmp_ln99_fu_1070_p2 <= "1" when (signed(ap_phi_mux_kn_phi_fu_547_p4) < signed(kernelN)) else "0";
    kn_1_fu_1113_p3 <= 
        ap_phi_mux_kn_phi_fu_547_p4 when (icmp_ln99_fu_1070_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_2_fu_1169_p3 <= 
        kn_1_reg_2360 when (icmp_ln99_1_reg_2365(0) = '1') else 
        ap_const_lv32_600;
    kn_3_fu_1219_p3 <= 
        kn_2_fu_1169_p3 when (icmp_ln99_2_fu_1175_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_4_fu_1288_p3 <= 
        kn_3_reg_2403 when (icmp_ln99_3_reg_2408(0) = '1') else 
        ap_const_lv32_600;
    kn_5_fu_1338_p3 <= 
        kn_4_fu_1288_p3 when (icmp_ln99_4_fu_1294_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_6_fu_1405_p3 <= 
        kn_5_reg_2486 when (icmp_ln99_5_reg_2491(0) = '1') else 
        ap_const_lv32_600;
    kn_7_fu_1455_p3 <= 
        kn_6_fu_1405_p3 when (icmp_ln99_6_fu_1411_p2(0) = '1') else 
        ap_const_lv32_600;
    kn_8_fu_1525_p3 <= 
        kn_7_reg_2556 when (icmp_ln99_7_reg_2561(0) = '1') else 
        ap_const_lv32_600;
    or_ln49_fu_742_p2 <= (icmp_ln49_fu_696_p2 or and_ln47_fu_730_p2);
    or_ln52_fu_865_p2 <= (xor_ln52_fu_859_p2 or select_ln49_2_fu_844_p3);
    outMapXSize_fu_933_p2 <= std_logic_vector(unsigned(sub_ln78_fu_929_p2) + unsigned(ap_const_lv16_1));
        outMapYSize_cast_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapYSize_fu_923_p2),17));

    outMapYSize_fu_923_p2 <= std_logic_vector(unsigned(sub_ln77_fu_919_p2) + unsigned(ap_const_lv16_1));
    p_shl1_cast_fu_871_p3 <= (trunc_ln54_1_reg_2206 & ap_const_lv2_0);
    p_shl_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_640_p3),36));
    rev139_fu_679_p2 <= (slt_fu_674_p2 xor ap_const_lv1_1);
    rev141_fu_838_p2 <= (slt140_fu_833_p2 xor ap_const_lv1_1);
    select_ln47_1_fu_710_p3 <= 
        add_ln47_fu_690_p2 when (icmp_ln49_fu_696_p2(0) = '1') else 
        ap_phi_mux_n_phi_fu_421_p4;
    select_ln47_2_fu_808_p3 <= 
        cmp34_not_mid113_reg_2138 when (icmp_ln49_reg_2157(0) = '1') else 
        rev139_reg_2148;
    select_ln47_fu_702_p3 <= 
        ap_const_lv2_0 when (icmp_ln49_fu_696_p2(0) = '1') else 
        ap_phi_mux_y_1_phi_fu_443_p4;
    select_ln49_1_fu_756_p3 <= 
        add_ln49_fu_736_p2 when (and_ln47_fu_730_p2(0) = '1') else 
        select_ln47_fu_702_p3;
    select_ln49_2_fu_844_p3 <= 
        rev141_fu_838_p2 when (and_ln47_reg_2169(0) = '1') else 
        select_ln47_2_fu_808_p3;
    select_ln49_3_fu_776_p3 <= 
        ap_const_lv4_1 when (icmp_ln49_fu_696_p2(0) = '1') else 
        add_ln49_1_fu_770_p2;
    select_ln49_fu_748_p3 <= 
        ap_const_lv2_0 when (or_ln49_fu_742_p2(0) = '1') else 
        x_1_reg_450;
        sext_ln47_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln54_fu_798_p2),36));

    slt140_fu_833_p2 <= "1" when (signed(zext_ln49_1_fu_830_p1) < signed(kernelSize)) else "0";
    slt_fu_674_p2 <= "1" when (signed(zext_ln49_fu_670_p1) < signed(kernelSize)) else "0";

    strm_in_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_ln52_reg_2211, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, icmp_ln64_fu_968_p2, icmp_ln67_fu_985_p2, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_block_pp2_stage7, icmp_ln86_reg_2340, icmp_ln99_8_reg_2613, icmp_ln105_reg_2632, cmp103_reg_2313, strm_in_TVALID_int_regslice)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (cmp103_reg_2313 = ap_const_lv1_1) and (icmp_ln105_reg_2632 = ap_const_lv1_1) and (icmp_ln99_8_reg_2613 = ap_const_lv1_1) and (icmp_ln86_reg_2340 = ap_const_lv1_1)) or ((icmp_ln67_fu_985_p2 = ap_const_lv1_0) and (icmp_ln64_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((or_ln52_reg_2211 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            strm_in_TDATA_blk_n <= strm_in_TVALID_int_regslice;
        else 
            strm_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_TREADY <= regslice_both_strm_in_V_data_V_U_ack_in;

    strm_in_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, or_ln52_reg_2211, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp2_iter0, ap_predicate_op458_read_state23, ap_block_pp2_stage7_11001, ap_block_pp0_stage0_11001, ap_predicate_op171_read_state8, ap_block_pp1_stage0_11001, strm_in_TVALID_int_regslice)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_predicate_op458_read_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op171_read_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((or_ln52_reg_2211 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            strm_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            strm_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7, ap_CS_fsm_pp2_stage6, ap_enable_reg_pp2_iter1, ap_block_pp2_stage6, icmp_ln99_8_reg_2613_pp2_iter1_reg, icmp_ln105_reg_2632_pp2_iter1_reg, icmp_ln100_reg_2439_pp2_iter1_reg, strm_out_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln100_reg_2439_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln105_reg_2632_pp2_iter1_reg = ap_const_lv1_1) and (icmp_ln99_8_reg_2613_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
            strm_out_TDATA_blk_n <= strm_out_TREADY_int_regslice;
        else 
            strm_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        strm_out_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(signed(accum_V_29_fu_1884_p3),32));

    strm_out_TVALID <= regslice_both_strm_out_V_data_V_U_vld_out;

    strm_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp2_stage6, ap_enable_reg_pp2_iter1, ap_predicate_op546_write_state31, ap_block_pp2_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_predicate_op546_write_state31 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            strm_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            strm_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub102_fu_950_p2 <= std_logic_vector(signed(outMapYSize_cast_fu_939_p1) + signed(ap_const_lv17_1FFFF));
    sub_fu_902_p2 <= std_logic_vector(unsigned(mapSizeX) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_ln54_1_fu_878_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_871_p3) - unsigned(trunc_ln54_reg_2201));
    sub_ln54_fu_798_p2 <= std_logic_vector(unsigned(zext_ln54_1_fu_794_p1) - unsigned(zext_ln54_fu_784_p1));
    sub_ln77_fu_919_p2 <= std_logic_vector(unsigned(empty_15_reg_2123) - unsigned(empty_14_reg_2117));
    sub_ln78_fu_929_p2 <= std_logic_vector(unsigned(empty_reg_2112) - unsigned(empty_14_reg_2117));
    tmp_10_cast_fu_1270_p3 <= (trunc_ln215_10_reg_2420 & ap_const_lv3_0);
    tmp_12_cast_fu_1307_p3 <= (trunc_ln215_13_fu_1303_p1 & ap_const_lv3_0);
    tmp_14_cast_fu_1387_p3 <= (trunc_ln215_16_reg_2503 & ap_const_lv3_0);
    tmp_16_cast_fu_1424_p3 <= (trunc_ln215_19_fu_1420_p1 & ap_const_lv3_0);
    tmp_18_cast_fu_1507_p3 <= (trunc_ln215_22_reg_2573 & ap_const_lv3_0);
    tmp_1_fu_787_p3 <= (select_ln47_1_reg_2162 & ap_const_lv2_0);
    tmp_20_cast_fu_1544_p3 <= (trunc_ln215_25_fu_1540_p1 & ap_const_lv3_0);
    tmp_2_fu_1871_p3 <= accum_V_27_fu_1865_p3(7 downto 7);
    tmp_4_cast_fu_1083_p3 <= (trunc_ln215_1_fu_1079_p1 & ap_const_lv3_0);
    tmp_6_cast_fu_1134_p3 <= (trunc_ln215_4_fu_1130_p1 & ap_const_lv3_0);
    tmp_8_cast_fu_1188_p3 <= (trunc_ln215_7_fu_1184_p1 & ap_const_lv3_0);
    tmp_fu_640_p3 <= (kernelN & ap_const_lv3_0);
    trunc_ln109_fu_1575_p1 <= kn_8_fu_1525_p3(16 - 1 downto 0);
    trunc_ln215_10_fu_1236_p1 <= kn_3_fu_1219_p3(11 - 1 downto 0);
    trunc_ln215_11_fu_1240_p1 <= kn_3_fu_1219_p3(16 - 1 downto 0);
    trunc_ln215_12_fu_1299_p1 <= kn_4_fu_1288_p3(14 - 1 downto 0);
    trunc_ln215_13_fu_1303_p1 <= kn_4_fu_1288_p3(11 - 1 downto 0);
    trunc_ln215_14_fu_1327_p1 <= kn_4_fu_1288_p3(16 - 1 downto 0);
    trunc_ln215_15_fu_1351_p1 <= kn_5_fu_1338_p3(14 - 1 downto 0);
    trunc_ln215_16_fu_1355_p1 <= kn_5_fu_1338_p3(11 - 1 downto 0);
    trunc_ln215_17_fu_1359_p1 <= kn_5_fu_1338_p3(16 - 1 downto 0);
    trunc_ln215_18_fu_1416_p1 <= kn_6_fu_1405_p3(14 - 1 downto 0);
    trunc_ln215_19_fu_1420_p1 <= kn_6_fu_1405_p3(11 - 1 downto 0);
    trunc_ln215_1_fu_1079_p1 <= ap_phi_mux_kn_phi_fu_547_p4(11 - 1 downto 0);
    trunc_ln215_20_fu_1444_p1 <= kn_6_fu_1405_p3(16 - 1 downto 0);
    trunc_ln215_21_fu_1468_p1 <= kn_7_fu_1455_p3(14 - 1 downto 0);
    trunc_ln215_22_fu_1472_p1 <= kn_7_fu_1455_p3(11 - 1 downto 0);
    trunc_ln215_23_fu_1476_p1 <= kn_7_fu_1455_p3(16 - 1 downto 0);
    trunc_ln215_24_fu_1536_p1 <= kn_8_fu_1525_p3(14 - 1 downto 0);
    trunc_ln215_25_fu_1540_p1 <= kn_8_fu_1525_p3(11 - 1 downto 0);
    trunc_ln215_26_fu_1564_p1 <= kn_8_fu_1525_p3(16 - 1 downto 0);
    trunc_ln215_2_fu_1102_p1 <= ap_phi_mux_kn_phi_fu_547_p4(16 - 1 downto 0);
    trunc_ln215_3_fu_1126_p1 <= kn_1_fu_1113_p3(14 - 1 downto 0);
    trunc_ln215_4_fu_1130_p1 <= kn_1_fu_1113_p3(11 - 1 downto 0);
    trunc_ln215_5_fu_1154_p1 <= kn_1_fu_1113_p3(16 - 1 downto 0);
    trunc_ln215_6_fu_1180_p1 <= kn_2_fu_1169_p3(14 - 1 downto 0);
    trunc_ln215_7_fu_1184_p1 <= kn_2_fu_1169_p3(11 - 1 downto 0);
    trunc_ln215_8_fu_1208_p1 <= kn_2_fu_1169_p3(16 - 1 downto 0);
    trunc_ln215_9_fu_1232_p1 <= kn_3_fu_1219_p3(14 - 1 downto 0);
    trunc_ln215_fu_1075_p1 <= ap_phi_mux_kn_phi_fu_547_p4(14 - 1 downto 0);
    trunc_ln36_fu_1251_p1 <= ap_phi_mux_x_5_phi_fu_557_p4(18 - 1 downto 0);
    trunc_ln54_1_fu_826_p1 <= add_ln54_fu_816_p2(12 - 1 downto 0);
    trunc_ln54_fu_822_p1 <= add_ln54_fu_816_p2(14 - 1 downto 0);
    trunc_ln69_1_fu_990_p1 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln69_2_fu_1701_p1 <= strm_in_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln70_1_fu_994_p1 <= x_4_reg_496(18 - 1 downto 0);
    trunc_ln70_fu_973_p1 <= n_1_reg_485(16 - 1 downto 0);
    trunc_ln80_fu_1027_p1 <= y_2_reg_520(2 - 1 downto 0);
    x_3_fu_1006_p2 <= std_logic_vector(unsigned(x_4_reg_496) + unsigned(ap_const_lv32_1));
    x_6_fu_1902_p2 <= std_logic_vector(unsigned(x_5_reg_554) + unsigned(ap_const_lv32_1));
    x_8_fu_1602_p3 <= 
        ap_const_lv32_16 when (xor_ln122_fu_1596_p2(0) = '1') else 
        x_5_reg_554;
    xor_ln122_fu_1596_p2 <= (icmp_ln122_fu_1591_p2 xor ap_const_lv1_1);
    xor_ln47_fu_718_p2 <= (icmp_ln49_fu_696_p2 xor ap_const_lv1_1);
    xor_ln52_fu_859_p2 <= (icmp_ln52_fu_854_p2 xor ap_const_lv1_1);
    y_3_cast_fu_1046_p2 <= std_logic_vector(unsigned(trunc_ln80_fu_1027_p1) + unsigned(ap_const_lv2_1));
    y_3_fu_1012_p2 <= std_logic_vector(unsigned(y_2_reg_520) + unsigned(ap_const_lv15_1));
    zext_ln109_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1999_p3),64));
    zext_ln215_10_fu_1628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_15_reg_2535),64));
    zext_ln215_11_fu_1632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1958_p3),64));
    zext_ln215_12_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_18_reg_2546),64));
    zext_ln215_13_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1966_p3),64));
    zext_ln215_14_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_21_reg_2608),64));
    zext_ln215_15_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1974_p3),64));
    zext_ln215_16_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_24_reg_2617),64));
    zext_ln215_17_fu_1693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1991_p3),64));
    zext_ln215_1_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1915_p3),64));
    zext_ln215_2_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_3_reg_2372),64));
    zext_ln215_3_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1924_p3),64));
    zext_ln215_4_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_6_reg_2393),64));
    zext_ln215_5_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1933_p3),64));
    zext_ln215_6_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_9_reg_2465),64));
    zext_ln215_7_fu_1499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1942_p3),64));
    zext_ln215_8_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_12_reg_2476),64));
    zext_ln215_9_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1950_p3),64));
    zext_ln215_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_fu_1091_p2),64));
    zext_ln49_1_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln49_reg_2174),32));
    zext_ln49_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_y_1_phi_fu_443_p4),32));
    zext_ln50_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_reg_2179),32));
    zext_ln54_1_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_787_p3),35));
    zext_ln54_2_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_1_reg_2185),36));
    zext_ln54_3_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_reg_2179_pp0_iter1_reg),14));
    zext_ln54_4_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_1_fu_886_p2),64));
    zext_ln54_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln47_1_reg_2162),35));
    zext_ln70_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln70_reg_2288),64));
    zext_ln80_1_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_2_reg_520),16));
    zext_ln80_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_2_reg_520),17));
end behav;
