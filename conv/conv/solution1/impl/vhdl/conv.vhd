-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    strm_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_TVALID : IN STD_LOGIC;
    strm_in_TREADY : OUT STD_LOGIC;
    strm_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    strm_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    strm_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    strm_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_TVALID : OUT STD_LOGIC;
    strm_out_TREADY : IN STD_LOGIC;
    strm_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    strm_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    strm_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    filterN : IN STD_LOGIC_VECTOR (31 downto 0);
    kernelN : IN STD_LOGIC_VECTOR (31 downto 0);
    kernelSize : IN STD_LOGIC_VECTOR (31 downto 0);
    mapSizeX : IN STD_LOGIC_VECTOR (31 downto 0);
    mapSizeY : IN STD_LOGIC_VECTOR (31 downto 0);
    relu : IN STD_LOGIC );
end;


architecture behav of conv is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv_conv,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=8408,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=3890,HLS_SYN_LUT=3332,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv22_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal strm_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln54_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln59_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln76_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln103_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_fu_1410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_fu_1420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal icmp_ln103_reg_1955 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal icmp_ln103_reg_1955_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_3_reg_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_5_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_8_reg_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_12_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_12_reg_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_10_reg_748 : STD_LOGIC_VECTOR (31 downto 0);
    signal ky_2_reg_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal kx_1_reg_772 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_reg_783 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_13_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_13_reg_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_11_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal ky_4_reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal kx_3_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1000 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1000_pp2_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op304_read_state22 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state24_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state30_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state31_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state32_pp2_stage0_iter10 : BOOLEAN;
    signal ap_predicate_op385_write_state33 : BOOLEAN;
    signal ap_block_state33_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state33_io : BOOLEAN;
    signal ap_predicate_op386_write_state34 : BOOLEAN;
    signal ap_block_state34_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state34_io : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal reg_1000_pp2_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1000_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1000_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1000_pp2_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1000_pp2_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_1005_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_1732 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_23_fu_1009_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_23_reg_1738 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_24_fu_1013_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_24_reg_1743 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_25_fu_1017_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_25_reg_1750 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_26_fu_1021_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_26_reg_1756 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_27_fu_1025_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_27_reg_1761 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_28_fu_1029_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_28_reg_1767 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_5_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln50_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal n_3_fu_1072_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_10_fu_1123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op125_read_state5 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal y_7_fu_1129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal y_5_fu_1135_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_5_reg_1817 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln72_fu_1147_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln72_reg_1825 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln72_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv50_fu_1171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv50_reg_1837 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv63_fu_1179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv63_reg_1842 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub86_fu_1187_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub86_reg_1847 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_V_6_fu_1192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_V_6_reg_1857 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub91_cast_fu_1202_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub91_cast_reg_1862 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub105_fu_1206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub105_reg_1867 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln93_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln93_reg_1873 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln74_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln76_reg_1882 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op183_read_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln76_reg_1882_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_1882_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_1882_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_1882_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_1882_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1891 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1891_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1891_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1891_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1891_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1891_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_1895 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_1895_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_1895_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_1895_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_1895_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_1895_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_1899_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_1899_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_1899_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_1899_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_1899_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal n_7_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln76_fu_1263_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln76_reg_1909 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln76_reg_1909_pp1_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln76_reg_1909_pp1_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln76_reg_1909_pp1_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal x_5_fu_1271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal y_8_fu_1309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln95_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_7_fu_1331_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln97_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_8_fu_1343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln99_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ky_3_fu_1355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1955_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_1_fu_1367_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_1_reg_1959 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_1_reg_1959_pp2_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_1_reg_1959_pp2_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_1_reg_1959_pp2_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_2_fu_1371_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_2_reg_1964 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_2_reg_1964_pp2_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_5_fu_1379_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_5_reg_1974 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_5_reg_1974_pp2_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_5_reg_1974_pp2_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_5_reg_1974_pp2_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_5_reg_1974_pp2_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_6_fu_1383_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln37_6_reg_1980 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln37_6_reg_1980_pp2_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln37_6_reg_1980_pp2_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1990_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1994_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1998_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2002_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_2006_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_2010_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_reg_2014_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_fu_1443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_reg_2019_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln116_fu_1448_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln116_reg_2025 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln116_reg_2025_pp2_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln116_reg_2025_pp2_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln119_reg_2030_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_2030_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_reg_2034_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_reg_2038_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_fu_1515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpo_last_V_reg_2042_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal kn_2_fu_1521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln37_fu_1527_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_reg_2052 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_reg_2052_pp2_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_reg_2052_pp2_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_reg_2052_pp2_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_reg_2052_pp2_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln37_4_fu_1531_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_4_reg_2057 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_4_reg_2057_pp2_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_4_reg_2057_pp2_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_4_reg_2057_pp2_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln37_4_reg_2057_pp2_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1660_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln116_3_reg_2062 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal add_ln116_2_fu_1551_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln116_2_fu_1551_p2 : signal is "no";
    signal add_ln116_2_reg_2067 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1675_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln122_1_reg_2072 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal featureMap_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_reg_2087 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal filter_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_reg_2092 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1573_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_reg_2107 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_V_5_fu_1619_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_V_5_reg_2112 : STD_LOGIC_VECTOR (63 downto 0);
    signal kx_2_fu_1636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state22 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal filter_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal filter_V_ce0 : STD_LOGIC;
    signal filter_V_we0 : STD_LOGIC;
    signal featureMap_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal featureMap_V_ce0 : STD_LOGIC;
    signal featureMap_V_we0 : STD_LOGIC;
    signal featureMap_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal featureMap_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal featureMap_V_ce1 : STD_LOGIC;
    signal f_reg_271 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_reg_283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln48_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_1_reg_295 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_reg_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_reg_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_2_reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_2_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_3_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y_4_phi_fu_411_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_n_4_phi_fu_433_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_f_4_phi_fu_455_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_x_4_phi_fu_390_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_reg_473 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_x_3_phi_fu_499_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_x_8_reg_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_n_6_phi_fu_537_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_n_6_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_3_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal regslice_both_strm_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal icmp_ln93_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_2_reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_9_reg_583 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_6_reg_595 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_6_reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_10_reg_618 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_9_reg_630 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_7_reg_642 : STD_LOGIC_VECTOR (31 downto 0);
    signal ky_reg_653 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_11_reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_11_reg_677 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_9_reg_689 : STD_LOGIC_VECTOR (31 downto 0);
    signal ky_1_reg_701 : STD_LOGIC_VECTOR (31 downto 0);
    signal kx_reg_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y_12_phi_fu_728_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_x_12_phi_fu_740_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_f_10_phi_fu_752_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ky_2_phi_fu_764_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_kx_1_phi_fu_775_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_y_13_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_x_13_reg_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_f_11_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_ky_4_reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_kx_3_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_kn_1_phi_fu_963_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_kn_1_reg_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln63_fu_1113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln83_fu_1267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_1555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_1_fu_1559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln122_fu_1563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal count_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_1_fu_1107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_V_fu_152 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_accum_V_load : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_V_4_fu_1598_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal tmp_1_fu_1038_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln90_fu_1151_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln91_fu_1161_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapYSize_fu_1155_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapXSize_fu_1165_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outMapYSize_cast_fu_1175_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub91_fu_1196_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal outMapXSize_cast_fu_1183_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub120_fu_1211_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_1221_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1647_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_1277_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_4_fu_1293_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_1315_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal or_ln115_fu_1425_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln115_1_fu_1431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln37_7_fu_1387_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln119_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_1_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln130_1_fu_1503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln130_fu_1509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln122_fu_1538_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1666_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1683_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln115_fu_1582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal accum_V_2_fu_1586_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_V_3_fu_1593_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1606_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln126_fu_1614_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln126_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1642_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1642_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1647_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1655_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1660_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1655_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1666_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1675_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln116_2_fu_1547_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1573_ce : STD_LOGIC;
    signal grp_fu_1642_ce : STD_LOGIC;
    signal grp_fu_1647_ce : STD_LOGIC;
    signal grp_fu_1655_ce : STD_LOGIC;
    signal grp_fu_1660_ce : STD_LOGIC;
    signal grp_fu_1666_ce : STD_LOGIC;
    signal grp_fu_1675_ce : STD_LOGIC;
    signal grp_fu_1683_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal regslice_both_strm_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal strm_in_TVALID_int_regslice : STD_LOGIC;
    signal strm_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_strm_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_strm_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_strm_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_strm_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal strm_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_strm_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_in_V_last_V_U_ack_in : STD_LOGIC;
    signal strm_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal strm_out_TVALID_int_regslice : STD_LOGIC;
    signal strm_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_strm_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_strm_out_V_last_V_U_vld_out : STD_LOGIC;
    signal grp_fu_1666_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1675_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component conv_mul_7s_7s_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component conv_mul_32s_32s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component conv_mul_mul_11s_11s_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component conv_ama_addmuladd_11s_2ns_11s_11ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component conv_mac_muladd_7s_7s_7ns_7_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component conv_ama_addmuladd_7ns_7ns_7s_7ns_7_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        din3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component conv_filter_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_featureMap_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    filter_V_U : component conv_filter_V
    generic map (
        DataWidth => 32,
        AddressRange => 90,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => filter_V_address0,
        ce0 => filter_V_ce0,
        we0 => filter_V_we0,
        d0 => strm_in_TDATA_int_regslice,
        q0 => filter_V_q0);

    featureMap_V_U : component conv_featureMap_V
    generic map (
        DataWidth => 32,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => featureMap_V_address0,
        ce0 => featureMap_V_ce0,
        we0 => featureMap_V_we0,
        d0 => featureMap_V_d0,
        address1 => featureMap_V_address1,
        ce1 => featureMap_V_ce1,
        q1 => featureMap_V_q1);

    mul_7s_7s_7_1_1_U1 : component conv_mul_7s_7s_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        dout_WIDTH => 7)
    port map (
        din0 => add_ln116_3_reg_2062,
        din1 => empty_reg_1732,
        dout => mul_ln116_2_fu_1547_p2);

    mul_32s_32s_64_2_1_U2 : component conv_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => rhs_reg_2092,
        din1 => lhs_reg_2087,
        ce => grp_fu_1573_ce,
        dout => grp_fu_1573_p2);

    mul_mul_11s_11s_11_4_1_U3 : component conv_mul_mul_11s_11s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1642_p0,
        din1 => empty_25_reg_1750,
        ce => grp_fu_1642_ce,
        dout => grp_fu_1642_p2);

    ama_addmuladd_11s_2ns_11s_11ns_11_4_1_U4 : component conv_ama_addmuladd_11s_2ns_11s_11ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1642_p2,
        din1 => grp_fu_1647_p1,
        din2 => empty_24_reg_1743,
        din3 => trunc_ln76_reg_1909_pp1_iter4_reg,
        ce => grp_fu_1647_ce,
        dout => grp_fu_1647_p4);

    mul_mul_11s_11s_11_4_1_U5 : component conv_mul_mul_11s_11s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1655_p0,
        din1 => empty_25_reg_1750,
        ce => grp_fu_1655_ce,
        dout => grp_fu_1655_p2);

    mac_muladd_7s_7s_7ns_7_4_1_U6 : component conv_mac_muladd_7s_7s_7ns_7_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        dout_WIDTH => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1660_p0,
        din1 => empty_23_reg_1738,
        din2 => trunc_ln37_2_reg_1964_pp2_iter1_reg,
        ce => grp_fu_1660_ce,
        dout => grp_fu_1660_p3);

    ama_addmuladd_11s_2ns_11s_11ns_11_4_1_U7 : component conv_ama_addmuladd_11s_2ns_11s_11ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1655_p2,
        din1 => grp_fu_1666_p1,
        din2 => empty_24_reg_1743,
        din3 => trunc_ln37_5_reg_1974_pp2_iter4_reg,
        ce => grp_fu_1666_ce,
        dout => grp_fu_1666_p4);

    ama_addmuladd_11s_2ns_11s_11ns_11_4_1_U8 : component conv_ama_addmuladd_11s_2ns_11s_11ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1655_p2,
        din1 => grp_fu_1675_p1,
        din2 => empty_24_reg_1743,
        din3 => trunc_ln37_5_reg_1974_pp2_iter4_reg,
        ce => grp_fu_1675_ce,
        dout => grp_fu_1675_p4);

    ama_addmuladd_7ns_7ns_7s_7ns_7_4_1_U9 : component conv_ama_addmuladd_7ns_7ns_7s_7ns_7_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        din3_WIDTH => 7,
        dout_WIDTH => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mul_ln116_2_fu_1547_p2,
        din1 => trunc_ln37_1_reg_1959_pp2_iter3_reg,
        din2 => empty_reg_1732,
        din3 => trunc_ln37_reg_2052_pp2_iter5_reg,
        ce => grp_fu_1683_ce,
        dout => grp_fu_1683_p4);

    regslice_both_strm_in_V_data_V_U : component conv_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TDATA,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_data_V_U_ack_in,
        data_out => strm_in_TDATA_int_regslice,
        vld_out => strm_in_TVALID_int_regslice,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_data_V_U_apdone_blk);

    regslice_both_strm_in_V_keep_V_U : component conv_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TKEEP,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_keep_V_U_ack_in,
        data_out => strm_in_TKEEP_int_regslice,
        vld_out => regslice_both_strm_in_V_keep_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_keep_V_U_apdone_blk);

    regslice_both_strm_in_V_strb_V_U : component conv_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TSTRB,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_strb_V_U_ack_in,
        data_out => strm_in_TSTRB_int_regslice,
        vld_out => regslice_both_strm_in_V_strb_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_strb_V_U_apdone_blk);

    regslice_both_strm_in_V_last_V_U : component conv_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_in_TLAST,
        vld_in => strm_in_TVALID,
        ack_in => regslice_both_strm_in_V_last_V_U_ack_in,
        data_out => strm_in_TLAST_int_regslice,
        vld_out => regslice_both_strm_in_V_last_V_U_vld_out,
        ack_out => strm_in_TREADY_int_regslice,
        apdone_blk => regslice_both_strm_in_V_last_V_U_apdone_blk);

    regslice_both_strm_out_V_data_V_U : component conv_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => strm_out_TDATA_int_regslice,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => strm_out_TREADY_int_regslice,
        data_out => strm_out_TDATA,
        vld_out => regslice_both_strm_out_V_data_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_data_V_U_apdone_blk);

    regslice_both_strm_out_V_keep_V_U : component conv_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_keep_V_U_ack_in_dummy,
        data_out => strm_out_TKEEP,
        vld_out => regslice_both_strm_out_V_keep_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_keep_V_U_apdone_blk);

    regslice_both_strm_out_V_strb_V_U : component conv_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_strb_V_U_ack_in_dummy,
        data_out => strm_out_TSTRB,
        vld_out => regslice_both_strm_out_V_strb_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_strb_V_U_apdone_blk);

    regslice_both_strm_out_V_last_V_U : component conv_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmpo_last_V_reg_2042_pp2_iter10_reg,
        vld_in => strm_out_TVALID_int_regslice,
        ack_in => regslice_both_strm_out_V_last_V_U_ack_in_dummy,
        data_out => strm_out_TLAST,
        vld_out => regslice_both_strm_out_V_last_V_U_vld_out,
        ack_out => strm_out_TREADY,
        apdone_blk => regslice_both_strm_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln74_fu_1231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif (((icmp_ln74_fu_1231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state22) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state22)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state22);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    accum_V_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter10_reg) and (ap_const_lv1_0 = and_ln125_reg_2038_pp2_iter10_reg) and (icmp_ln113_reg_2010_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_0 = and_ln119_reg_2030_pp2_iter10_reg) and (icmp_ln113_reg_2010_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1)))) then 
                accum_V_fu_152 <= accum_V_4_fu_1598_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter11_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter11_reg) and (icmp_ln113_reg_2010_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
                accum_V_fu_152 <= accum_V_5_reg_2112;
            end if; 
        end if;
    end process;

    count_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (strm_in_TVALID_int_regslice = ap_const_logic_1))) then 
                count_fu_140 <= ap_const_lv32_0;
            elsif ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                count_fu_140 <= count_1_fu_1107_p2;
            end if; 
        end if;
    end process;

    f_10_reg_748_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
                f_10_reg_748 <= f_11_reg_862;
            elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                f_10_reg_748 <= f_9_reg_689;
            end if; 
        end if;
    end process;

    f_11_reg_862_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                f_11_reg_862 <= ap_const_lv32_20;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_0 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                f_11_reg_862 <= ap_phi_mux_f_10_phi_fu_752_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                f_11_reg_862 <= ap_phi_reg_pp2_iter0_f_11_reg_862;
            end if; 
        end if;
    end process;

    f_1_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_1066_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                f_1_reg_295 <= f_2_reg_329;
            elsif (((icmp_ln48_fu_1048_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                f_1_reg_295 <= f_reg_271;
            end if; 
        end if;
    end process;

    f_2_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                f_2_reg_329 <= f_3_reg_375;
            elsif (((icmp_ln50_fu_1054_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                f_2_reg_329 <= f_1_reg_295;
            end if; 
        end if;
    end process;

    f_3_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                f_3_reg_375 <= ap_phi_mux_f_4_phi_fu_455_p10;
            elsif (((icmp_ln52_fu_1066_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                f_3_reg_375 <= f_2_reg_329;
            end if; 
        end if;
    end process;

    f_6_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln99_fu_1337_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                f_6_reg_606 <= f_8_fu_1343_p2;
            elsif (((icmp_ln95_fu_1303_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                f_6_reg_606 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    f_7_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln101_fu_1349_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                f_7_reg_642 <= f_9_reg_689;
            elsif (((icmp_ln97_fu_1325_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                f_7_reg_642 <= f_6_reg_606;
            end if; 
        end if;
    end process;

    f_9_reg_689_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                f_9_reg_689 <= f_10_reg_748;
            elsif (((icmp_ln99_fu_1337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                f_9_reg_689 <= f_7_reg_642;
            end if; 
        end if;
    end process;

    f_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_fu_1054_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                f_reg_271 <= f_5_fu_1060_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (strm_in_TVALID_int_regslice = ap_const_logic_1))) then 
                f_reg_271 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    kn_reg_783_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                kn_reg_783 <= kn_2_fu_1521_p2;
            elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                kn_reg_783 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    kx_1_reg_772_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
                kx_1_reg_772 <= kx_3_reg_928;
            elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                kx_1_reg_772 <= kx_reg_712;
            end if; 
        end if;
    end process;

    kx_3_reg_928_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                kx_3_reg_928 <= ap_const_lv32_3;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_0 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                kx_3_reg_928 <= ap_phi_mux_kx_1_phi_fu_775_p4;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                kx_3_reg_928 <= sub86_reg_1847;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                kx_3_reg_928 <= ap_phi_reg_pp2_iter0_kx_3_reg_928;
            end if; 
        end if;
    end process;

    kx_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                kx_reg_712 <= kx_2_fu_1636_p2;
            elsif (((icmp_ln99_fu_1337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                kx_reg_712 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ky_1_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                ky_1_reg_701 <= ky_2_reg_760;
            elsif (((icmp_ln99_fu_1337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                ky_1_reg_701 <= ky_reg_653;
            end if; 
        end if;
    end process;

    ky_2_reg_760_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
                ky_2_reg_760 <= ky_4_reg_896;
            elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                ky_2_reg_760 <= ky_1_reg_701;
            end if; 
        end if;
    end process;

    ky_4_reg_896_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                ky_4_reg_896 <= ap_const_lv32_3;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_0 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                ky_4_reg_896 <= ap_phi_mux_ky_2_phi_fu_764_p4;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                ky_4_reg_896 <= sub86_reg_1847;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                ky_4_reg_896 <= ap_phi_reg_pp2_iter0_ky_4_reg_896;
            end if; 
        end if;
    end process;

    ky_reg_653_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln101_fu_1349_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                ky_reg_653 <= ky_3_fu_1355_p2;
            elsif (((icmp_ln97_fu_1325_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                ky_reg_653 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    n_1_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                n_1_reg_318 <= n_2_reg_363;
            elsif (((icmp_ln50_fu_1054_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                n_1_reg_318 <= n_reg_283;
            end if; 
        end if;
    end process;

    n_2_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                n_2_reg_363 <= ap_phi_mux_n_4_phi_fu_433_p10;
            elsif (((icmp_ln52_fu_1066_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                n_2_reg_363 <= n_1_reg_318;
            end if; 
        end if;
    end process;

    n_5_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                n_5_reg_507 <= n_7_fu_1257_p2;
            elsif (((icmp_ln74_fu_1231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                n_5_reg_507 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    n_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_1066_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                n_reg_283 <= n_3_fu_1072_p2;
            elsif (((icmp_ln48_fu_1048_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                n_reg_283 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_11_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                x_11_reg_677 <= x_12_reg_736;
            elsif (((icmp_ln99_fu_1337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                x_11_reg_677 <= x_9_reg_630;
            end if; 
        end if;
    end process;

    x_12_reg_736_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
                x_12_reg_736 <= x_13_reg_828;
            elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                x_12_reg_736 <= x_11_reg_677;
            end if; 
        end if;
    end process;

    x_13_reg_828_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                x_13_reg_828 <= ap_const_lv32_400;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_0 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                x_13_reg_828 <= ap_phi_mux_x_12_phi_fu_740_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                x_13_reg_828 <= ap_phi_reg_pp2_iter0_x_13_reg_828;
            end if; 
        end if;
    end process;

    x_1_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                x_1_reg_341 <= x_10_fu_1123_p2;
            elsif (((icmp_ln52_fu_1066_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                x_1_reg_341 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_2_reg_571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln97_fu_1325_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                x_2_reg_571 <= x_7_fu_1331_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln93_fu_1287_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
                x_2_reg_571 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_3_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln76_reg_1882 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                x_3_reg_496 <= x_8_reg_518;
            elsif (((icmp_ln74_fu_1231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                x_3_reg_496 <= x_reg_484;
            end if; 
        end if;
    end process;

    x_6_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln99_fu_1337_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                x_6_reg_595 <= x_9_reg_630;
            elsif (((icmp_ln95_fu_1303_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                x_6_reg_595 <= x_2_reg_571;
            end if; 
        end if;
    end process;

    x_8_reg_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1247_p2 = ap_const_lv1_0) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                x_8_reg_518 <= ap_const_lv32_400;
            elsif ((((icmp_ln80_fu_1252_p2 = ap_const_lv1_1) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln80_fu_1252_p2 = ap_const_lv1_0) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                x_8_reg_518 <= ap_phi_mux_x_3_phi_fu_499_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                x_8_reg_518 <= ap_phi_reg_pp1_iter0_x_8_reg_518;
            end if; 
        end if;
    end process;

    x_9_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln101_fu_1349_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                x_9_reg_630 <= x_11_reg_677;
            elsif (((icmp_ln97_fu_1325_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                x_9_reg_630 <= x_6_reg_595;
            end if; 
        end if;
    end process;

    x_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x_reg_484 <= x_5_fu_1271_p2;
            elsif (((icmp_ln72_fu_1141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                x_reg_484 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_10_reg_618_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln101_fu_1349_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                y_10_reg_618 <= y_11_reg_665;
            elsif (((icmp_ln97_fu_1325_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                y_10_reg_618 <= y_9_reg_583;
            end if; 
        end if;
    end process;

    y_11_reg_665_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                y_11_reg_665 <= y_12_reg_724;
            elsif (((icmp_ln99_fu_1337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                y_11_reg_665 <= y_10_reg_618;
            end if; 
        end if;
    end process;

    y_12_reg_724_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
                y_12_reg_724 <= y_13_reg_794;
            elsif (((icmp_ln101_fu_1349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                y_12_reg_724 <= y_11_reg_665;
            end if; 
        end if;
    end process;

    y_13_reg_794_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                y_13_reg_794 <= ap_const_lv32_400;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_0 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
                y_13_reg_794 <= ap_phi_mux_y_12_phi_fu_728_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                y_13_reg_794 <= ap_phi_reg_pp2_iter0_y_13_reg_794;
            end if; 
        end if;
    end process;

    y_1_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                y_1_reg_352 <= ap_phi_mux_y_4_phi_fu_411_p10;
            elsif (((icmp_ln52_fu_1066_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                y_1_reg_352 <= y_2_reg_306;
            end if; 
        end if;
    end process;

    y_2_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                y_2_reg_306 <= y_7_fu_1129_p2;
            elsif (((icmp_ln50_fu_1054_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                y_2_reg_306 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_3_reg_548_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln95_fu_1303_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                y_3_reg_548 <= y_8_fu_1309_p2;
            elsif (((icmp_ln72_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                y_3_reg_548 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_6_reg_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln97_fu_1325_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                y_6_reg_560 <= y_9_reg_583;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln93_fu_1287_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
                y_6_reg_560 <= y_3_reg_548;
            end if; 
        end if;
    end process;

    y_9_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln99_fu_1337_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                y_9_reg_583 <= y_10_reg_618;
            elsif (((icmp_ln95_fu_1303_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                y_9_reg_583 <= y_6_reg_560;
            end if; 
        end if;
    end process;

    y_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1048_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                y_reg_473 <= ap_const_lv2_0;
            elsif (((icmp_ln74_fu_1231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                y_reg_473 <= y_5_reg_1817;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter10_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter10_reg) and (icmp_ln113_reg_2010_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter10_reg = ap_const_lv1_1))) then
                accum_V_5_reg_2112 <= accum_V_5_fu_1619_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                accum_V_6_reg_1857 <= accum_V_6_fu_1192_p1;
                conv50_reg_1837 <= conv50_fu_1171_p1;
                conv63_reg_1842 <= conv63_fu_1179_p1;
                sext_ln93_reg_1873 <= sext_ln93_fu_1217_p1;
                sub105_reg_1867 <= sub105_fu_1206_p2;
                sub86_reg_1847 <= sub86_fu_1187_p2;
                sub91_cast_reg_1862 <= sub91_cast_fu_1202_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln115_1_reg_2019_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln113_reg_2010_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter5_reg = ap_const_lv1_1))) then
                add_ln116_2_reg_2067 <= add_ln116_2_fu_1551_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln115_1_reg_2019_pp2_iter2_reg = ap_const_lv1_1) and (icmp_ln113_reg_2010_pp2_iter2_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter2_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter2_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter2_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter2_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter2_reg = ap_const_lv1_1))) then
                add_ln116_3_reg_2062 <= grp_fu_1660_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                add_ln116_reg_2025 <= add_ln116_fu_1448_p2;
                and_ln119_reg_2030 <= and_ln119_fu_1464_p2;
                icmp_ln115_1_reg_2019 <= icmp_ln115_1_fu_1443_p2;
                icmp_ln115_reg_2014 <= icmp_ln115_fu_1437_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln116_reg_2025_pp2_iter1_reg <= add_ln116_reg_2025;
                and_ln119_reg_2030_pp2_iter1_reg <= and_ln119_reg_2030;
                and_ln120_reg_2034_pp2_iter1_reg <= and_ln120_reg_2034;
                and_ln125_reg_2038_pp2_iter1_reg <= and_ln125_reg_2038;
                icmp_ln103_reg_1955 <= icmp_ln103_fu_1361_p2;
                icmp_ln103_reg_1955_pp2_iter1_reg <= icmp_ln103_reg_1955;
                icmp_ln108_reg_1990_pp2_iter1_reg <= icmp_ln108_reg_1990;
                icmp_ln109_reg_1994_pp2_iter1_reg <= icmp_ln109_reg_1994;
                icmp_ln110_reg_1998_pp2_iter1_reg <= icmp_ln110_reg_1998;
                icmp_ln111_reg_2002_pp2_iter1_reg <= icmp_ln111_reg_2002;
                icmp_ln112_reg_2006_pp2_iter1_reg <= icmp_ln112_reg_2006;
                icmp_ln113_reg_2010_pp2_iter1_reg <= icmp_ln113_reg_2010;
                icmp_ln115_1_reg_2019_pp2_iter1_reg <= icmp_ln115_1_reg_2019;
                icmp_ln115_reg_2014_pp2_iter1_reg <= icmp_ln115_reg_2014;
                reg_1000_pp2_iter1_reg <= reg_1000;
                tmpo_last_V_reg_2042_pp2_iter1_reg <= tmpo_last_V_reg_2042;
                trunc_ln37_1_reg_1959_pp2_iter1_reg <= trunc_ln37_1_reg_1959;
                trunc_ln37_2_reg_1964_pp2_iter1_reg <= trunc_ln37_2_reg_1964;
                trunc_ln37_5_reg_1974_pp2_iter1_reg <= trunc_ln37_5_reg_1974;
                trunc_ln37_6_reg_1980_pp2_iter1_reg <= trunc_ln37_6_reg_1980;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                add_ln116_reg_2025_pp2_iter2_reg <= add_ln116_reg_2025_pp2_iter1_reg;
                and_ln119_reg_2030_pp2_iter10_reg <= and_ln119_reg_2030_pp2_iter9_reg;
                and_ln119_reg_2030_pp2_iter11_reg <= and_ln119_reg_2030_pp2_iter10_reg;
                and_ln119_reg_2030_pp2_iter2_reg <= and_ln119_reg_2030_pp2_iter1_reg;
                and_ln119_reg_2030_pp2_iter3_reg <= and_ln119_reg_2030_pp2_iter2_reg;
                and_ln119_reg_2030_pp2_iter4_reg <= and_ln119_reg_2030_pp2_iter3_reg;
                and_ln119_reg_2030_pp2_iter5_reg <= and_ln119_reg_2030_pp2_iter4_reg;
                and_ln119_reg_2030_pp2_iter6_reg <= and_ln119_reg_2030_pp2_iter5_reg;
                and_ln119_reg_2030_pp2_iter7_reg <= and_ln119_reg_2030_pp2_iter6_reg;
                and_ln119_reg_2030_pp2_iter8_reg <= and_ln119_reg_2030_pp2_iter7_reg;
                and_ln119_reg_2030_pp2_iter9_reg <= and_ln119_reg_2030_pp2_iter8_reg;
                and_ln120_reg_2034_pp2_iter2_reg <= and_ln120_reg_2034_pp2_iter1_reg;
                and_ln120_reg_2034_pp2_iter3_reg <= and_ln120_reg_2034_pp2_iter2_reg;
                and_ln120_reg_2034_pp2_iter4_reg <= and_ln120_reg_2034_pp2_iter3_reg;
                and_ln120_reg_2034_pp2_iter5_reg <= and_ln120_reg_2034_pp2_iter4_reg;
                and_ln120_reg_2034_pp2_iter6_reg <= and_ln120_reg_2034_pp2_iter5_reg;
                and_ln125_reg_2038_pp2_iter10_reg <= and_ln125_reg_2038_pp2_iter9_reg;
                and_ln125_reg_2038_pp2_iter11_reg <= and_ln125_reg_2038_pp2_iter10_reg;
                and_ln125_reg_2038_pp2_iter2_reg <= and_ln125_reg_2038_pp2_iter1_reg;
                and_ln125_reg_2038_pp2_iter3_reg <= and_ln125_reg_2038_pp2_iter2_reg;
                and_ln125_reg_2038_pp2_iter4_reg <= and_ln125_reg_2038_pp2_iter3_reg;
                and_ln125_reg_2038_pp2_iter5_reg <= and_ln125_reg_2038_pp2_iter4_reg;
                and_ln125_reg_2038_pp2_iter6_reg <= and_ln125_reg_2038_pp2_iter5_reg;
                and_ln125_reg_2038_pp2_iter7_reg <= and_ln125_reg_2038_pp2_iter6_reg;
                and_ln125_reg_2038_pp2_iter8_reg <= and_ln125_reg_2038_pp2_iter7_reg;
                and_ln125_reg_2038_pp2_iter9_reg <= and_ln125_reg_2038_pp2_iter8_reg;
                icmp_ln103_reg_1955_pp2_iter10_reg <= icmp_ln103_reg_1955_pp2_iter9_reg;
                icmp_ln103_reg_1955_pp2_iter11_reg <= icmp_ln103_reg_1955_pp2_iter10_reg;
                icmp_ln103_reg_1955_pp2_iter2_reg <= icmp_ln103_reg_1955_pp2_iter1_reg;
                icmp_ln103_reg_1955_pp2_iter3_reg <= icmp_ln103_reg_1955_pp2_iter2_reg;
                icmp_ln103_reg_1955_pp2_iter4_reg <= icmp_ln103_reg_1955_pp2_iter3_reg;
                icmp_ln103_reg_1955_pp2_iter5_reg <= icmp_ln103_reg_1955_pp2_iter4_reg;
                icmp_ln103_reg_1955_pp2_iter6_reg <= icmp_ln103_reg_1955_pp2_iter5_reg;
                icmp_ln103_reg_1955_pp2_iter7_reg <= icmp_ln103_reg_1955_pp2_iter6_reg;
                icmp_ln103_reg_1955_pp2_iter8_reg <= icmp_ln103_reg_1955_pp2_iter7_reg;
                icmp_ln103_reg_1955_pp2_iter9_reg <= icmp_ln103_reg_1955_pp2_iter8_reg;
                icmp_ln108_reg_1990_pp2_iter10_reg <= icmp_ln108_reg_1990_pp2_iter9_reg;
                icmp_ln108_reg_1990_pp2_iter11_reg <= icmp_ln108_reg_1990_pp2_iter10_reg;
                icmp_ln108_reg_1990_pp2_iter2_reg <= icmp_ln108_reg_1990_pp2_iter1_reg;
                icmp_ln108_reg_1990_pp2_iter3_reg <= icmp_ln108_reg_1990_pp2_iter2_reg;
                icmp_ln108_reg_1990_pp2_iter4_reg <= icmp_ln108_reg_1990_pp2_iter3_reg;
                icmp_ln108_reg_1990_pp2_iter5_reg <= icmp_ln108_reg_1990_pp2_iter4_reg;
                icmp_ln108_reg_1990_pp2_iter6_reg <= icmp_ln108_reg_1990_pp2_iter5_reg;
                icmp_ln108_reg_1990_pp2_iter7_reg <= icmp_ln108_reg_1990_pp2_iter6_reg;
                icmp_ln108_reg_1990_pp2_iter8_reg <= icmp_ln108_reg_1990_pp2_iter7_reg;
                icmp_ln108_reg_1990_pp2_iter9_reg <= icmp_ln108_reg_1990_pp2_iter8_reg;
                icmp_ln109_reg_1994_pp2_iter10_reg <= icmp_ln109_reg_1994_pp2_iter9_reg;
                icmp_ln109_reg_1994_pp2_iter11_reg <= icmp_ln109_reg_1994_pp2_iter10_reg;
                icmp_ln109_reg_1994_pp2_iter2_reg <= icmp_ln109_reg_1994_pp2_iter1_reg;
                icmp_ln109_reg_1994_pp2_iter3_reg <= icmp_ln109_reg_1994_pp2_iter2_reg;
                icmp_ln109_reg_1994_pp2_iter4_reg <= icmp_ln109_reg_1994_pp2_iter3_reg;
                icmp_ln109_reg_1994_pp2_iter5_reg <= icmp_ln109_reg_1994_pp2_iter4_reg;
                icmp_ln109_reg_1994_pp2_iter6_reg <= icmp_ln109_reg_1994_pp2_iter5_reg;
                icmp_ln109_reg_1994_pp2_iter7_reg <= icmp_ln109_reg_1994_pp2_iter6_reg;
                icmp_ln109_reg_1994_pp2_iter8_reg <= icmp_ln109_reg_1994_pp2_iter7_reg;
                icmp_ln109_reg_1994_pp2_iter9_reg <= icmp_ln109_reg_1994_pp2_iter8_reg;
                icmp_ln110_reg_1998_pp2_iter10_reg <= icmp_ln110_reg_1998_pp2_iter9_reg;
                icmp_ln110_reg_1998_pp2_iter11_reg <= icmp_ln110_reg_1998_pp2_iter10_reg;
                icmp_ln110_reg_1998_pp2_iter2_reg <= icmp_ln110_reg_1998_pp2_iter1_reg;
                icmp_ln110_reg_1998_pp2_iter3_reg <= icmp_ln110_reg_1998_pp2_iter2_reg;
                icmp_ln110_reg_1998_pp2_iter4_reg <= icmp_ln110_reg_1998_pp2_iter3_reg;
                icmp_ln110_reg_1998_pp2_iter5_reg <= icmp_ln110_reg_1998_pp2_iter4_reg;
                icmp_ln110_reg_1998_pp2_iter6_reg <= icmp_ln110_reg_1998_pp2_iter5_reg;
                icmp_ln110_reg_1998_pp2_iter7_reg <= icmp_ln110_reg_1998_pp2_iter6_reg;
                icmp_ln110_reg_1998_pp2_iter8_reg <= icmp_ln110_reg_1998_pp2_iter7_reg;
                icmp_ln110_reg_1998_pp2_iter9_reg <= icmp_ln110_reg_1998_pp2_iter8_reg;
                icmp_ln111_reg_2002_pp2_iter10_reg <= icmp_ln111_reg_2002_pp2_iter9_reg;
                icmp_ln111_reg_2002_pp2_iter11_reg <= icmp_ln111_reg_2002_pp2_iter10_reg;
                icmp_ln111_reg_2002_pp2_iter2_reg <= icmp_ln111_reg_2002_pp2_iter1_reg;
                icmp_ln111_reg_2002_pp2_iter3_reg <= icmp_ln111_reg_2002_pp2_iter2_reg;
                icmp_ln111_reg_2002_pp2_iter4_reg <= icmp_ln111_reg_2002_pp2_iter3_reg;
                icmp_ln111_reg_2002_pp2_iter5_reg <= icmp_ln111_reg_2002_pp2_iter4_reg;
                icmp_ln111_reg_2002_pp2_iter6_reg <= icmp_ln111_reg_2002_pp2_iter5_reg;
                icmp_ln111_reg_2002_pp2_iter7_reg <= icmp_ln111_reg_2002_pp2_iter6_reg;
                icmp_ln111_reg_2002_pp2_iter8_reg <= icmp_ln111_reg_2002_pp2_iter7_reg;
                icmp_ln111_reg_2002_pp2_iter9_reg <= icmp_ln111_reg_2002_pp2_iter8_reg;
                icmp_ln112_reg_2006_pp2_iter10_reg <= icmp_ln112_reg_2006_pp2_iter9_reg;
                icmp_ln112_reg_2006_pp2_iter11_reg <= icmp_ln112_reg_2006_pp2_iter10_reg;
                icmp_ln112_reg_2006_pp2_iter2_reg <= icmp_ln112_reg_2006_pp2_iter1_reg;
                icmp_ln112_reg_2006_pp2_iter3_reg <= icmp_ln112_reg_2006_pp2_iter2_reg;
                icmp_ln112_reg_2006_pp2_iter4_reg <= icmp_ln112_reg_2006_pp2_iter3_reg;
                icmp_ln112_reg_2006_pp2_iter5_reg <= icmp_ln112_reg_2006_pp2_iter4_reg;
                icmp_ln112_reg_2006_pp2_iter6_reg <= icmp_ln112_reg_2006_pp2_iter5_reg;
                icmp_ln112_reg_2006_pp2_iter7_reg <= icmp_ln112_reg_2006_pp2_iter6_reg;
                icmp_ln112_reg_2006_pp2_iter8_reg <= icmp_ln112_reg_2006_pp2_iter7_reg;
                icmp_ln112_reg_2006_pp2_iter9_reg <= icmp_ln112_reg_2006_pp2_iter8_reg;
                icmp_ln113_reg_2010_pp2_iter10_reg <= icmp_ln113_reg_2010_pp2_iter9_reg;
                icmp_ln113_reg_2010_pp2_iter11_reg <= icmp_ln113_reg_2010_pp2_iter10_reg;
                icmp_ln113_reg_2010_pp2_iter2_reg <= icmp_ln113_reg_2010_pp2_iter1_reg;
                icmp_ln113_reg_2010_pp2_iter3_reg <= icmp_ln113_reg_2010_pp2_iter2_reg;
                icmp_ln113_reg_2010_pp2_iter4_reg <= icmp_ln113_reg_2010_pp2_iter3_reg;
                icmp_ln113_reg_2010_pp2_iter5_reg <= icmp_ln113_reg_2010_pp2_iter4_reg;
                icmp_ln113_reg_2010_pp2_iter6_reg <= icmp_ln113_reg_2010_pp2_iter5_reg;
                icmp_ln113_reg_2010_pp2_iter7_reg <= icmp_ln113_reg_2010_pp2_iter6_reg;
                icmp_ln113_reg_2010_pp2_iter8_reg <= icmp_ln113_reg_2010_pp2_iter7_reg;
                icmp_ln113_reg_2010_pp2_iter9_reg <= icmp_ln113_reg_2010_pp2_iter8_reg;
                icmp_ln115_1_reg_2019_pp2_iter10_reg <= icmp_ln115_1_reg_2019_pp2_iter9_reg;
                icmp_ln115_1_reg_2019_pp2_iter2_reg <= icmp_ln115_1_reg_2019_pp2_iter1_reg;
                icmp_ln115_1_reg_2019_pp2_iter3_reg <= icmp_ln115_1_reg_2019_pp2_iter2_reg;
                icmp_ln115_1_reg_2019_pp2_iter4_reg <= icmp_ln115_1_reg_2019_pp2_iter3_reg;
                icmp_ln115_1_reg_2019_pp2_iter5_reg <= icmp_ln115_1_reg_2019_pp2_iter4_reg;
                icmp_ln115_1_reg_2019_pp2_iter6_reg <= icmp_ln115_1_reg_2019_pp2_iter5_reg;
                icmp_ln115_1_reg_2019_pp2_iter7_reg <= icmp_ln115_1_reg_2019_pp2_iter6_reg;
                icmp_ln115_1_reg_2019_pp2_iter8_reg <= icmp_ln115_1_reg_2019_pp2_iter7_reg;
                icmp_ln115_1_reg_2019_pp2_iter9_reg <= icmp_ln115_1_reg_2019_pp2_iter8_reg;
                icmp_ln115_reg_2014_pp2_iter10_reg <= icmp_ln115_reg_2014_pp2_iter9_reg;
                icmp_ln115_reg_2014_pp2_iter2_reg <= icmp_ln115_reg_2014_pp2_iter1_reg;
                icmp_ln115_reg_2014_pp2_iter3_reg <= icmp_ln115_reg_2014_pp2_iter2_reg;
                icmp_ln115_reg_2014_pp2_iter4_reg <= icmp_ln115_reg_2014_pp2_iter3_reg;
                icmp_ln115_reg_2014_pp2_iter5_reg <= icmp_ln115_reg_2014_pp2_iter4_reg;
                icmp_ln115_reg_2014_pp2_iter6_reg <= icmp_ln115_reg_2014_pp2_iter5_reg;
                icmp_ln115_reg_2014_pp2_iter7_reg <= icmp_ln115_reg_2014_pp2_iter6_reg;
                icmp_ln115_reg_2014_pp2_iter8_reg <= icmp_ln115_reg_2014_pp2_iter7_reg;
                icmp_ln115_reg_2014_pp2_iter9_reg <= icmp_ln115_reg_2014_pp2_iter8_reg;
                reg_1000_pp2_iter2_reg <= reg_1000_pp2_iter1_reg;
                reg_1000_pp2_iter3_reg <= reg_1000_pp2_iter2_reg;
                reg_1000_pp2_iter4_reg <= reg_1000_pp2_iter3_reg;
                reg_1000_pp2_iter5_reg <= reg_1000_pp2_iter4_reg;
                reg_1000_pp2_iter6_reg <= reg_1000_pp2_iter5_reg;
                tmpo_last_V_reg_2042_pp2_iter10_reg <= tmpo_last_V_reg_2042_pp2_iter9_reg;
                tmpo_last_V_reg_2042_pp2_iter2_reg <= tmpo_last_V_reg_2042_pp2_iter1_reg;
                tmpo_last_V_reg_2042_pp2_iter3_reg <= tmpo_last_V_reg_2042_pp2_iter2_reg;
                tmpo_last_V_reg_2042_pp2_iter4_reg <= tmpo_last_V_reg_2042_pp2_iter3_reg;
                tmpo_last_V_reg_2042_pp2_iter5_reg <= tmpo_last_V_reg_2042_pp2_iter4_reg;
                tmpo_last_V_reg_2042_pp2_iter6_reg <= tmpo_last_V_reg_2042_pp2_iter5_reg;
                tmpo_last_V_reg_2042_pp2_iter7_reg <= tmpo_last_V_reg_2042_pp2_iter6_reg;
                tmpo_last_V_reg_2042_pp2_iter8_reg <= tmpo_last_V_reg_2042_pp2_iter7_reg;
                tmpo_last_V_reg_2042_pp2_iter9_reg <= tmpo_last_V_reg_2042_pp2_iter8_reg;
                trunc_ln37_1_reg_1959_pp2_iter2_reg <= trunc_ln37_1_reg_1959_pp2_iter1_reg;
                trunc_ln37_1_reg_1959_pp2_iter3_reg <= trunc_ln37_1_reg_1959_pp2_iter2_reg;
                trunc_ln37_4_reg_2057_pp2_iter2_reg <= trunc_ln37_4_reg_2057;
                trunc_ln37_4_reg_2057_pp2_iter3_reg <= trunc_ln37_4_reg_2057_pp2_iter2_reg;
                trunc_ln37_4_reg_2057_pp2_iter4_reg <= trunc_ln37_4_reg_2057_pp2_iter3_reg;
                trunc_ln37_4_reg_2057_pp2_iter5_reg <= trunc_ln37_4_reg_2057_pp2_iter4_reg;
                trunc_ln37_5_reg_1974_pp2_iter2_reg <= trunc_ln37_5_reg_1974_pp2_iter1_reg;
                trunc_ln37_5_reg_1974_pp2_iter3_reg <= trunc_ln37_5_reg_1974_pp2_iter2_reg;
                trunc_ln37_5_reg_1974_pp2_iter4_reg <= trunc_ln37_5_reg_1974_pp2_iter3_reg;
                trunc_ln37_6_reg_1980_pp2_iter2_reg <= trunc_ln37_6_reg_1980_pp2_iter1_reg;
                trunc_ln37_reg_2052_pp2_iter2_reg <= trunc_ln37_reg_2052;
                trunc_ln37_reg_2052_pp2_iter3_reg <= trunc_ln37_reg_2052_pp2_iter2_reg;
                trunc_ln37_reg_2052_pp2_iter4_reg <= trunc_ln37_reg_2052_pp2_iter3_reg;
                trunc_ln37_reg_2052_pp2_iter5_reg <= trunc_ln37_reg_2052_pp2_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (icmp_ln113_reg_2010_pp2_iter5_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln120_reg_2034_pp2_iter5_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter5_reg) and (icmp_ln112_reg_2006_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter5_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter5_reg = ap_const_lv1_1))) then
                add_ln122_1_reg_2072 <= grp_fu_1675_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                and_ln120_reg_2034 <= and_ln120_fu_1481_p2;
                and_ln125_reg_2038 <= and_ln125_fu_1492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_23_reg_1738 <= empty_23_fu_1009_p1;
                empty_24_reg_1743 <= empty_24_fu_1013_p1;
                empty_25_reg_1750 <= empty_25_fu_1017_p1;
                empty_26_reg_1756 <= empty_26_fu_1021_p1;
                empty_27_reg_1761 <= empty_27_fu_1025_p1;
                empty_28_reg_1767 <= empty_28_fu_1029_p1;
                empty_reg_1732 <= empty_fu_1005_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                icmp_ln108_reg_1990 <= icmp_ln108_fu_1395_p2;
                trunc_ln37_1_reg_1959 <= trunc_ln37_1_fu_1367_p1;
                trunc_ln37_2_reg_1964 <= trunc_ln37_2_fu_1371_p1;
                trunc_ln37_5_reg_1974 <= trunc_ln37_5_fu_1379_p1;
                trunc_ln37_6_reg_1980 <= trunc_ln37_6_fu_1383_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                icmp_ln109_reg_1994 <= icmp_ln109_fu_1400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                icmp_ln110_reg_1998 <= icmp_ln110_fu_1405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                icmp_ln111_reg_2002 <= icmp_ln111_fu_1410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                icmp_ln112_reg_2006 <= icmp_ln112_fu_1415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                icmp_ln113_reg_2010 <= icmp_ln113_fu_1420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln76_reg_1882 <= icmp_ln76_fu_1237_p2;
                icmp_ln76_reg_1882_pp1_iter1_reg <= icmp_ln76_reg_1882;
                icmp_ln79_reg_1891_pp1_iter1_reg <= icmp_ln79_reg_1891;
                icmp_ln80_reg_1895_pp1_iter1_reg <= icmp_ln80_reg_1895;
                tmp_data_V_reg_1899_pp1_iter1_reg <= tmp_data_V_reg_1899;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln76_reg_1882_pp1_iter2_reg <= icmp_ln76_reg_1882_pp1_iter1_reg;
                icmp_ln76_reg_1882_pp1_iter3_reg <= icmp_ln76_reg_1882_pp1_iter2_reg;
                icmp_ln76_reg_1882_pp1_iter4_reg <= icmp_ln76_reg_1882_pp1_iter3_reg;
                icmp_ln76_reg_1882_pp1_iter5_reg <= icmp_ln76_reg_1882_pp1_iter4_reg;
                icmp_ln79_reg_1891_pp1_iter2_reg <= icmp_ln79_reg_1891_pp1_iter1_reg;
                icmp_ln79_reg_1891_pp1_iter3_reg <= icmp_ln79_reg_1891_pp1_iter2_reg;
                icmp_ln79_reg_1891_pp1_iter4_reg <= icmp_ln79_reg_1891_pp1_iter3_reg;
                icmp_ln79_reg_1891_pp1_iter5_reg <= icmp_ln79_reg_1891_pp1_iter4_reg;
                icmp_ln80_reg_1895_pp1_iter2_reg <= icmp_ln80_reg_1895_pp1_iter1_reg;
                icmp_ln80_reg_1895_pp1_iter3_reg <= icmp_ln80_reg_1895_pp1_iter2_reg;
                icmp_ln80_reg_1895_pp1_iter4_reg <= icmp_ln80_reg_1895_pp1_iter3_reg;
                icmp_ln80_reg_1895_pp1_iter5_reg <= icmp_ln80_reg_1895_pp1_iter4_reg;
                tmp_data_V_reg_1899_pp1_iter2_reg <= tmp_data_V_reg_1899_pp1_iter1_reg;
                tmp_data_V_reg_1899_pp1_iter3_reg <= tmp_data_V_reg_1899_pp1_iter2_reg;
                tmp_data_V_reg_1899_pp1_iter4_reg <= tmp_data_V_reg_1899_pp1_iter3_reg;
                tmp_data_V_reg_1899_pp1_iter5_reg <= tmp_data_V_reg_1899_pp1_iter4_reg;
                trunc_ln76_reg_1909_pp1_iter2_reg <= trunc_ln76_reg_1909;
                trunc_ln76_reg_1909_pp1_iter3_reg <= trunc_ln76_reg_1909_pp1_iter2_reg;
                trunc_ln76_reg_1909_pp1_iter4_reg <= trunc_ln76_reg_1909_pp1_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln79_reg_1891 <= icmp_ln79_fu_1247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln80_reg_1895 <= icmp_ln80_fu_1252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter8 = ap_const_logic_1) and (icmp_ln115_1_reg_2019_pp2_iter7_reg = ap_const_lv1_1) and (icmp_ln113_reg_2010_pp2_iter7_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter7_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter7_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter7_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter7_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter7_reg = ap_const_lv1_1))) then
                lhs_reg_2087 <= featureMap_V_q1;
                rhs_reg_2092 <= filter_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln120_fu_1481_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                reg_1000 <= strm_in_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln115_1_reg_2019_pp2_iter9_reg = ap_const_lv1_1) and (icmp_ln113_reg_2010_pp2_iter9_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter9_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter9_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter9_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter9_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter9_reg = ap_const_lv1_1))) then
                ret_reg_2107 <= grp_fu_1573_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln80_fu_1252_p2 = ap_const_lv1_1) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_data_V_reg_1899 <= strm_in_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then
                tmpo_last_V_reg_2042 <= tmpo_last_V_fu_1515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln115_1_reg_2019 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then
                trunc_ln37_4_reg_2057 <= trunc_ln37_4_fu_1531_p1;
                trunc_ln37_reg_2052 <= trunc_ln37_fu_1527_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln76_reg_1882 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln76_reg_1909 <= trunc_ln76_fu_1263_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                y_5_reg_1817 <= y_5_fu_1135_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_fu_1141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    zext_ln72_reg_1825(1 downto 0) <= zext_ln72_fu_1147_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln72_reg_1825(10 downto 2) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, ap_enable_reg_pp1_iter0, icmp_ln76_fu_1237_p2, ap_enable_reg_pp2_iter0, icmp_ln103_fu_1361_p2, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_CS_fsm_state3, icmp_ln50_fu_1054_p2, icmp_ln52_fu_1066_p2, ap_CS_fsm_state4, ap_predicate_op125_read_state5, ap_CS_fsm_state7, icmp_ln72_fu_1141_p2, icmp_ln74_fu_1231_p2, ap_CS_fsm_state8, ap_CS_fsm_state18, icmp_ln95_fu_1303_p2, ap_CS_fsm_state19, icmp_ln97_fu_1325_p2, ap_CS_fsm_state20, icmp_ln99_fu_1337_p2, icmp_ln101_fu_1349_p2, ap_CS_fsm_state21, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_CS_fsm_state2, icmp_ln48_fu_1048_p2, ap_CS_fsm_state17, regslice_both_strm_out_V_data_V_U_apdone_blk, icmp_ln93_fu_1287_p2, strm_in_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (strm_in_TVALID_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln48_fu_1048_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln50_fu_1054_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln52_fu_1066_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln72_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln74_fu_1231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln76_fu_1237_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((icmp_ln76_fu_1237_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln93_fu_1287_p2 = ap_const_lv1_0) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln93_fu_1287_p2 = ap_const_lv1_1) and (regslice_both_strm_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln95_fu_1303_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln97_fu_1325_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln99_fu_1337_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln101_fu_1349_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    accum_V_2_fu_1586_p3 <= 
        accum_V_6_reg_1857 when (and_ln115_fu_1582_p2(0) = '1') else 
        ap_sig_allocacmp_accum_V_load;
    accum_V_3_fu_1593_p2 <= std_logic_vector(unsigned(ret_reg_2107) + unsigned(accum_V_2_fu_1586_p3));
    accum_V_4_fu_1598_p3 <= 
        accum_V_3_fu_1593_p2 when (icmp_ln115_1_reg_2019_pp2_iter10_reg(0) = '1') else 
        ap_sig_allocacmp_accum_V_load;
    accum_V_5_fu_1619_p3 <= 
        ap_const_lv64_0 when (and_ln126_fu_1614_p2(0) = '1') else 
        accum_V_4_fu_1598_p3;
        accum_V_6_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1000),64));

    add_ln116_2_fu_1551_p2 <= std_logic_vector(signed(grp_fu_1666_p4) + signed(trunc_ln37_4_reg_2057_pp2_iter5_reg));
    add_ln116_fu_1448_p2 <= std_logic_vector(unsigned(trunc_ln37_7_fu_1387_p1) + unsigned(trunc_ln37_6_fu_1383_p1));
    add_ln122_fu_1538_p2 <= std_logic_vector(unsigned(trunc_ln37_6_reg_1980_pp2_iter2_reg) + unsigned(ap_const_lv2_3));
    and_ln115_fu_1582_p2 <= (icmp_ln115_reg_2014_pp2_iter10_reg and icmp_ln115_1_reg_2019_pp2_iter10_reg);
    and_ln119_fu_1464_p2 <= (icmp_ln119_fu_1454_p2 and icmp_ln119_1_fu_1459_p2);
    and_ln120_fu_1481_p2 <= (icmp_ln120_fu_1470_p2 and icmp_ln120_1_fu_1475_p2);
    and_ln125_fu_1492_p2 <= (icmp_ln125_fu_1487_p2 and icmp_ln115_1_fu_1443_p2);
    and_ln126_fu_1614_p1 <= (0=>relu, others=>'-');
    and_ln126_fu_1614_p2 <= (tmp_6_fu_1606_p3 and and_ln126_fu_1614_p1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(9);
    ap_CS_fsm_state17 <= ap_CS_fsm(10);
    ap_CS_fsm_state18 <= ap_CS_fsm(11);
    ap_CS_fsm_state19 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(13);
    ap_CS_fsm_state21 <= ap_CS_fsm(14);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state35 <= ap_CS_fsm(16);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter0, ap_predicate_op183_read_state9, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op183_read_state9 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter0, ap_predicate_op183_read_state9, strm_in_TVALID_int_regslice)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op183_read_state9 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_01001_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_predicate_op304_read_state22, ap_predicate_op385_write_state33, ap_predicate_op386_write_state34, strm_in_TVALID_int_regslice, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage0_01001 <= (((ap_predicate_op386_write_state34 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1)) or ((ap_predicate_op385_write_state33 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1)) or ((ap_predicate_op304_read_state22 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_predicate_op304_read_state22, ap_predicate_op385_write_state33, ap_block_state33_io, ap_predicate_op386_write_state34, ap_block_state34_io, strm_in_TVALID_int_regslice, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage0_11001 <= (((ap_predicate_op304_read_state22 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter12 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state34_io) or ((ap_predicate_op386_write_state34 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp2_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state33_io) or ((ap_predicate_op385_write_state33 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_predicate_op304_read_state22, ap_predicate_op385_write_state33, ap_block_state33_io, ap_predicate_op386_write_state34, ap_block_state34_io, strm_in_TVALID_int_regslice, strm_out_TREADY_int_regslice)
    begin
                ap_block_pp2_stage0_subdone <= (((ap_predicate_op304_read_state22 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter12 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state34_io) or ((ap_predicate_op386_write_state34 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp2_iter11 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state33_io) or ((ap_predicate_op385_write_state33 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0)))));
    end process;

        ap_block_state10_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp2_stage0_iter0_assign_proc : process(ap_predicate_op304_read_state22, strm_in_TVALID_int_regslice)
    begin
                ap_block_state22_pp2_stage0_iter0 <= ((ap_predicate_op304_read_state22 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state23_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_io_assign_proc : process(ap_predicate_op385_write_state33, strm_out_TREADY_int_regslice)
    begin
                ap_block_state33_io <= ((ap_predicate_op385_write_state33 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state33_pp2_stage0_iter11_assign_proc : process(ap_predicate_op385_write_state33, strm_out_TREADY_int_regslice)
    begin
                ap_block_state33_pp2_stage0_iter11 <= ((ap_predicate_op385_write_state33 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state34_io_assign_proc : process(ap_predicate_op386_write_state34, strm_out_TREADY_int_regslice)
    begin
                ap_block_state34_io <= ((ap_predicate_op386_write_state34 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state34_pp2_stage0_iter12_assign_proc : process(ap_predicate_op386_write_state34, strm_out_TREADY_int_regslice)
    begin
                ap_block_state34_pp2_stage0_iter12 <= ((ap_predicate_op386_write_state34 = ap_const_boolean_1) and (strm_out_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(ap_predicate_op125_read_state5, strm_in_TVALID_int_regslice)
    begin
                ap_block_state5 <= ((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state9_pp1_stage0_iter0_assign_proc : process(ap_predicate_op183_read_state9, strm_in_TVALID_int_regslice)
    begin
                ap_block_state9_pp1_stage0_iter0 <= ((ap_predicate_op183_read_state9 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln76_fu_1237_p2)
    begin
        if ((icmp_ln76_fu_1237_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state22_assign_proc : process(icmp_ln103_fu_1361_p2)
    begin
        if ((icmp_ln103_fu_1361_p2 = ap_const_lv1_0)) then 
            ap_condition_pp2_exit_iter0_state22 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state22 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10)
    begin
        if (((ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_10_phi_fu_752_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, icmp_ln103_reg_1955, f_10_reg_748, f_11_reg_862, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_f_10_phi_fu_752_p4 <= f_11_reg_862;
        else 
            ap_phi_mux_f_10_phi_fu_752_p4 <= f_10_reg_748;
        end if; 
    end process;


    ap_phi_mux_f_4_phi_fu_455_p10_assign_proc : process(ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2, f_3_reg_375)
    begin
        if (((icmp_ln57_fu_1084_p2 = ap_const_lv1_0) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_f_4_phi_fu_455_p10 <= ap_const_lv32_20;
        elsif ((((icmp_ln60_fu_1099_p2 = ap_const_lv1_0) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln59_fu_1094_p2 = ap_const_lv1_0) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln58_fu_1089_p2 = ap_const_lv1_0) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_f_4_phi_fu_455_p10 <= f_3_reg_375;
        else 
            ap_phi_mux_f_4_phi_fu_455_p10 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_kn_1_phi_fu_963_p18_assign_proc : process(icmp_ln103_fu_1361_p2, icmp_ln108_fu_1395_p2, icmp_ln109_fu_1400_p2, icmp_ln110_fu_1405_p2, icmp_ln111_fu_1410_p2, icmp_ln112_fu_1415_p2, icmp_ln113_fu_1420_p2, and_ln119_fu_1464_p2, kn_reg_783, sub105_reg_1867, and_ln125_fu_1492_p2, ap_phi_reg_pp2_iter0_kn_1_reg_960)
    begin
        if (((icmp_ln113_fu_1420_p2 = ap_const_lv1_0) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then 
            ap_phi_mux_kn_1_phi_fu_963_p18 <= ap_const_lv32_A;
        elsif ((((ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln119_fu_1464_p2) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)) or ((icmp_ln112_fu_1415_p2 = ap_const_lv1_0) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)) or ((icmp_ln111_fu_1410_p2 = ap_const_lv1_0) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)) or ((icmp_ln110_fu_1405_p2 = ap_const_lv1_0) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)) or ((icmp_ln109_fu_1400_p2 = ap_const_lv1_0) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)) or ((icmp_ln108_fu_1395_p2 = ap_const_lv1_0) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_kn_1_phi_fu_963_p18 <= kn_reg_783;
        elsif (((ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1))) then 
            ap_phi_mux_kn_1_phi_fu_963_p18 <= sub105_reg_1867;
        else 
            ap_phi_mux_kn_1_phi_fu_963_p18 <= ap_phi_reg_pp2_iter0_kn_1_reg_960;
        end if; 
    end process;


    ap_phi_mux_kx_1_phi_fu_775_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, icmp_ln103_reg_1955, kx_1_reg_772, kx_3_reg_928, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_kx_1_phi_fu_775_p4 <= kx_3_reg_928;
        else 
            ap_phi_mux_kx_1_phi_fu_775_p4 <= kx_1_reg_772;
        end if; 
    end process;


    ap_phi_mux_ky_2_phi_fu_764_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, icmp_ln103_reg_1955, ky_2_reg_760, ky_4_reg_896, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_ky_2_phi_fu_764_p4 <= ky_4_reg_896;
        else 
            ap_phi_mux_ky_2_phi_fu_764_p4 <= ky_2_reg_760;
        end if; 
    end process;


    ap_phi_mux_n_4_phi_fu_433_p10_assign_proc : process(ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2, n_2_reg_363)
    begin
        if (((icmp_ln58_fu_1089_p2 = ap_const_lv1_0) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_n_4_phi_fu_433_p10 <= ap_const_lv32_A;
        elsif ((((icmp_ln60_fu_1099_p2 = ap_const_lv1_0) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln59_fu_1094_p2 = ap_const_lv1_0) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln57_fu_1084_p2 = ap_const_lv1_0) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_n_4_phi_fu_433_p10 <= n_2_reg_363;
        else 
            ap_phi_mux_n_4_phi_fu_433_p10 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_n_6_phi_fu_537_p6_assign_proc : process(icmp_ln76_fu_1237_p2, icmp_ln79_fu_1247_p2, icmp_ln80_fu_1252_p2, n_5_reg_507, ap_phi_reg_pp1_iter0_n_6_reg_534)
    begin
        if (((icmp_ln80_fu_1252_p2 = ap_const_lv1_0) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1))) then 
            ap_phi_mux_n_6_phi_fu_537_p6 <= ap_const_lv32_A;
        elsif ((((icmp_ln80_fu_1252_p2 = ap_const_lv1_1) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1)) or ((icmp_ln79_fu_1247_p2 = ap_const_lv1_0) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_n_6_phi_fu_537_p6 <= n_5_reg_507;
        else 
            ap_phi_mux_n_6_phi_fu_537_p6 <= ap_phi_reg_pp1_iter0_n_6_reg_534;
        end if; 
    end process;


    ap_phi_mux_x_12_phi_fu_740_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, icmp_ln103_reg_1955, x_12_reg_736, x_13_reg_828, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_x_12_phi_fu_740_p4 <= x_13_reg_828;
        else 
            ap_phi_mux_x_12_phi_fu_740_p4 <= x_12_reg_736;
        end if; 
    end process;


    ap_phi_mux_x_3_phi_fu_499_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, x_3_reg_496, x_8_reg_518, icmp_ln76_reg_1882, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln76_reg_1882 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_x_3_phi_fu_499_p4 <= x_8_reg_518;
        else 
            ap_phi_mux_x_3_phi_fu_499_p4 <= x_3_reg_496;
        end if; 
    end process;


    ap_phi_mux_x_4_phi_fu_390_p10_assign_proc : process(ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2, x_1_reg_341)
    begin
        if (((icmp_ln60_fu_1099_p2 = ap_const_lv1_0) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_x_4_phi_fu_390_p10 <= ap_const_lv32_3;
        elsif ((((icmp_ln59_fu_1094_p2 = ap_const_lv1_0) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln58_fu_1089_p2 = ap_const_lv1_0) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln57_fu_1084_p2 = ap_const_lv1_0) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_x_4_phi_fu_390_p10 <= x_1_reg_341;
        else 
            ap_phi_mux_x_4_phi_fu_390_p10 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_y_12_phi_fu_728_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, icmp_ln103_reg_1955, y_12_reg_724, y_13_reg_794, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln103_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_y_12_phi_fu_728_p4 <= y_13_reg_794;
        else 
            ap_phi_mux_y_12_phi_fu_728_p4 <= y_12_reg_724;
        end if; 
    end process;


    ap_phi_mux_y_4_phi_fu_411_p10_assign_proc : process(ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2, y_1_reg_352)
    begin
        if (((icmp_ln59_fu_1094_p2 = ap_const_lv1_0) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_y_4_phi_fu_411_p10 <= ap_const_lv32_3;
        elsif ((((icmp_ln60_fu_1099_p2 = ap_const_lv1_0) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln58_fu_1089_p2 = ap_const_lv1_0) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln57_fu_1084_p2 = ap_const_lv1_0) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_y_4_phi_fu_411_p10 <= y_1_reg_352;
        else 
            ap_phi_mux_y_4_phi_fu_411_p10 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_n_6_reg_534 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_x_8_reg_518 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_f_11_reg_862 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_kn_1_reg_960 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_kx_3_reg_928 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_ky_4_reg_896 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_x_13_reg_828 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_y_13_reg_794 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op125_read_state5_assign_proc : process(icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2)
    begin
                ap_predicate_op125_read_state5 <= ((icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op183_read_state9_assign_proc : process(icmp_ln76_fu_1237_p2, icmp_ln79_fu_1247_p2, icmp_ln80_fu_1252_p2)
    begin
                ap_predicate_op183_read_state9 <= ((icmp_ln80_fu_1252_p2 = ap_const_lv1_1) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op304_read_state22_assign_proc : process(icmp_ln103_fu_1361_p2, icmp_ln108_fu_1395_p2, icmp_ln109_fu_1400_p2, icmp_ln110_fu_1405_p2, icmp_ln111_fu_1410_p2, icmp_ln112_fu_1415_p2, icmp_ln113_fu_1420_p2, and_ln119_fu_1464_p2, and_ln120_fu_1481_p2)
    begin
                ap_predicate_op304_read_state22 <= ((ap_const_lv1_1 = and_ln120_fu_1481_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op385_write_state33_assign_proc : process(icmp_ln103_reg_1955_pp2_iter10_reg, icmp_ln108_reg_1990_pp2_iter10_reg, icmp_ln109_reg_1994_pp2_iter10_reg, icmp_ln110_reg_1998_pp2_iter10_reg, icmp_ln111_reg_2002_pp2_iter10_reg, icmp_ln112_reg_2006_pp2_iter10_reg, icmp_ln113_reg_2010_pp2_iter10_reg, and_ln119_reg_2030_pp2_iter10_reg, and_ln125_reg_2038_pp2_iter10_reg)
    begin
                ap_predicate_op385_write_state33 <= ((ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter10_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter10_reg) and (icmp_ln113_reg_2010_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter10_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op386_write_state34_assign_proc : process(icmp_ln103_reg_1955_pp2_iter11_reg, icmp_ln108_reg_1990_pp2_iter11_reg, icmp_ln109_reg_1994_pp2_iter11_reg, icmp_ln110_reg_1998_pp2_iter11_reg, icmp_ln111_reg_2002_pp2_iter11_reg, icmp_ln112_reg_2006_pp2_iter11_reg, icmp_ln113_reg_2010_pp2_iter11_reg, and_ln119_reg_2030_pp2_iter11_reg, and_ln125_reg_2038_pp2_iter11_reg)
    begin
                ap_predicate_op386_write_state34 <= ((ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter11_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter11_reg) and (icmp_ln113_reg_2010_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter11_reg = ap_const_lv1_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_accum_V_load_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp2_iter12, icmp_ln103_reg_1955_pp2_iter11_reg, icmp_ln108_reg_1990_pp2_iter11_reg, icmp_ln109_reg_1994_pp2_iter11_reg, icmp_ln110_reg_1998_pp2_iter11_reg, icmp_ln111_reg_2002_pp2_iter11_reg, icmp_ln112_reg_2006_pp2_iter11_reg, icmp_ln113_reg_2010_pp2_iter11_reg, and_ln119_reg_2030_pp2_iter11_reg, and_ln125_reg_2038_pp2_iter11_reg, accum_V_5_reg_2112, accum_V_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter11_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter11_reg) and (icmp_ln113_reg_2010_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            ap_sig_allocacmp_accum_V_load <= accum_V_5_reg_2112;
        else 
            ap_sig_allocacmp_accum_V_load <= accum_V_fu_152;
        end if; 
    end process;

        conv50_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapYSize_fu_1155_p2),32));

        conv63_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapXSize_fu_1165_p2),32));

    count_1_fu_1107_p2 <= std_logic_vector(unsigned(count_fu_140) + unsigned(ap_const_lv32_1));
    empty_23_fu_1009_p1 <= kernelN(7 - 1 downto 0);
    empty_24_fu_1013_p1 <= mapSizeX(11 - 1 downto 0);
    empty_25_fu_1017_p1 <= mapSizeY(11 - 1 downto 0);
    empty_26_fu_1021_p1 <= mapSizeX(16 - 1 downto 0);
    empty_27_fu_1025_p1 <= kernelSize(16 - 1 downto 0);
    empty_28_fu_1029_p1 <= mapSizeY(16 - 1 downto 0);
    empty_fu_1005_p1 <= kernelSize(7 - 1 downto 0);
    f_5_fu_1060_p2 <= std_logic_vector(unsigned(f_1_reg_295) + unsigned(ap_const_lv32_1));
    f_8_fu_1343_p2 <= std_logic_vector(unsigned(f_7_reg_642) + unsigned(ap_const_lv32_1));

    featureMap_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_block_pp2_stage0, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter7, zext_ln83_fu_1267_p1, zext_ln122_fu_1563_p1)
    begin
        if (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            featureMap_V_address0 <= zext_ln122_fu_1563_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            featureMap_V_address0 <= zext_ln83_fu_1267_p1(11 - 1 downto 0);
        else 
            featureMap_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    featureMap_V_address1 <= zext_ln116_fu_1555_p1(11 - 1 downto 0);

    featureMap_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter7)
    begin
        if ((((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            featureMap_V_ce0 <= ap_const_logic_1;
        else 
            featureMap_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    featureMap_V_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter7)
    begin
        if (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            featureMap_V_ce1 <= ap_const_logic_1;
        else 
            featureMap_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    featureMap_V_d0_assign_proc : process(ap_block_pp1_stage0, ap_block_pp2_stage0, reg_1000_pp2_iter6_reg, tmp_data_V_reg_1899_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter7)
    begin
        if (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            featureMap_V_d0 <= reg_1000_pp2_iter6_reg;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            featureMap_V_d0 <= tmp_data_V_reg_1899_pp1_iter5_reg;
        else 
            featureMap_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    featureMap_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp1_stage0_11001, icmp_ln76_reg_1882_pp1_iter5_reg, icmp_ln79_reg_1891_pp1_iter5_reg, icmp_ln80_reg_1895_pp1_iter5_reg, icmp_ln108_reg_1990_pp2_iter6_reg, icmp_ln109_reg_1994_pp2_iter6_reg, icmp_ln110_reg_1998_pp2_iter6_reg, icmp_ln111_reg_2002_pp2_iter6_reg, icmp_ln112_reg_2006_pp2_iter6_reg, icmp_ln113_reg_2010_pp2_iter6_reg, and_ln119_reg_2030_pp2_iter6_reg, and_ln120_reg_2034_pp2_iter6_reg, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter7)
    begin
        if ((((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln113_reg_2010_pp2_iter6_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln120_reg_2034_pp2_iter6_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter6_reg) and (icmp_ln112_reg_2006_pp2_iter6_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter6_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter6_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter6_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter6_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln80_reg_1895_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln79_reg_1891_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln76_reg_1882_pp1_iter5_reg = ap_const_lv1_1)))) then 
            featureMap_V_we0 <= ap_const_logic_1;
        else 
            featureMap_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_block_pp2_stage0, ap_enable_reg_pp2_iter7, zext_ln63_fu_1113_p1, zext_ln116_1_fu_1559_p1)
    begin
        if (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            filter_V_address0 <= zext_ln116_1_fu_1559_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            filter_V_address0 <= zext_ln63_fu_1113_p1(7 - 1 downto 0);
        else 
            filter_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    filter_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_block_pp2_stage0_11001, ap_predicate_op125_read_state5, ap_enable_reg_pp2_iter7, strm_in_TVALID_int_regslice)
    begin
        if (((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            filter_V_ce0 <= ap_const_logic_1;
        else 
            filter_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2, ap_predicate_op125_read_state5, strm_in_TVALID_int_regslice)
    begin
        if ((not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            filter_V_we0 <= ap_const_logic_1;
        else 
            filter_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1573_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1573_ce <= ap_const_logic_1;
        else 
            grp_fu_1573_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1642_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1642_ce <= ap_const_logic_1;
        else 
            grp_fu_1642_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1642_p0 <= n_5_reg_507(11 - 1 downto 0);

    grp_fu_1647_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1647_ce <= ap_const_logic_1;
        else 
            grp_fu_1647_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1647_p1 <= zext_ln72_reg_1825(2 - 1 downto 0);

    grp_fu_1655_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1655_ce <= ap_const_logic_1;
        else 
            grp_fu_1655_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1655_p0 <= kn_reg_783(11 - 1 downto 0);

    grp_fu_1660_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1660_ce <= ap_const_logic_1;
        else 
            grp_fu_1660_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1660_p0 <= ap_phi_mux_f_10_phi_fu_752_p4(7 - 1 downto 0);

    grp_fu_1666_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1666_ce <= ap_const_logic_1;
        else 
            grp_fu_1666_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1666_p1 <= grp_fu_1666_p10(2 - 1 downto 0);
    grp_fu_1666_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_reg_2025_pp2_iter2_reg),11));

    grp_fu_1675_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1675_ce <= ap_const_logic_1;
        else 
            grp_fu_1675_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1675_p1 <= grp_fu_1675_p10(2 - 1 downto 0);
    grp_fu_1675_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln122_fu_1538_p2),11));

    grp_fu_1683_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1683_ce <= ap_const_logic_1;
        else 
            grp_fu_1683_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln101_fu_1349_p2 <= "1" when (signed(kx_reg_712) < signed(ap_const_lv32_3)) else "0";
    icmp_ln103_fu_1361_p2 <= "1" when (signed(kn_reg_783) < signed(ap_const_lv32_A)) else "0";
    icmp_ln108_fu_1395_p2 <= "1" when (signed(ap_phi_mux_y_12_phi_fu_728_p4) < signed(conv50_reg_1837)) else "0";
    icmp_ln109_fu_1400_p2 <= "1" when (signed(ap_phi_mux_x_12_phi_fu_740_p4) < signed(mapSizeX)) else "0";
    icmp_ln110_fu_1405_p2 <= "1" when (signed(ap_phi_mux_f_10_phi_fu_752_p4) < signed(filterN)) else "0";
    icmp_ln111_fu_1410_p2 <= "1" when (signed(ap_phi_mux_ky_2_phi_fu_764_p4) < signed(kernelSize)) else "0";
    icmp_ln112_fu_1415_p2 <= "1" when (signed(ap_phi_mux_kx_1_phi_fu_775_p4) < signed(kernelSize)) else "0";
    icmp_ln113_fu_1420_p2 <= "1" when (signed(kn_reg_783) < signed(kernelN)) else "0";
    icmp_ln115_1_fu_1443_p2 <= "1" when (signed(ap_phi_mux_x_12_phi_fu_740_p4) < signed(conv63_reg_1842)) else "0";
    icmp_ln115_fu_1437_p2 <= "1" when (or_ln115_1_fu_1431_p2 = ap_const_lv32_0) else "0";
    icmp_ln119_1_fu_1459_p2 <= "1" when (ap_phi_mux_kx_1_phi_fu_775_p4 = sub86_reg_1847) else "0";
    icmp_ln119_fu_1454_p2 <= "1" when (ap_phi_mux_ky_2_phi_fu_764_p4 = sub86_reg_1847) else "0";
    icmp_ln120_1_fu_1475_p2 <= "1" when (ap_phi_mux_f_10_phi_fu_752_p4 = ap_const_lv32_0) else "0";
    icmp_ln120_fu_1470_p2 <= "1" when (signed(ap_phi_mux_y_12_phi_fu_728_p4) < signed(sub91_cast_reg_1862)) else "0";
    icmp_ln125_fu_1487_p2 <= "1" when (kn_reg_783 = sub105_reg_1867) else "0";
    icmp_ln130_fu_1498_p2 <= "1" when (signed(ap_phi_mux_x_12_phi_fu_740_p4) < signed(sext_ln93_reg_1873)) else "0";
    icmp_ln48_fu_1048_p2 <= "1" when (signed(tmp_1_fu_1038_p4) < signed(ap_const_lv27_1)) else "0";
    icmp_ln50_fu_1054_p2 <= "1" when (signed(n_reg_283) < signed(ap_const_lv32_A)) else "0";
    icmp_ln52_fu_1066_p2 <= "1" when (signed(y_2_reg_306) < signed(ap_const_lv32_3)) else "0";
    icmp_ln54_fu_1078_p2 <= "1" when (signed(x_1_reg_341) < signed(ap_const_lv32_3)) else "0";
    icmp_ln57_fu_1084_p2 <= "1" when (signed(f_3_reg_375) < signed(filterN)) else "0";
    icmp_ln58_fu_1089_p2 <= "1" when (signed(n_2_reg_363) < signed(kernelN)) else "0";
    icmp_ln59_fu_1094_p2 <= "1" when (signed(y_1_reg_352) < signed(kernelSize)) else "0";
    icmp_ln60_fu_1099_p2 <= "1" when (signed(x_1_reg_341) < signed(kernelSize)) else "0";
    icmp_ln72_fu_1141_p2 <= "1" when (y_reg_473 = ap_const_lv2_3) else "0";
    icmp_ln74_fu_1231_p2 <= "1" when (signed(tmp_3_fu_1221_p4) < signed(ap_const_lv22_1)) else "0";
    icmp_ln76_fu_1237_p2 <= "1" when (signed(n_5_reg_507) < signed(ap_const_lv32_A)) else "0";
    icmp_ln79_fu_1247_p2 <= "1" when (signed(ap_phi_mux_x_3_phi_fu_499_p4) < signed(mapSizeX)) else "0";
    icmp_ln80_fu_1252_p2 <= "1" when (signed(n_5_reg_507) < signed(kernelN)) else "0";
    icmp_ln93_fu_1287_p2 <= "1" when (signed(tmp_2_fu_1277_p4) < signed(ap_const_lv22_1)) else "0";
    icmp_ln95_fu_1303_p2 <= "1" when (signed(tmp_4_fu_1293_p4) < signed(ap_const_lv22_1)) else "0";
    icmp_ln97_fu_1325_p2 <= "1" when (signed(tmp_5_fu_1315_p4) < signed(ap_const_lv27_1)) else "0";
    icmp_ln99_fu_1337_p2 <= "1" when (signed(ky_reg_653) < signed(ap_const_lv32_3)) else "0";
    kn_2_fu_1521_p2 <= std_logic_vector(unsigned(ap_phi_mux_kn_1_phi_fu_963_p18) + unsigned(ap_const_lv32_1));
    kx_2_fu_1636_p2 <= std_logic_vector(unsigned(kx_1_reg_772) + unsigned(ap_const_lv32_1));
    ky_3_fu_1355_p2 <= std_logic_vector(unsigned(ky_1_reg_701) + unsigned(ap_const_lv32_1));
    n_3_fu_1072_p2 <= std_logic_vector(unsigned(n_1_reg_318) + unsigned(ap_const_lv32_1));
    n_7_fu_1257_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_6_phi_fu_537_p6) + unsigned(ap_const_lv32_1));
    or_ln115_1_fu_1431_p2 <= (or_ln115_fu_1425_p2 or ap_phi_mux_kx_1_phi_fu_775_p4);
    or_ln115_fu_1425_p2 <= (kn_reg_783 or ap_phi_mux_ky_2_phi_fu_764_p4);
        outMapXSize_cast_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapXSize_fu_1165_p2),17));

    outMapXSize_fu_1165_p2 <= std_logic_vector(unsigned(sub_ln91_fu_1161_p2) + unsigned(ap_const_lv16_1));
        outMapYSize_cast_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outMapYSize_fu_1155_p2),17));

    outMapYSize_fu_1155_p2 <= std_logic_vector(unsigned(sub_ln90_fu_1151_p2) + unsigned(ap_const_lv16_1));
        sext_ln93_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub120_fu_1211_p2),32));


    strm_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln54_fu_1078_p2, icmp_ln57_fu_1084_p2, icmp_ln58_fu_1089_p2, icmp_ln59_fu_1094_p2, icmp_ln60_fu_1099_p2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, icmp_ln76_fu_1237_p2, icmp_ln79_fu_1247_p2, icmp_ln80_fu_1252_p2, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, icmp_ln103_fu_1361_p2, icmp_ln108_fu_1395_p2, icmp_ln109_fu_1400_p2, icmp_ln110_fu_1405_p2, icmp_ln111_fu_1410_p2, icmp_ln112_fu_1415_p2, icmp_ln113_fu_1420_p2, and_ln119_fu_1464_p2, and_ln120_fu_1481_p2, strm_in_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((icmp_ln80_fu_1252_p2 = ap_const_lv1_1) and (icmp_ln79_fu_1247_p2 = ap_const_lv1_1) and (icmp_ln76_fu_1237_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln60_fu_1099_p2 = ap_const_lv1_1) and (icmp_ln59_fu_1094_p2 = ap_const_lv1_1) and (icmp_ln58_fu_1089_p2 = ap_const_lv1_1) and (icmp_ln57_fu_1084_p2 = ap_const_lv1_1) and (icmp_ln54_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_lv1_1 = and_ln120_fu_1481_p2) and (ap_const_lv1_1 = and_ln119_fu_1464_p2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln113_fu_1420_p2 = ap_const_lv1_1) and (icmp_ln112_fu_1415_p2 = ap_const_lv1_1) and (icmp_ln111_fu_1410_p2 = ap_const_lv1_1) and (icmp_ln110_fu_1405_p2 = ap_const_lv1_1) and (icmp_ln109_fu_1400_p2 = ap_const_lv1_1) and (icmp_ln108_fu_1395_p2 = ap_const_lv1_1) and (icmp_ln103_fu_1361_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            strm_in_TDATA_blk_n <= strm_in_TVALID_int_regslice;
        else 
            strm_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_TREADY <= regslice_both_strm_in_V_data_V_U_ack_in;

    strm_in_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_predicate_op304_read_state22, ap_block_pp2_stage0_11001, ap_predicate_op125_read_state5, ap_predicate_op183_read_state9, ap_block_pp1_stage0_11001, strm_in_TVALID_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (strm_in_TVALID_int_regslice = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op183_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_predicate_op304_read_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or (not(((ap_predicate_op125_read_state5 = ap_const_boolean_1) and (strm_in_TVALID_int_regslice = ap_const_logic_0))) and (ap_predicate_op125_read_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            strm_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            strm_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_TDATA_blk_n_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp2_iter11, icmp_ln103_reg_1955_pp2_iter10_reg, icmp_ln108_reg_1990_pp2_iter10_reg, icmp_ln109_reg_1994_pp2_iter10_reg, icmp_ln110_reg_1998_pp2_iter10_reg, icmp_ln111_reg_2002_pp2_iter10_reg, icmp_ln112_reg_2006_pp2_iter10_reg, icmp_ln113_reg_2010_pp2_iter10_reg, and_ln119_reg_2030_pp2_iter10_reg, and_ln125_reg_2038_pp2_iter10_reg, ap_enable_reg_pp2_iter12, icmp_ln103_reg_1955_pp2_iter11_reg, icmp_ln108_reg_1990_pp2_iter11_reg, icmp_ln109_reg_1994_pp2_iter11_reg, icmp_ln110_reg_1998_pp2_iter11_reg, icmp_ln111_reg_2002_pp2_iter11_reg, icmp_ln112_reg_2006_pp2_iter11_reg, icmp_ln113_reg_2010_pp2_iter11_reg, and_ln119_reg_2030_pp2_iter11_reg, and_ln125_reg_2038_pp2_iter11_reg, strm_out_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter11_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter11_reg) and (icmp_ln113_reg_2010_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter11_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_lv1_1 = and_ln125_reg_2038_pp2_iter10_reg) and (ap_const_lv1_1 = and_ln119_reg_2030_pp2_iter10_reg) and (icmp_ln113_reg_2010_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln112_reg_2006_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln111_reg_2002_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln110_reg_1998_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln109_reg_1994_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln108_reg_1990_pp2_iter10_reg = ap_const_lv1_1) and (icmp_ln103_reg_1955_pp2_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1)))) then 
            strm_out_TDATA_blk_n <= strm_out_TREADY_int_regslice;
        else 
            strm_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_TDATA_int_regslice <= accum_V_5_fu_1619_p3(32 - 1 downto 0);
    strm_out_TVALID <= regslice_both_strm_out_V_data_V_U_vld_out;

    strm_out_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp2_iter11, ap_predicate_op385_write_state33, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_predicate_op385_write_state33 = ap_const_boolean_1) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1))) then 
            strm_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            strm_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub105_fu_1206_p2 <= std_logic_vector(unsigned(kernelN) + unsigned(ap_const_lv32_FFFFFFFF));
    sub120_fu_1211_p2 <= std_logic_vector(signed(outMapXSize_cast_fu_1183_p1) + signed(ap_const_lv17_1FFFF));
    sub86_fu_1187_p2 <= std_logic_vector(unsigned(kernelSize) + unsigned(ap_const_lv32_FFFFFFFF));
        sub91_cast_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub91_fu_1196_p2),32));

    sub91_fu_1196_p2 <= std_logic_vector(signed(outMapYSize_cast_fu_1175_p1) + signed(ap_const_lv17_1FFFF));
    sub_ln90_fu_1151_p2 <= std_logic_vector(unsigned(empty_28_reg_1767) - unsigned(empty_27_reg_1761));
    sub_ln91_fu_1161_p2 <= std_logic_vector(unsigned(empty_26_reg_1756) - unsigned(empty_27_reg_1761));
    tmp_1_fu_1038_p4 <= f_reg_271(31 downto 5);
    tmp_2_fu_1277_p4 <= y_3_reg_548(31 downto 10);
    tmp_3_fu_1221_p4 <= x_reg_484(31 downto 10);
    tmp_4_fu_1293_p4 <= x_2_reg_571(31 downto 10);
    tmp_5_fu_1315_p4 <= f_6_reg_606(31 downto 5);
    tmp_6_fu_1606_p3 <= accum_V_4_fu_1598_p3(63 downto 63);
    tmpo_last_V_fu_1515_p2 <= (xor_ln130_fu_1509_p2 and xor_ln130_1_fu_1503_p2);
    trunc_ln37_1_fu_1367_p1 <= ap_phi_mux_ky_2_phi_fu_764_p4(7 - 1 downto 0);
    trunc_ln37_2_fu_1371_p1 <= kn_reg_783(7 - 1 downto 0);
    trunc_ln37_4_fu_1531_p1 <= kx_1_reg_772(11 - 1 downto 0);
    trunc_ln37_5_fu_1379_p1 <= ap_phi_mux_x_12_phi_fu_740_p4(11 - 1 downto 0);
    trunc_ln37_6_fu_1383_p1 <= ap_phi_mux_y_12_phi_fu_728_p4(2 - 1 downto 0);
    trunc_ln37_7_fu_1387_p1 <= ap_phi_mux_ky_2_phi_fu_764_p4(2 - 1 downto 0);
    trunc_ln37_fu_1527_p1 <= kx_1_reg_772(7 - 1 downto 0);
    trunc_ln76_fu_1263_p1 <= x_3_reg_496(11 - 1 downto 0);
    x_10_fu_1123_p2 <= std_logic_vector(unsigned(ap_phi_mux_x_4_phi_fu_390_p10) + unsigned(ap_const_lv32_1));
    x_5_fu_1271_p2 <= std_logic_vector(unsigned(x_3_reg_496) + unsigned(ap_const_lv32_1));
    x_7_fu_1331_p2 <= std_logic_vector(unsigned(x_6_reg_595) + unsigned(ap_const_lv32_1));
    xor_ln130_1_fu_1503_p2 <= (icmp_ln130_fu_1498_p2 xor ap_const_lv1_1);
    xor_ln130_fu_1509_p2 <= (icmp_ln120_fu_1470_p2 xor ap_const_lv1_1);
    y_5_fu_1135_p2 <= std_logic_vector(unsigned(y_reg_473) + unsigned(ap_const_lv2_1));
    y_7_fu_1129_p2 <= std_logic_vector(unsigned(y_1_reg_352) + unsigned(ap_const_lv32_1));
    y_8_fu_1309_p2 <= std_logic_vector(unsigned(y_6_reg_560) + unsigned(ap_const_lv32_1));
    zext_ln116_1_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1683_p4),64));
    zext_ln116_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_2_reg_2067),64));
    zext_ln122_fu_1563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln122_1_reg_2072),64));
    zext_ln63_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(count_fu_140),64));
    zext_ln72_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_473),11));
    zext_ln83_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1647_p4),64));
end behav;
